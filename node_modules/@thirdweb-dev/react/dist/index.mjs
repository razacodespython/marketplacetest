var j=Object.defineProperty,R=Object.defineProperties;var V=Object.getOwnPropertyDescriptors;var U=Object.getOwnPropertySymbols;var q=Object.prototype.hasOwnProperty,H=Object.prototype.propertyIsEnumerable;var D=(e,t,n)=>t in e?j(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,f=(e,t)=>{for(var n in t||(t={}))q.call(t,n)&&D(e,n,t[n]);if(U)for(var n of U(t))H.call(t,n)&&D(e,n,t[n]);return e},x=(e,t)=>R(e,V(t));var r=(e,t)=>j(e,"name",{value:t,configurable:!0});import w,{createContext as O,useEffect as Q,useMemo as g}from"react";import{ThirdwebSDK as Y}from"@thirdweb-dev/sdk";import{WagmiProvider as Z,useProvider as $}from"wagmi";import{useAccount as G,useNetwork as X,useSigner as z}from"wagmi";import{Signer as B}from"ethers";import{useEffect as W,useRef as L}from"react";function _(){var b,k,v,S,i;let[e,t]=z(),[n]=G(),[u]=X(),m=L(null),h=(b=n.data)==null?void 0:b.address,d=(k=u.data.chain)==null?void 0:k.id,C=I((v=n.data)==null?void 0:v.address),p=I((i=(S=u.data)==null?void 0:S.chain)==null?void 0:i.id);return W(()=>{if(h!==C||d!==p)if(m.current)m.current=t().finally(()=>{m.current=null});else return},[h,d,C,p]),B.isSigner(e.data)?e.data:void 0}r(_,"useSigner");function I(e){let t=L();return W(()=>{t.current=e},[e]),t.current}r(I,"usePrevious");import K from"tiny-invariant";import{InjectedConnector as ee}from"wagmi/connectors/injected";import{WalletConnectConnector as te}from"wagmi/connectors/walletConnect";import{WalletLinkConnector as re}from"wagmi/connectors/walletLink";var J={mainnet:{id:1,name:"Mainnet",nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},rpcUrls:["https://mainnet.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161"],blockExplorers:[{name:"Etherscan",url:"https://etherscan.io"}]},rinkeby:{id:4,name:"Rinkeby",nativeCurrency:{name:"Rinkeby Ether",symbol:"rETH",decimals:18},rpcUrls:["https://rinkeby.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161"],blockExplorers:[{name:"Etherscan",url:"https://rinkeby.etherscan.io"}],testnet:!0},goerli:{id:5,name:"Goerli",nativeCurrency:{name:"Goerli Ether",symbol:"gETH",decimals:18},rpcUrls:["https://goerli.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161"],blockExplorers:[{name:"Etherscan",url:"https://goerli.etherscan.io"}],testnet:!0},polygonMainnet:{id:137,name:"Polygon Mainnet",nativeCurrency:{name:"Matic",symbol:"MATIC",decimals:18},rpcUrls:["https://polygon-rpc.com","https://rpc-mainnet.matic.network","https://matic-mainnet.chainstacklabs.com","https://rpc-mainnet.maticvigil.com","https://rpc-mainnet.matic.quiknode.pro","https://matic-mainnet-full-rpc.bwarelabs.com"],blockExplorers:[{name:"Polygonscan",url:"https://polygonscan.com"}]},polygonTestnetMumbai:{id:80001,name:"Polygon Testnet Mumbai",nativeCurrency:{name:"Matic",symbol:"MATIC",decimals:18},rpcUrls:["https://matic-mumbai.chainstacklabs.com","https://rpc-mumbai.maticvigil.com","https://matic-testnet-archive-rpc.bwarelabs.com"],blockExplorers:[{name:"Polygonscan",url:"https://mumbai.polygonscan.com"}],testnet:!0},avalanche:{id:43114,name:"Avalanche",nativeCurrency:{name:"AVAX",symbol:"AVAX",decimals:18},rpcUrls:["https://api.avax.network/ext/bc/C/rpc"],blockExplorers:[{name:"SnowTrace",url:"https://snowtrace.io/"}],testnet:!1},fantom:{id:250,name:"Fantom Opera",nativeCurrency:{name:"Fantom",symbol:"FTM",decimals:18},rpcUrls:["https://rpc.ftm.tools"],blockExplorerUrls:[{name:"FTMScan",url:"https://ftmscan.com/"}],testnet:!1}},T=Object.values(J);function E(){return E=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var u in n)Object.prototype.hasOwnProperty.call(n,u)&&(e[u]=n[u])}return e},E.apply(this,arguments)}r(E,"_extends");var ne={1:"https://mainnet.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161",4:"https://rinkeby.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161",5:"https://goerli.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161",137:"https://polygon-rpc.com",250:"https://rpc.ftm.tools",43114:"https://api.avax.network/ext/bc/C/rpc",80001:"https://rpc-mumbai.maticvigil.com"},oe={name:"thirdweb powered dApp"},ie=["metamask","walletConnect","walletLink"],Ie=r(({sdkOptions:e,chainRpc:t=ne,supportedChains:n=T.map(p=>p.id),walletConnectors:u=ie,dAppMeta:m=oe,desiredChainId:h,storageInterface:d,children:C})=>{let p=g(()=>n.map(i=>typeof i=="number"?T.find(l=>l.id===i):i).filter(i=>i!==void 0),[n]),b=g(()=>p.reduce((i,l)=>(i[l.id]=l.id in t&&t[l.id]||l.rpcUrls[0],i),{}),[t,p]),k=g(()=>{let i={name:m.name,url:m.url||"",icons:[m.logoUrl||""],description:m.description||""},l={appName:m.name,appLogoUrl:m.logoUrl,darkMode:m.isDarkMode};return{autoConnect:!0,connectorStorageKey:"tw:provider:connectors",connectors:({chainId:P})=>u.map(o=>typeof o=="string"&&(o==="injected"||o==="metamask")||typeof o=="object"&&(o.name==="injected"||o.name==="metamask")?new ee({options:typeof o=="string"?{shimDisconnect:!0}:o.options,chains:p}):typeof o=="string"&&o==="walletConnect"||typeof o=="object"&&o.name==="walletConnect"?new te({options:typeof o=="string"?{chainId:P,rpc:b,clientMeta:i,qrcode:!0}:f({chainId:P,rpc:b,clientMeta:i,qrcode:!0},o.options),chains:p}):typeof o=="string"&&(o==="coinbase"||o==="walletLink")||typeof o=="object"&&(o.name==="coinbase"||o.name==="walletLink")?new re({chains:p,options:typeof o=="string"?x(f({},l),{jsonRpcUrl:b[P||-1]||void 0}):f(x(f({},l),{jsonRpcUrl:b[P||-1]||void 0}),o.options)}):null).filter(o=>o!==null)}},[u,p,m]),v=b[h||-1],S=g(()=>{var l;let i=e;return x(f({},i),{readonlySettings:x(f({},(i==null?void 0:i.readonlySettings)||{}),{rpcUrl:(l=i==null?void 0:i.readonlySettings)!=null&&l.rpcUrl?i.readonlySettings.rpcUrl:v})})},[e,v]);return w.createElement(Z,E({},k),w.createElement(ae,{desiredChainId:h,sdkOptions:S,storageInterface:d},C))},"ThirdwebProvider"),M=O({desiredChainId:-1}),ae=r(({sdkOptions:e,desiredChainId:t,storageInterface:n,children:u})=>{let m=$(),h=_(),d=g(()=>{if(!t||typeof window>"u")return;let p=new Y(m,e,n);return p._chainId=t,p},[m,e,n,t]);Q(()=>{h&&d&&d._chainId===t&&d.updateSignerOrProvider(h)},[h,d,t]);let C=g(()=>({sdk:d,desiredChainId:t||-1,_inProvider:!0}),[d]);return w.createElement(M.Provider,{value:C},u)},"ThirdwebSDKProvider");function N(){let e=w.useContext(M);return K(e._inProvider,"useSDK must be called from within a ThirdwebProvider, did you forget to wrap your app in a <ThirdwebProvider />?"),e.sdk}r(N,"useSDK");function A(){let e=w.useContext(M);return K(e._inProvider,"useDesiredChainId must be called from within a ThirdwebProvider, did you forget to wrap your app in a <ThirdwebProvider />?"),e.desiredChainId}r(A,"useDesiredChainId");function c(e,t){let n=N();if(!(!n||!t))return n.getContract(t,e)}r(c,"useContract");function Ne(e){return c("edition-drop",e)}r(Ne,"useEditionDrop");function Re(e){return c("edition",e)}r(Re,"useEdition");function He(e){return c("nft-drop",e)}r(He,"useNFTDrop");function ze(e){return c("marketplace",e)}r(ze,"useMarketplace");function Oe(e){return c("nft-collection",e)}r(Oe,"useNFTCollection");function Ze(e){return c("pack",e)}r(Ze,"usePack");function tt(e){return c("token",e)}r(tt,"useToken");function ot(e){return c("vote",e)}r(ot,"useVote");function st(e){return c("split",e)}r(st,"useSplit");import{useAccount as se}from"wagmi";function vt(){let[,e]=se();return e}r(vt,"useDisconnect");import{useConnect as ce}from"wagmi";function y(){return ce()}r(y,"useConnect");import{useAccount as ue}from"wagmi";function Tt(){var t;let[e]=ue();return(t=e.data)==null?void 0:t.address}r(Tt,"useAddress");import{ThirdwebSDK as me}from"@thirdweb-dev/sdk";import{useMemo as pe}from"react";function Dt(e,t,n){return pe(()=>new me(e,x(f({},t),{readonlySettings:x(f({},t==null?void 0:t.readonlySettings),{rpcUrl:e})}),n),[e,t])}r(Dt,"useReadonlySDK");import le from"tiny-invariant";function Lt(){let[e,t]=y();if(e.loading)return()=>Promise.reject("Metamask connector not ready to be used, yet");let n=e.data.connectors.find(u=>u.id==="injected");return le(n,"Metamask connector not found, please make sure it is provided to your <ThirdwebProvider />"),()=>t(n)}r(Lt,"useMetamask");import de from"tiny-invariant";function At(){let[e,t]=y();if(e.loading)return()=>Promise.reject("WalletConnect connector not ready to be used, yet");let n=e.data.connectors.find(u=>u.id==="walletConnect");return de(n,"WalletConnect connector not found, please make sure it is provided to your <ThirdwebProvider />"),()=>t(n)}r(At,"useWalletConnect");import fe from"tiny-invariant";function he(){let[e,t]=y();if(e.loading)return()=>Promise.reject("WalletLink / Coinbase connector not ready to be used, yet");let n=e.data.connectors.find(u=>u.id==="walletLink");return fe(n,"WalletLink / Coinbase connector not found, please make sure it is provided to your <ThirdwebProvider />"),()=>t(n)}r(he,"useWalletLink");function qt(){return he()}r(qt,"useCoinbaseWallet");import{useNetwork as be}from"wagmi";function F(){var e;return(e=be()["0"].data.chain)==null?void 0:e.id}r(F,"useChainId");function Jt(){let e=A(),t=F();return e===-1?(console.warn("useNetworkMismatch: desiredChainId is -1, this is not a valid chainId, please provide a valid chainId to the <ThirdwebProvider />"),!1):t?e!==t:(console.debug("useNetworkMismatch: activeChainId is undefined, this means there is no wallet connected yet"),!1)}r(Jt,"useNetworkMismatch");import{defaultChains as mr,defaultL2Chains as pr,useAccount as lr,useNetwork as dr}from"wagmi";import{ChainId as hr,IpfsStorage as br}from"@thirdweb-dev/sdk";export{hr as ChainId,br as IpfsStorage,Ie as ThirdwebProvider,mr as defaultChains,pr as defaultL2Chains,lr as useAccount,Tt as useAddress,F as useChainId,qt as useCoinbaseWallet,y as useConnect,c as useContract,A as useDesiredChainId,vt as useDisconnect,Re as useEdition,Ne as useEditionDrop,ze as useMarketplace,Lt as useMetamask,Oe as useNFTCollection,He as useNFTDrop,dr as useNetwork,Jt as useNetworkMismatch,Ze as usePack,Dt as useReadonlySDK,N as useSDK,_ as useSigner,st as useSplit,tt as useToken,ot as useVote,At as useWalletConnect,he as useWalletLink};
//# sourceMappingURL=index.mjs.map