{"version":3,"sources":["../typechain/LinkTokenInterface.ts"],"sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport {\n  BaseContract,\n  BigNumber,\n  BigNumberish,\n  BytesLike,\n  CallOverrides,\n  ContractTransaction,\n  Overrides,\n  PopulatedTransaction,\n  Signer,\n  utils,\n} from \"ethers\";\nimport { FunctionFragment, Result } from \"@ethersproject/abi\";\nimport { Listener, Provider } from \"@ethersproject/providers\";\nimport { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from \"./common\";\n\nexport interface LinkTokenInterfaceInterface extends utils.Interface {\n  contractName: string | \"LinkTokenInterface\";\n  functions: {\n    \"allowance(address,address)\": FunctionFragment;\n    \"approve(address,uint256)\": FunctionFragment;\n    \"balanceOf(address)\": FunctionFragment;\n    \"decimals()\": FunctionFragment;\n    \"decreaseApproval(address,uint256)\": FunctionFragment;\n    \"increaseApproval(address,uint256)\": FunctionFragment;\n    \"name()\": FunctionFragment;\n    \"symbol()\": FunctionFragment;\n    \"totalSupply()\": FunctionFragment;\n    \"transfer(address,uint256)\": FunctionFragment;\n    \"transferAndCall(address,uint256,bytes)\": FunctionFragment;\n    \"transferFrom(address,address,uint256)\": FunctionFragment;\n  };\n\n  encodeFunctionData(\n    functionFragment: \"allowance\",\n    values: [string, string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"approve\",\n    values: [string, BigNumberish]\n  ): string;\n  encodeFunctionData(functionFragment: \"balanceOf\", values: [string]): string;\n  encodeFunctionData(functionFragment: \"decimals\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"decreaseApproval\",\n    values: [string, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"increaseApproval\",\n    values: [string, BigNumberish]\n  ): string;\n  encodeFunctionData(functionFragment: \"name\", values?: undefined): string;\n  encodeFunctionData(functionFragment: \"symbol\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"totalSupply\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"transfer\",\n    values: [string, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"transferAndCall\",\n    values: [string, BigNumberish, BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"transferFrom\",\n    values: [string, string, BigNumberish]\n  ): string;\n\n  decodeFunctionResult(functionFragment: \"allowance\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"approve\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"balanceOf\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"decimals\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"decreaseApproval\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"increaseApproval\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"name\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"symbol\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"totalSupply\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"transfer\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"transferAndCall\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"transferFrom\",\n    data: BytesLike\n  ): Result;\n\n  events: {};\n}\n\nexport interface LinkTokenInterface extends BaseContract {\n  contractName: string | \"LinkTokenInterface\";\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: LinkTokenInterfaceInterface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(\n    eventFilter: TypedEventFilter<TEvent>\n  ): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {\n    allowance(\n      owner: string,\n      spender: string,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber] & { remaining: BigNumber }>;\n\n    approve(\n      spender: string,\n      value: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    balanceOf(\n      owner: string,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber] & { balance: BigNumber }>;\n\n    decimals(\n      overrides?: CallOverrides\n    ): Promise<[number] & { decimalPlaces: number }>;\n\n    decreaseApproval(\n      spender: string,\n      addedValue: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    increaseApproval(\n      spender: string,\n      subtractedValue: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    name(overrides?: CallOverrides): Promise<[string] & { tokenName: string }>;\n\n    symbol(\n      overrides?: CallOverrides\n    ): Promise<[string] & { tokenSymbol: string }>;\n\n    totalSupply(\n      overrides?: CallOverrides\n    ): Promise<[BigNumber] & { totalTokensIssued: BigNumber }>;\n\n    transfer(\n      to: string,\n      value: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    transferAndCall(\n      to: string,\n      value: BigNumberish,\n      data: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    transferFrom(\n      from: string,\n      to: string,\n      value: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n  };\n\n  allowance(\n    owner: string,\n    spender: string,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  approve(\n    spender: string,\n    value: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  balanceOf(owner: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n  decimals(overrides?: CallOverrides): Promise<number>;\n\n  decreaseApproval(\n    spender: string,\n    addedValue: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  increaseApproval(\n    spender: string,\n    subtractedValue: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  name(overrides?: CallOverrides): Promise<string>;\n\n  symbol(overrides?: CallOverrides): Promise<string>;\n\n  totalSupply(overrides?: CallOverrides): Promise<BigNumber>;\n\n  transfer(\n    to: string,\n    value: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  transferAndCall(\n    to: string,\n    value: BigNumberish,\n    data: BytesLike,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  transferFrom(\n    from: string,\n    to: string,\n    value: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  callStatic: {\n    allowance(\n      owner: string,\n      spender: string,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    approve(\n      spender: string,\n      value: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    balanceOf(owner: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n    decimals(overrides?: CallOverrides): Promise<number>;\n\n    decreaseApproval(\n      spender: string,\n      addedValue: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    increaseApproval(\n      spender: string,\n      subtractedValue: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    name(overrides?: CallOverrides): Promise<string>;\n\n    symbol(overrides?: CallOverrides): Promise<string>;\n\n    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;\n\n    transfer(\n      to: string,\n      value: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    transferAndCall(\n      to: string,\n      value: BigNumberish,\n      data: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    transferFrom(\n      from: string,\n      to: string,\n      value: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n  };\n\n  filters: {};\n\n  estimateGas: {\n    allowance(\n      owner: string,\n      spender: string,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    approve(\n      spender: string,\n      value: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    balanceOf(owner: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n    decimals(overrides?: CallOverrides): Promise<BigNumber>;\n\n    decreaseApproval(\n      spender: string,\n      addedValue: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    increaseApproval(\n      spender: string,\n      subtractedValue: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    name(overrides?: CallOverrides): Promise<BigNumber>;\n\n    symbol(overrides?: CallOverrides): Promise<BigNumber>;\n\n    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;\n\n    transfer(\n      to: string,\n      value: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    transferAndCall(\n      to: string,\n      value: BigNumberish,\n      data: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    transferFrom(\n      from: string,\n      to: string,\n      value: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n  };\n\n  populateTransaction: {\n    allowance(\n      owner: string,\n      spender: string,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    approve(\n      spender: string,\n      value: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    balanceOf(\n      owner: string,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    decimals(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    decreaseApproval(\n      spender: string,\n      addedValue: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    increaseApproval(\n      spender: string,\n      subtractedValue: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    name(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    symbol(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    totalSupply(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    transfer(\n      to: string,\n      value: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    transferAndCall(\n      to: string,\n      value: BigNumberish,\n      data: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    transferFrom(\n      from: string,\n      to: string,\n      value: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n  };\n}\n"],"mappings":"odAAA","names":[]}