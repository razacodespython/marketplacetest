{"version":3,"sources":["../typechain/TokenERC20.ts"],"sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport {\n  BaseContract,\n  BigNumber,\n  BigNumberish,\n  BytesLike,\n  CallOverrides,\n  ContractTransaction,\n  Overrides,\n  PayableOverrides,\n  PopulatedTransaction,\n  Signer,\n  utils,\n} from \"ethers\";\nimport { FunctionFragment, Result, EventFragment } from \"@ethersproject/abi\";\nimport { Listener, Provider } from \"@ethersproject/providers\";\nimport { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from \"./common\";\n\nexport declare namespace ITokenERC20 {\n  export type MintRequestStruct = {\n    to: string;\n    primarySaleRecipient: string;\n    quantity: BigNumberish;\n    price: BigNumberish;\n    currency: string;\n    validityStartTimestamp: BigNumberish;\n    validityEndTimestamp: BigNumberish;\n    uid: BytesLike;\n  };\n\n  export type MintRequestStructOutput = [\n    string,\n    string,\n    BigNumber,\n    BigNumber,\n    string,\n    BigNumber,\n    BigNumber,\n    string\n  ] & {\n    to: string;\n    primarySaleRecipient: string;\n    quantity: BigNumber;\n    price: BigNumber;\n    currency: string;\n    validityStartTimestamp: BigNumber;\n    validityEndTimestamp: BigNumber;\n    uid: string;\n  };\n}\n\nexport declare namespace ERC20VotesUpgradeable {\n  export type CheckpointStruct = {\n    fromBlock: BigNumberish;\n    votes: BigNumberish;\n  };\n\n  export type CheckpointStructOutput = [number, BigNumber] & {\n    fromBlock: number;\n    votes: BigNumber;\n  };\n}\n\nexport interface TokenERC20Interface extends utils.Interface {\n  contractName: string | \"TokenERC20\";\n  functions: {\n    \"DEFAULT_ADMIN_ROLE()\": FunctionFragment;\n    \"DOMAIN_SEPARATOR()\": FunctionFragment;\n    \"allowance(address,address)\": FunctionFragment;\n    \"approve(address,uint256)\": FunctionFragment;\n    \"balanceOf(address)\": FunctionFragment;\n    \"burn(uint256)\": FunctionFragment;\n    \"burnFrom(address,uint256)\": FunctionFragment;\n    \"checkpoints(address,uint32)\": FunctionFragment;\n    \"contractType()\": FunctionFragment;\n    \"contractURI()\": FunctionFragment;\n    \"contractVersion()\": FunctionFragment;\n    \"decimals()\": FunctionFragment;\n    \"decreaseAllowance(address,uint256)\": FunctionFragment;\n    \"delegate(address)\": FunctionFragment;\n    \"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\": FunctionFragment;\n    \"delegates(address)\": FunctionFragment;\n    \"getPastTotalSupply(uint256)\": FunctionFragment;\n    \"getPastVotes(address,uint256)\": FunctionFragment;\n    \"getPlatformFeeInfo()\": FunctionFragment;\n    \"getRoleAdmin(bytes32)\": FunctionFragment;\n    \"getRoleMember(bytes32,uint256)\": FunctionFragment;\n    \"getRoleMemberCount(bytes32)\": FunctionFragment;\n    \"getVotes(address)\": FunctionFragment;\n    \"grantRole(bytes32,address)\": FunctionFragment;\n    \"hasRole(bytes32,address)\": FunctionFragment;\n    \"increaseAllowance(address,uint256)\": FunctionFragment;\n    \"initialize(address,string,string,string,address[],address,address,uint256)\": FunctionFragment;\n    \"isTrustedForwarder(address)\": FunctionFragment;\n    \"mintTo(address,uint256)\": FunctionFragment;\n    \"mintWithSignature((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)\": FunctionFragment;\n    \"multicall(bytes[])\": FunctionFragment;\n    \"name()\": FunctionFragment;\n    \"nonces(address)\": FunctionFragment;\n    \"numCheckpoints(address)\": FunctionFragment;\n    \"pause()\": FunctionFragment;\n    \"paused()\": FunctionFragment;\n    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\": FunctionFragment;\n    \"primarySaleRecipient()\": FunctionFragment;\n    \"renounceRole(bytes32,address)\": FunctionFragment;\n    \"revokeRole(bytes32,address)\": FunctionFragment;\n    \"setContractURI(string)\": FunctionFragment;\n    \"setPlatformFeeInfo(address,uint256)\": FunctionFragment;\n    \"setPrimarySaleRecipient(address)\": FunctionFragment;\n    \"supportsInterface(bytes4)\": FunctionFragment;\n    \"symbol()\": FunctionFragment;\n    \"totalSupply()\": FunctionFragment;\n    \"transfer(address,uint256)\": FunctionFragment;\n    \"transferFrom(address,address,uint256)\": FunctionFragment;\n    \"unpause()\": FunctionFragment;\n    \"verify((address,address,uint256,uint256,address,uint128,uint128,bytes32),bytes)\": FunctionFragment;\n  };\n\n  encodeFunctionData(\n    functionFragment: \"DEFAULT_ADMIN_ROLE\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"DOMAIN_SEPARATOR\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"allowance\",\n    values: [string, string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"approve\",\n    values: [string, BigNumberish]\n  ): string;\n  encodeFunctionData(functionFragment: \"balanceOf\", values: [string]): string;\n  encodeFunctionData(functionFragment: \"burn\", values: [BigNumberish]): string;\n  encodeFunctionData(\n    functionFragment: \"burnFrom\",\n    values: [string, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"checkpoints\",\n    values: [string, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractType\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractURI\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractVersion\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(functionFragment: \"decimals\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"decreaseAllowance\",\n    values: [string, BigNumberish]\n  ): string;\n  encodeFunctionData(functionFragment: \"delegate\", values: [string]): string;\n  encodeFunctionData(\n    functionFragment: \"delegateBySig\",\n    values: [\n      string,\n      BigNumberish,\n      BigNumberish,\n      BigNumberish,\n      BytesLike,\n      BytesLike\n    ]\n  ): string;\n  encodeFunctionData(functionFragment: \"delegates\", values: [string]): string;\n  encodeFunctionData(\n    functionFragment: \"getPastTotalSupply\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getPastVotes\",\n    values: [string, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getPlatformFeeInfo\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRoleAdmin\",\n    values: [BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRoleMember\",\n    values: [BytesLike, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRoleMemberCount\",\n    values: [BytesLike]\n  ): string;\n  encodeFunctionData(functionFragment: \"getVotes\", values: [string]): string;\n  encodeFunctionData(\n    functionFragment: \"grantRole\",\n    values: [BytesLike, string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"hasRole\",\n    values: [BytesLike, string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"increaseAllowance\",\n    values: [string, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"initialize\",\n    values: [\n      string,\n      string,\n      string,\n      string,\n      string[],\n      string,\n      string,\n      BigNumberish\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isTrustedForwarder\",\n    values: [string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"mintTo\",\n    values: [string, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"mintWithSignature\",\n    values: [ITokenERC20.MintRequestStruct, BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"multicall\",\n    values: [BytesLike[]]\n  ): string;\n  encodeFunctionData(functionFragment: \"name\", values?: undefined): string;\n  encodeFunctionData(functionFragment: \"nonces\", values: [string]): string;\n  encodeFunctionData(\n    functionFragment: \"numCheckpoints\",\n    values: [string]\n  ): string;\n  encodeFunctionData(functionFragment: \"pause\", values?: undefined): string;\n  encodeFunctionData(functionFragment: \"paused\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"permit\",\n    values: [\n      string,\n      string,\n      BigNumberish,\n      BigNumberish,\n      BigNumberish,\n      BytesLike,\n      BytesLike\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"primarySaleRecipient\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"renounceRole\",\n    values: [BytesLike, string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"revokeRole\",\n    values: [BytesLike, string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setContractURI\",\n    values: [string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setPlatformFeeInfo\",\n    values: [string, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setPrimarySaleRecipient\",\n    values: [string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"supportsInterface\",\n    values: [BytesLike]\n  ): string;\n  encodeFunctionData(functionFragment: \"symbol\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"totalSupply\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"transfer\",\n    values: [string, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"transferFrom\",\n    values: [string, string, BigNumberish]\n  ): string;\n  encodeFunctionData(functionFragment: \"unpause\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"verify\",\n    values: [ITokenERC20.MintRequestStruct, BytesLike]\n  ): string;\n\n  decodeFunctionResult(\n    functionFragment: \"DEFAULT_ADMIN_ROLE\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"DOMAIN_SEPARATOR\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"allowance\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"approve\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"balanceOf\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"burn\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"burnFrom\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"checkpoints\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractType\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractURI\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractVersion\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"decimals\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"decreaseAllowance\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"delegate\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"delegateBySig\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"delegates\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"getPastTotalSupply\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getPastVotes\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getPlatformFeeInfo\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getRoleAdmin\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getRoleMember\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getRoleMemberCount\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"getVotes\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"grantRole\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"hasRole\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"increaseAllowance\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"initialize\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"isTrustedForwarder\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"mintTo\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"mintWithSignature\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"multicall\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"name\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"nonces\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"numCheckpoints\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"pause\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"paused\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"permit\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"primarySaleRecipient\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"renounceRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"revokeRole\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"setContractURI\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setPlatformFeeInfo\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setPrimarySaleRecipient\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"supportsInterface\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"symbol\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"totalSupply\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"transfer\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"transferFrom\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"unpause\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"verify\", data: BytesLike): Result;\n\n  events: {\n    \"Approval(address,address,uint256)\": EventFragment;\n    \"DelegateChanged(address,address,address)\": EventFragment;\n    \"DelegateVotesChanged(address,uint256,uint256)\": EventFragment;\n    \"Paused(address)\": EventFragment;\n    \"PlatformFeeInfoUpdated(address,uint256)\": EventFragment;\n    \"PrimarySaleRecipientUpdated(address)\": EventFragment;\n    \"RoleAdminChanged(bytes32,bytes32,bytes32)\": EventFragment;\n    \"RoleGranted(bytes32,address,address)\": EventFragment;\n    \"RoleRevoked(bytes32,address,address)\": EventFragment;\n    \"TokensMinted(address,uint256)\": EventFragment;\n    \"TokensMintedWithSignature(address,address,tuple)\": EventFragment;\n    \"Transfer(address,address,uint256)\": EventFragment;\n    \"Unpaused(address)\": EventFragment;\n  };\n\n  getEvent(nameOrSignatureOrTopic: \"Approval\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"DelegateChanged\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"DelegateVotesChanged\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"Paused\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"PlatformFeeInfoUpdated\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"PrimarySaleRecipientUpdated\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"RoleAdminChanged\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"RoleGranted\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"RoleRevoked\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"TokensMinted\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"TokensMintedWithSignature\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"Transfer\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"Unpaused\"): EventFragment;\n}\n\nexport type ApprovalEvent = TypedEvent<\n  [string, string, BigNumber],\n  { owner: string; spender: string; value: BigNumber }\n>;\n\nexport type ApprovalEventFilter = TypedEventFilter<ApprovalEvent>;\n\nexport type DelegateChangedEvent = TypedEvent<\n  [string, string, string],\n  { delegator: string; fromDelegate: string; toDelegate: string }\n>;\n\nexport type DelegateChangedEventFilter = TypedEventFilter<DelegateChangedEvent>;\n\nexport type DelegateVotesChangedEvent = TypedEvent<\n  [string, BigNumber, BigNumber],\n  { delegate: string; previousBalance: BigNumber; newBalance: BigNumber }\n>;\n\nexport type DelegateVotesChangedEventFilter =\n  TypedEventFilter<DelegateVotesChangedEvent>;\n\nexport type PausedEvent = TypedEvent<[string], { account: string }>;\n\nexport type PausedEventFilter = TypedEventFilter<PausedEvent>;\n\nexport type PlatformFeeInfoUpdatedEvent = TypedEvent<\n  [string, BigNumber],\n  { platformFeeRecipient: string; platformFeeBps: BigNumber }\n>;\n\nexport type PlatformFeeInfoUpdatedEventFilter =\n  TypedEventFilter<PlatformFeeInfoUpdatedEvent>;\n\nexport type PrimarySaleRecipientUpdatedEvent = TypedEvent<\n  [string],\n  { recipient: string }\n>;\n\nexport type PrimarySaleRecipientUpdatedEventFilter =\n  TypedEventFilter<PrimarySaleRecipientUpdatedEvent>;\n\nexport type RoleAdminChangedEvent = TypedEvent<\n  [string, string, string],\n  { role: string; previousAdminRole: string; newAdminRole: string }\n>;\n\nexport type RoleAdminChangedEventFilter =\n  TypedEventFilter<RoleAdminChangedEvent>;\n\nexport type RoleGrantedEvent = TypedEvent<\n  [string, string, string],\n  { role: string; account: string; sender: string }\n>;\n\nexport type RoleGrantedEventFilter = TypedEventFilter<RoleGrantedEvent>;\n\nexport type RoleRevokedEvent = TypedEvent<\n  [string, string, string],\n  { role: string; account: string; sender: string }\n>;\n\nexport type RoleRevokedEventFilter = TypedEventFilter<RoleRevokedEvent>;\n\nexport type TokensMintedEvent = TypedEvent<\n  [string, BigNumber],\n  { mintedTo: string; quantityMinted: BigNumber }\n>;\n\nexport type TokensMintedEventFilter = TypedEventFilter<TokensMintedEvent>;\n\nexport type TokensMintedWithSignatureEvent = TypedEvent<\n  [string, string, ITokenERC20.MintRequestStructOutput],\n  {\n    signer: string;\n    mintedTo: string;\n    mintRequest: ITokenERC20.MintRequestStructOutput;\n  }\n>;\n\nexport type TokensMintedWithSignatureEventFilter =\n  TypedEventFilter<TokensMintedWithSignatureEvent>;\n\nexport type TransferEvent = TypedEvent<\n  [string, string, BigNumber],\n  { from: string; to: string; value: BigNumber }\n>;\n\nexport type TransferEventFilter = TypedEventFilter<TransferEvent>;\n\nexport type UnpausedEvent = TypedEvent<[string], { account: string }>;\n\nexport type UnpausedEventFilter = TypedEventFilter<UnpausedEvent>;\n\nexport interface TokenERC20 extends BaseContract {\n  contractName: string | \"TokenERC20\";\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: TokenERC20Interface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(\n    eventFilter: TypedEventFilter<TEvent>\n  ): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {\n    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<[string]>;\n\n    DOMAIN_SEPARATOR(overrides?: CallOverrides): Promise<[string]>;\n\n    allowance(\n      owner: string,\n      spender: string,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    approve(\n      spender: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    balanceOf(account: string, overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    burn(\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    burnFrom(\n      account: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    checkpoints(\n      account: string,\n      pos: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<[ERC20VotesUpgradeable.CheckpointStructOutput]>;\n\n    contractType(overrides?: CallOverrides): Promise<[string]>;\n\n    contractURI(overrides?: CallOverrides): Promise<[string]>;\n\n    contractVersion(overrides?: CallOverrides): Promise<[number]>;\n\n    decimals(overrides?: CallOverrides): Promise<[number]>;\n\n    decreaseAllowance(\n      spender: string,\n      subtractedValue: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    delegate(\n      delegatee: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    delegateBySig(\n      delegatee: string,\n      nonce: BigNumberish,\n      expiry: BigNumberish,\n      v: BigNumberish,\n      r: BytesLike,\n      s: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    delegates(account: string, overrides?: CallOverrides): Promise<[string]>;\n\n    getPastTotalSupply(\n      blockNumber: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    getPastVotes(\n      account: string,\n      blockNumber: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    getPlatformFeeInfo(overrides?: CallOverrides): Promise<[string, number]>;\n\n    getRoleAdmin(role: BytesLike, overrides?: CallOverrides): Promise<[string]>;\n\n    getRoleMember(\n      role: BytesLike,\n      index: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<[string]>;\n\n    getRoleMemberCount(\n      role: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    getVotes(account: string, overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    grantRole(\n      role: BytesLike,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    hasRole(\n      role: BytesLike,\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    increaseAllowance(\n      spender: string,\n      addedValue: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    initialize(\n      _defaultAdmin: string,\n      _name: string,\n      _symbol: string,\n      _contractURI: string,\n      _trustedForwarders: string[],\n      _primarySaleRecipient: string,\n      _platformFeeRecipient: string,\n      _platformFeeBps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    isTrustedForwarder(\n      forwarder: string,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    mintTo(\n      to: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    mintWithSignature(\n      _req: ITokenERC20.MintRequestStruct,\n      _signature: BytesLike,\n      overrides?: PayableOverrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    multicall(\n      data: BytesLike[],\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    name(overrides?: CallOverrides): Promise<[string]>;\n\n    nonces(owner: string, overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    numCheckpoints(\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<[number]>;\n\n    pause(\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    paused(overrides?: CallOverrides): Promise<[boolean]>;\n\n    permit(\n      owner: string,\n      spender: string,\n      value: BigNumberish,\n      deadline: BigNumberish,\n      v: BigNumberish,\n      r: BytesLike,\n      s: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    primarySaleRecipient(overrides?: CallOverrides): Promise<[string]>;\n\n    renounceRole(\n      role: BytesLike,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    revokeRole(\n      role: BytesLike,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    setContractURI(\n      _uri: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    setPlatformFeeInfo(\n      _platformFeeRecipient: string,\n      _platformFeeBps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    setPrimarySaleRecipient(\n      _saleRecipient: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    supportsInterface(\n      interfaceId: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    symbol(overrides?: CallOverrides): Promise<[string]>;\n\n    totalSupply(overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    transfer(\n      to: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    transferFrom(\n      from: string,\n      to: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    unpause(\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    verify(\n      _req: ITokenERC20.MintRequestStruct,\n      _signature: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<[boolean, string]>;\n  };\n\n  DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<string>;\n\n  DOMAIN_SEPARATOR(overrides?: CallOverrides): Promise<string>;\n\n  allowance(\n    owner: string,\n    spender: string,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  approve(\n    spender: string,\n    amount: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  balanceOf(account: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n  burn(\n    amount: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  burnFrom(\n    account: string,\n    amount: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  checkpoints(\n    account: string,\n    pos: BigNumberish,\n    overrides?: CallOverrides\n  ): Promise<ERC20VotesUpgradeable.CheckpointStructOutput>;\n\n  contractType(overrides?: CallOverrides): Promise<string>;\n\n  contractURI(overrides?: CallOverrides): Promise<string>;\n\n  contractVersion(overrides?: CallOverrides): Promise<number>;\n\n  decimals(overrides?: CallOverrides): Promise<number>;\n\n  decreaseAllowance(\n    spender: string,\n    subtractedValue: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  delegate(\n    delegatee: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  delegateBySig(\n    delegatee: string,\n    nonce: BigNumberish,\n    expiry: BigNumberish,\n    v: BigNumberish,\n    r: BytesLike,\n    s: BytesLike,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  delegates(account: string, overrides?: CallOverrides): Promise<string>;\n\n  getPastTotalSupply(\n    blockNumber: BigNumberish,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  getPastVotes(\n    account: string,\n    blockNumber: BigNumberish,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  getPlatformFeeInfo(overrides?: CallOverrides): Promise<[string, number]>;\n\n  getRoleAdmin(role: BytesLike, overrides?: CallOverrides): Promise<string>;\n\n  getRoleMember(\n    role: BytesLike,\n    index: BigNumberish,\n    overrides?: CallOverrides\n  ): Promise<string>;\n\n  getRoleMemberCount(\n    role: BytesLike,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  getVotes(account: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n  grantRole(\n    role: BytesLike,\n    account: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  hasRole(\n    role: BytesLike,\n    account: string,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  increaseAllowance(\n    spender: string,\n    addedValue: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  initialize(\n    _defaultAdmin: string,\n    _name: string,\n    _symbol: string,\n    _contractURI: string,\n    _trustedForwarders: string[],\n    _primarySaleRecipient: string,\n    _platformFeeRecipient: string,\n    _platformFeeBps: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  isTrustedForwarder(\n    forwarder: string,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  mintTo(\n    to: string,\n    amount: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  mintWithSignature(\n    _req: ITokenERC20.MintRequestStruct,\n    _signature: BytesLike,\n    overrides?: PayableOverrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  multicall(\n    data: BytesLike[],\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  name(overrides?: CallOverrides): Promise<string>;\n\n  nonces(owner: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n  numCheckpoints(account: string, overrides?: CallOverrides): Promise<number>;\n\n  pause(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  paused(overrides?: CallOverrides): Promise<boolean>;\n\n  permit(\n    owner: string,\n    spender: string,\n    value: BigNumberish,\n    deadline: BigNumberish,\n    v: BigNumberish,\n    r: BytesLike,\n    s: BytesLike,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  primarySaleRecipient(overrides?: CallOverrides): Promise<string>;\n\n  renounceRole(\n    role: BytesLike,\n    account: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  revokeRole(\n    role: BytesLike,\n    account: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  setContractURI(\n    _uri: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  setPlatformFeeInfo(\n    _platformFeeRecipient: string,\n    _platformFeeBps: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  setPrimarySaleRecipient(\n    _saleRecipient: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  supportsInterface(\n    interfaceId: BytesLike,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  symbol(overrides?: CallOverrides): Promise<string>;\n\n  totalSupply(overrides?: CallOverrides): Promise<BigNumber>;\n\n  transfer(\n    to: string,\n    amount: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  transferFrom(\n    from: string,\n    to: string,\n    amount: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  unpause(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  verify(\n    _req: ITokenERC20.MintRequestStruct,\n    _signature: BytesLike,\n    overrides?: CallOverrides\n  ): Promise<[boolean, string]>;\n\n  callStatic: {\n    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<string>;\n\n    DOMAIN_SEPARATOR(overrides?: CallOverrides): Promise<string>;\n\n    allowance(\n      owner: string,\n      spender: string,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    approve(\n      spender: string,\n      amount: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    balanceOf(account: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n    burn(amount: BigNumberish, overrides?: CallOverrides): Promise<void>;\n\n    burnFrom(\n      account: string,\n      amount: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    checkpoints(\n      account: string,\n      pos: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<ERC20VotesUpgradeable.CheckpointStructOutput>;\n\n    contractType(overrides?: CallOverrides): Promise<string>;\n\n    contractURI(overrides?: CallOverrides): Promise<string>;\n\n    contractVersion(overrides?: CallOverrides): Promise<number>;\n\n    decimals(overrides?: CallOverrides): Promise<number>;\n\n    decreaseAllowance(\n      spender: string,\n      subtractedValue: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    delegate(delegatee: string, overrides?: CallOverrides): Promise<void>;\n\n    delegateBySig(\n      delegatee: string,\n      nonce: BigNumberish,\n      expiry: BigNumberish,\n      v: BigNumberish,\n      r: BytesLike,\n      s: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    delegates(account: string, overrides?: CallOverrides): Promise<string>;\n\n    getPastTotalSupply(\n      blockNumber: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getPastVotes(\n      account: string,\n      blockNumber: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getPlatformFeeInfo(overrides?: CallOverrides): Promise<[string, number]>;\n\n    getRoleAdmin(role: BytesLike, overrides?: CallOverrides): Promise<string>;\n\n    getRoleMember(\n      role: BytesLike,\n      index: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    getRoleMemberCount(\n      role: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getVotes(account: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n    grantRole(\n      role: BytesLike,\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    hasRole(\n      role: BytesLike,\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    increaseAllowance(\n      spender: string,\n      addedValue: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    initialize(\n      _defaultAdmin: string,\n      _name: string,\n      _symbol: string,\n      _contractURI: string,\n      _trustedForwarders: string[],\n      _primarySaleRecipient: string,\n      _platformFeeRecipient: string,\n      _platformFeeBps: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    isTrustedForwarder(\n      forwarder: string,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    mintTo(\n      to: string,\n      amount: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    mintWithSignature(\n      _req: ITokenERC20.MintRequestStruct,\n      _signature: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    multicall(data: BytesLike[], overrides?: CallOverrides): Promise<string[]>;\n\n    name(overrides?: CallOverrides): Promise<string>;\n\n    nonces(owner: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n    numCheckpoints(account: string, overrides?: CallOverrides): Promise<number>;\n\n    pause(overrides?: CallOverrides): Promise<void>;\n\n    paused(overrides?: CallOverrides): Promise<boolean>;\n\n    permit(\n      owner: string,\n      spender: string,\n      value: BigNumberish,\n      deadline: BigNumberish,\n      v: BigNumberish,\n      r: BytesLike,\n      s: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    primarySaleRecipient(overrides?: CallOverrides): Promise<string>;\n\n    renounceRole(\n      role: BytesLike,\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    revokeRole(\n      role: BytesLike,\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    setContractURI(_uri: string, overrides?: CallOverrides): Promise<void>;\n\n    setPlatformFeeInfo(\n      _platformFeeRecipient: string,\n      _platformFeeBps: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    setPrimarySaleRecipient(\n      _saleRecipient: string,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    supportsInterface(\n      interfaceId: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    symbol(overrides?: CallOverrides): Promise<string>;\n\n    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;\n\n    transfer(\n      to: string,\n      amount: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    transferFrom(\n      from: string,\n      to: string,\n      amount: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    unpause(overrides?: CallOverrides): Promise<void>;\n\n    verify(\n      _req: ITokenERC20.MintRequestStruct,\n      _signature: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<[boolean, string]>;\n  };\n\n  filters: {\n    \"Approval(address,address,uint256)\"(\n      owner?: string | null,\n      spender?: string | null,\n      value?: null\n    ): ApprovalEventFilter;\n    Approval(\n      owner?: string | null,\n      spender?: string | null,\n      value?: null\n    ): ApprovalEventFilter;\n\n    \"DelegateChanged(address,address,address)\"(\n      delegator?: string | null,\n      fromDelegate?: string | null,\n      toDelegate?: string | null\n    ): DelegateChangedEventFilter;\n    DelegateChanged(\n      delegator?: string | null,\n      fromDelegate?: string | null,\n      toDelegate?: string | null\n    ): DelegateChangedEventFilter;\n\n    \"DelegateVotesChanged(address,uint256,uint256)\"(\n      delegate?: string | null,\n      previousBalance?: null,\n      newBalance?: null\n    ): DelegateVotesChangedEventFilter;\n    DelegateVotesChanged(\n      delegate?: string | null,\n      previousBalance?: null,\n      newBalance?: null\n    ): DelegateVotesChangedEventFilter;\n\n    \"Paused(address)\"(account?: null): PausedEventFilter;\n    Paused(account?: null): PausedEventFilter;\n\n    \"PlatformFeeInfoUpdated(address,uint256)\"(\n      platformFeeRecipient?: null,\n      platformFeeBps?: null\n    ): PlatformFeeInfoUpdatedEventFilter;\n    PlatformFeeInfoUpdated(\n      platformFeeRecipient?: null,\n      platformFeeBps?: null\n    ): PlatformFeeInfoUpdatedEventFilter;\n\n    \"PrimarySaleRecipientUpdated(address)\"(\n      recipient?: string | null\n    ): PrimarySaleRecipientUpdatedEventFilter;\n    PrimarySaleRecipientUpdated(\n      recipient?: string | null\n    ): PrimarySaleRecipientUpdatedEventFilter;\n\n    \"RoleAdminChanged(bytes32,bytes32,bytes32)\"(\n      role?: BytesLike | null,\n      previousAdminRole?: BytesLike | null,\n      newAdminRole?: BytesLike | null\n    ): RoleAdminChangedEventFilter;\n    RoleAdminChanged(\n      role?: BytesLike | null,\n      previousAdminRole?: BytesLike | null,\n      newAdminRole?: BytesLike | null\n    ): RoleAdminChangedEventFilter;\n\n    \"RoleGranted(bytes32,address,address)\"(\n      role?: BytesLike | null,\n      account?: string | null,\n      sender?: string | null\n    ): RoleGrantedEventFilter;\n    RoleGranted(\n      role?: BytesLike | null,\n      account?: string | null,\n      sender?: string | null\n    ): RoleGrantedEventFilter;\n\n    \"RoleRevoked(bytes32,address,address)\"(\n      role?: BytesLike | null,\n      account?: string | null,\n      sender?: string | null\n    ): RoleRevokedEventFilter;\n    RoleRevoked(\n      role?: BytesLike | null,\n      account?: string | null,\n      sender?: string | null\n    ): RoleRevokedEventFilter;\n\n    \"TokensMinted(address,uint256)\"(\n      mintedTo?: string | null,\n      quantityMinted?: null\n    ): TokensMintedEventFilter;\n    TokensMinted(\n      mintedTo?: string | null,\n      quantityMinted?: null\n    ): TokensMintedEventFilter;\n\n    \"TokensMintedWithSignature(address,address,tuple)\"(\n      signer?: string | null,\n      mintedTo?: string | null,\n      mintRequest?: null\n    ): TokensMintedWithSignatureEventFilter;\n    TokensMintedWithSignature(\n      signer?: string | null,\n      mintedTo?: string | null,\n      mintRequest?: null\n    ): TokensMintedWithSignatureEventFilter;\n\n    \"Transfer(address,address,uint256)\"(\n      from?: string | null,\n      to?: string | null,\n      value?: null\n    ): TransferEventFilter;\n    Transfer(\n      from?: string | null,\n      to?: string | null,\n      value?: null\n    ): TransferEventFilter;\n\n    \"Unpaused(address)\"(account?: null): UnpausedEventFilter;\n    Unpaused(account?: null): UnpausedEventFilter;\n  };\n\n  estimateGas: {\n    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<BigNumber>;\n\n    DOMAIN_SEPARATOR(overrides?: CallOverrides): Promise<BigNumber>;\n\n    allowance(\n      owner: string,\n      spender: string,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    approve(\n      spender: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    balanceOf(account: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n    burn(\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    burnFrom(\n      account: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    checkpoints(\n      account: string,\n      pos: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    contractType(overrides?: CallOverrides): Promise<BigNumber>;\n\n    contractURI(overrides?: CallOverrides): Promise<BigNumber>;\n\n    contractVersion(overrides?: CallOverrides): Promise<BigNumber>;\n\n    decimals(overrides?: CallOverrides): Promise<BigNumber>;\n\n    decreaseAllowance(\n      spender: string,\n      subtractedValue: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    delegate(\n      delegatee: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    delegateBySig(\n      delegatee: string,\n      nonce: BigNumberish,\n      expiry: BigNumberish,\n      v: BigNumberish,\n      r: BytesLike,\n      s: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    delegates(account: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n    getPastTotalSupply(\n      blockNumber: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getPastVotes(\n      account: string,\n      blockNumber: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getPlatformFeeInfo(overrides?: CallOverrides): Promise<BigNumber>;\n\n    getRoleAdmin(\n      role: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getRoleMember(\n      role: BytesLike,\n      index: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getRoleMemberCount(\n      role: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getVotes(account: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n    grantRole(\n      role: BytesLike,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    hasRole(\n      role: BytesLike,\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    increaseAllowance(\n      spender: string,\n      addedValue: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    initialize(\n      _defaultAdmin: string,\n      _name: string,\n      _symbol: string,\n      _contractURI: string,\n      _trustedForwarders: string[],\n      _primarySaleRecipient: string,\n      _platformFeeRecipient: string,\n      _platformFeeBps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    isTrustedForwarder(\n      forwarder: string,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    mintTo(\n      to: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    mintWithSignature(\n      _req: ITokenERC20.MintRequestStruct,\n      _signature: BytesLike,\n      overrides?: PayableOverrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    multicall(\n      data: BytesLike[],\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    name(overrides?: CallOverrides): Promise<BigNumber>;\n\n    nonces(owner: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n    numCheckpoints(\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    pause(\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    paused(overrides?: CallOverrides): Promise<BigNumber>;\n\n    permit(\n      owner: string,\n      spender: string,\n      value: BigNumberish,\n      deadline: BigNumberish,\n      v: BigNumberish,\n      r: BytesLike,\n      s: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    primarySaleRecipient(overrides?: CallOverrides): Promise<BigNumber>;\n\n    renounceRole(\n      role: BytesLike,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    revokeRole(\n      role: BytesLike,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    setContractURI(\n      _uri: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    setPlatformFeeInfo(\n      _platformFeeRecipient: string,\n      _platformFeeBps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    setPrimarySaleRecipient(\n      _saleRecipient: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    supportsInterface(\n      interfaceId: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    symbol(overrides?: CallOverrides): Promise<BigNumber>;\n\n    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;\n\n    transfer(\n      to: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    transferFrom(\n      from: string,\n      to: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    unpause(\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    verify(\n      _req: ITokenERC20.MintRequestStruct,\n      _signature: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n  };\n\n  populateTransaction: {\n    DEFAULT_ADMIN_ROLE(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    DOMAIN_SEPARATOR(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    allowance(\n      owner: string,\n      spender: string,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    approve(\n      spender: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    balanceOf(\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    burn(\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    burnFrom(\n      account: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    checkpoints(\n      account: string,\n      pos: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    contractType(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    contractURI(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    contractVersion(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    decimals(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    decreaseAllowance(\n      spender: string,\n      subtractedValue: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    delegate(\n      delegatee: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    delegateBySig(\n      delegatee: string,\n      nonce: BigNumberish,\n      expiry: BigNumberish,\n      v: BigNumberish,\n      r: BytesLike,\n      s: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    delegates(\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getPastTotalSupply(\n      blockNumber: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getPastVotes(\n      account: string,\n      blockNumber: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getPlatformFeeInfo(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getRoleAdmin(\n      role: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getRoleMember(\n      role: BytesLike,\n      index: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getRoleMemberCount(\n      role: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getVotes(\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    grantRole(\n      role: BytesLike,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    hasRole(\n      role: BytesLike,\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    increaseAllowance(\n      spender: string,\n      addedValue: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    initialize(\n      _defaultAdmin: string,\n      _name: string,\n      _symbol: string,\n      _contractURI: string,\n      _trustedForwarders: string[],\n      _primarySaleRecipient: string,\n      _platformFeeRecipient: string,\n      _platformFeeBps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    isTrustedForwarder(\n      forwarder: string,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    mintTo(\n      to: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    mintWithSignature(\n      _req: ITokenERC20.MintRequestStruct,\n      _signature: BytesLike,\n      overrides?: PayableOverrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    multicall(\n      data: BytesLike[],\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    name(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    nonces(\n      owner: string,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    numCheckpoints(\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    pause(\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    paused(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    permit(\n      owner: string,\n      spender: string,\n      value: BigNumberish,\n      deadline: BigNumberish,\n      v: BigNumberish,\n      r: BytesLike,\n      s: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    primarySaleRecipient(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    renounceRole(\n      role: BytesLike,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    revokeRole(\n      role: BytesLike,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setContractURI(\n      _uri: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setPlatformFeeInfo(\n      _platformFeeRecipient: string,\n      _platformFeeBps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setPrimarySaleRecipient(\n      _saleRecipient: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    supportsInterface(\n      interfaceId: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    symbol(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    totalSupply(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    transfer(\n      to: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    transferFrom(\n      from: string,\n      to: string,\n      amount: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    unpause(\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    verify(\n      _req: ITokenERC20.MintRequestStruct,\n      _signature: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n  };\n}\n"],"mappings":"odAAA","names":[]}