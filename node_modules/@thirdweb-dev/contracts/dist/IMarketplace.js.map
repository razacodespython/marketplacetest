{"version":3,"sources":["../typechain/IMarketplace.ts"],"sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport {\n  BaseContract,\n  BigNumber,\n  BigNumberish,\n  BytesLike,\n  CallOverrides,\n  ContractTransaction,\n  Overrides,\n  PayableOverrides,\n  PopulatedTransaction,\n  Signer,\n  utils,\n} from \"ethers\";\nimport { FunctionFragment, Result, EventFragment } from \"@ethersproject/abi\";\nimport { Listener, Provider } from \"@ethersproject/providers\";\nimport { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from \"./common\";\n\nexport declare namespace IMarketplace {\n  export type ListingStruct = {\n    listingId: BigNumberish;\n    tokenOwner: string;\n    assetContract: string;\n    tokenId: BigNumberish;\n    startTime: BigNumberish;\n    endTime: BigNumberish;\n    quantity: BigNumberish;\n    currency: string;\n    reservePricePerToken: BigNumberish;\n    buyoutPricePerToken: BigNumberish;\n    tokenType: BigNumberish;\n    listingType: BigNumberish;\n  };\n\n  export type ListingStructOutput = [\n    BigNumber,\n    string,\n    string,\n    BigNumber,\n    BigNumber,\n    BigNumber,\n    BigNumber,\n    string,\n    BigNumber,\n    BigNumber,\n    number,\n    number\n  ] & {\n    listingId: BigNumber;\n    tokenOwner: string;\n    assetContract: string;\n    tokenId: BigNumber;\n    startTime: BigNumber;\n    endTime: BigNumber;\n    quantity: BigNumber;\n    currency: string;\n    reservePricePerToken: BigNumber;\n    buyoutPricePerToken: BigNumber;\n    tokenType: number;\n    listingType: number;\n  };\n\n  export type ListingParametersStruct = {\n    assetContract: string;\n    tokenId: BigNumberish;\n    startTime: BigNumberish;\n    secondsUntilEndTime: BigNumberish;\n    quantityToList: BigNumberish;\n    currencyToAccept: string;\n    reservePricePerToken: BigNumberish;\n    buyoutPricePerToken: BigNumberish;\n    listingType: BigNumberish;\n  };\n\n  export type ListingParametersStructOutput = [\n    string,\n    BigNumber,\n    BigNumber,\n    BigNumber,\n    BigNumber,\n    string,\n    BigNumber,\n    BigNumber,\n    number\n  ] & {\n    assetContract: string;\n    tokenId: BigNumber;\n    startTime: BigNumber;\n    secondsUntilEndTime: BigNumber;\n    quantityToList: BigNumber;\n    currencyToAccept: string;\n    reservePricePerToken: BigNumber;\n    buyoutPricePerToken: BigNumber;\n    listingType: number;\n  };\n}\n\nexport interface IMarketplaceInterface extends utils.Interface {\n  contractName: string | \"IMarketplace\";\n  functions: {\n    \"acceptOffer(uint256,address,address,uint256)\": FunctionFragment;\n    \"buy(uint256,address,uint256,address,uint256)\": FunctionFragment;\n    \"cancelDirectListing(uint256)\": FunctionFragment;\n    \"closeAuction(uint256,address)\": FunctionFragment;\n    \"contractType()\": FunctionFragment;\n    \"contractURI()\": FunctionFragment;\n    \"contractVersion()\": FunctionFragment;\n    \"createListing((address,uint256,uint256,uint256,uint256,address,uint256,uint256,uint8))\": FunctionFragment;\n    \"getPlatformFeeInfo()\": FunctionFragment;\n    \"offer(uint256,uint256,address,uint256)\": FunctionFragment;\n    \"setContractURI(string)\": FunctionFragment;\n    \"setPlatformFeeInfo(address,uint256)\": FunctionFragment;\n    \"updateListing(uint256,uint256,uint256,uint256,address,uint256,uint256)\": FunctionFragment;\n  };\n\n  encodeFunctionData(\n    functionFragment: \"acceptOffer\",\n    values: [BigNumberish, string, string, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"buy\",\n    values: [BigNumberish, string, BigNumberish, string, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"cancelDirectListing\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"closeAuction\",\n    values: [BigNumberish, string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractType\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractURI\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractVersion\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"createListing\",\n    values: [IMarketplace.ListingParametersStruct]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getPlatformFeeInfo\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"offer\",\n    values: [BigNumberish, BigNumberish, string, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setContractURI\",\n    values: [string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setPlatformFeeInfo\",\n    values: [string, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"updateListing\",\n    values: [\n      BigNumberish,\n      BigNumberish,\n      BigNumberish,\n      BigNumberish,\n      string,\n      BigNumberish,\n      BigNumberish\n    ]\n  ): string;\n\n  decodeFunctionResult(\n    functionFragment: \"acceptOffer\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"buy\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"cancelDirectListing\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"closeAuction\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractType\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractURI\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractVersion\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"createListing\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getPlatformFeeInfo\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"offer\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"setContractURI\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setPlatformFeeInfo\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"updateListing\",\n    data: BytesLike\n  ): Result;\n\n  events: {\n    \"AuctionBuffersUpdated(uint256,uint256)\": EventFragment;\n    \"AuctionClosed(uint256,address,bool,address,address)\": EventFragment;\n    \"ListingAdded(uint256,address,address,tuple)\": EventFragment;\n    \"ListingRemoved(uint256,address)\": EventFragment;\n    \"ListingUpdated(uint256,address)\": EventFragment;\n    \"NewOffer(uint256,address,uint8,uint256,uint256,address)\": EventFragment;\n    \"NewSale(uint256,address,address,address,uint256,uint256)\": EventFragment;\n    \"PlatformFeeInfoUpdated(address,uint256)\": EventFragment;\n  };\n\n  getEvent(nameOrSignatureOrTopic: \"AuctionBuffersUpdated\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"AuctionClosed\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"ListingAdded\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"ListingRemoved\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"ListingUpdated\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"NewOffer\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"NewSale\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"PlatformFeeInfoUpdated\"): EventFragment;\n}\n\nexport type AuctionBuffersUpdatedEvent = TypedEvent<\n  [BigNumber, BigNumber],\n  { timeBuffer: BigNumber; bidBufferBps: BigNumber }\n>;\n\nexport type AuctionBuffersUpdatedEventFilter =\n  TypedEventFilter<AuctionBuffersUpdatedEvent>;\n\nexport type AuctionClosedEvent = TypedEvent<\n  [BigNumber, string, boolean, string, string],\n  {\n    listingId: BigNumber;\n    closer: string;\n    cancelled: boolean;\n    auctionCreator: string;\n    winningBidder: string;\n  }\n>;\n\nexport type AuctionClosedEventFilter = TypedEventFilter<AuctionClosedEvent>;\n\nexport type ListingAddedEvent = TypedEvent<\n  [BigNumber, string, string, IMarketplace.ListingStructOutput],\n  {\n    listingId: BigNumber;\n    assetContract: string;\n    lister: string;\n    listing: IMarketplace.ListingStructOutput;\n  }\n>;\n\nexport type ListingAddedEventFilter = TypedEventFilter<ListingAddedEvent>;\n\nexport type ListingRemovedEvent = TypedEvent<\n  [BigNumber, string],\n  { listingId: BigNumber; listingCreator: string }\n>;\n\nexport type ListingRemovedEventFilter = TypedEventFilter<ListingRemovedEvent>;\n\nexport type ListingUpdatedEvent = TypedEvent<\n  [BigNumber, string],\n  { listingId: BigNumber; listingCreator: string }\n>;\n\nexport type ListingUpdatedEventFilter = TypedEventFilter<ListingUpdatedEvent>;\n\nexport type NewOfferEvent = TypedEvent<\n  [BigNumber, string, number, BigNumber, BigNumber, string],\n  {\n    listingId: BigNumber;\n    offeror: string;\n    listingType: number;\n    quantityWanted: BigNumber;\n    totalOfferAmount: BigNumber;\n    currency: string;\n  }\n>;\n\nexport type NewOfferEventFilter = TypedEventFilter<NewOfferEvent>;\n\nexport type NewSaleEvent = TypedEvent<\n  [BigNumber, string, string, string, BigNumber, BigNumber],\n  {\n    listingId: BigNumber;\n    assetContract: string;\n    lister: string;\n    buyer: string;\n    quantityBought: BigNumber;\n    totalPricePaid: BigNumber;\n  }\n>;\n\nexport type NewSaleEventFilter = TypedEventFilter<NewSaleEvent>;\n\nexport type PlatformFeeInfoUpdatedEvent = TypedEvent<\n  [string, BigNumber],\n  { platformFeeRecipient: string; platformFeeBps: BigNumber }\n>;\n\nexport type PlatformFeeInfoUpdatedEventFilter =\n  TypedEventFilter<PlatformFeeInfoUpdatedEvent>;\n\nexport interface IMarketplace extends BaseContract {\n  contractName: string | \"IMarketplace\";\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: IMarketplaceInterface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(\n    eventFilter: TypedEventFilter<TEvent>\n  ): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {\n    acceptOffer(\n      _listingId: BigNumberish,\n      _offeror: string,\n      _currency: string,\n      _totalPrice: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    buy(\n      _listingId: BigNumberish,\n      _buyFor: string,\n      _quantity: BigNumberish,\n      _currency: string,\n      _totalPrice: BigNumberish,\n      overrides?: PayableOverrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    cancelDirectListing(\n      _listingId: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    closeAuction(\n      _listingId: BigNumberish,\n      _closeFor: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    contractType(overrides?: CallOverrides): Promise<[string]>;\n\n    contractURI(overrides?: CallOverrides): Promise<[string]>;\n\n    contractVersion(overrides?: CallOverrides): Promise<[number]>;\n\n    createListing(\n      _params: IMarketplace.ListingParametersStruct,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    getPlatformFeeInfo(\n      overrides?: CallOverrides\n    ): Promise<\n      [string, number] & {\n        platformFeeRecipient: string;\n        platformFeeBps: number;\n      }\n    >;\n\n    offer(\n      _listingId: BigNumberish,\n      _quantityWanted: BigNumberish,\n      _currency: string,\n      _pricePerToken: BigNumberish,\n      overrides?: PayableOverrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    setContractURI(\n      _uri: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    setPlatformFeeInfo(\n      _platformFeeRecipient: string,\n      _platformFeeBps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    updateListing(\n      _listingId: BigNumberish,\n      _quantityToList: BigNumberish,\n      _reservePricePerToken: BigNumberish,\n      _buyoutPricePerToken: BigNumberish,\n      _currencyToAccept: string,\n      _startTime: BigNumberish,\n      _secondsUntilEndTime: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n  };\n\n  acceptOffer(\n    _listingId: BigNumberish,\n    _offeror: string,\n    _currency: string,\n    _totalPrice: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  buy(\n    _listingId: BigNumberish,\n    _buyFor: string,\n    _quantity: BigNumberish,\n    _currency: string,\n    _totalPrice: BigNumberish,\n    overrides?: PayableOverrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  cancelDirectListing(\n    _listingId: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  closeAuction(\n    _listingId: BigNumberish,\n    _closeFor: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  contractType(overrides?: CallOverrides): Promise<string>;\n\n  contractURI(overrides?: CallOverrides): Promise<string>;\n\n  contractVersion(overrides?: CallOverrides): Promise<number>;\n\n  createListing(\n    _params: IMarketplace.ListingParametersStruct,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  getPlatformFeeInfo(\n    overrides?: CallOverrides\n  ): Promise<\n    [string, number] & { platformFeeRecipient: string; platformFeeBps: number }\n  >;\n\n  offer(\n    _listingId: BigNumberish,\n    _quantityWanted: BigNumberish,\n    _currency: string,\n    _pricePerToken: BigNumberish,\n    overrides?: PayableOverrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  setContractURI(\n    _uri: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  setPlatformFeeInfo(\n    _platformFeeRecipient: string,\n    _platformFeeBps: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  updateListing(\n    _listingId: BigNumberish,\n    _quantityToList: BigNumberish,\n    _reservePricePerToken: BigNumberish,\n    _buyoutPricePerToken: BigNumberish,\n    _currencyToAccept: string,\n    _startTime: BigNumberish,\n    _secondsUntilEndTime: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  callStatic: {\n    acceptOffer(\n      _listingId: BigNumberish,\n      _offeror: string,\n      _currency: string,\n      _totalPrice: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    buy(\n      _listingId: BigNumberish,\n      _buyFor: string,\n      _quantity: BigNumberish,\n      _currency: string,\n      _totalPrice: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    cancelDirectListing(\n      _listingId: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    closeAuction(\n      _listingId: BigNumberish,\n      _closeFor: string,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    contractType(overrides?: CallOverrides): Promise<string>;\n\n    contractURI(overrides?: CallOverrides): Promise<string>;\n\n    contractVersion(overrides?: CallOverrides): Promise<number>;\n\n    createListing(\n      _params: IMarketplace.ListingParametersStruct,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    getPlatformFeeInfo(\n      overrides?: CallOverrides\n    ): Promise<\n      [string, number] & {\n        platformFeeRecipient: string;\n        platformFeeBps: number;\n      }\n    >;\n\n    offer(\n      _listingId: BigNumberish,\n      _quantityWanted: BigNumberish,\n      _currency: string,\n      _pricePerToken: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    setContractURI(_uri: string, overrides?: CallOverrides): Promise<void>;\n\n    setPlatformFeeInfo(\n      _platformFeeRecipient: string,\n      _platformFeeBps: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    updateListing(\n      _listingId: BigNumberish,\n      _quantityToList: BigNumberish,\n      _reservePricePerToken: BigNumberish,\n      _buyoutPricePerToken: BigNumberish,\n      _currencyToAccept: string,\n      _startTime: BigNumberish,\n      _secondsUntilEndTime: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n  };\n\n  filters: {\n    \"AuctionBuffersUpdated(uint256,uint256)\"(\n      timeBuffer?: null,\n      bidBufferBps?: null\n    ): AuctionBuffersUpdatedEventFilter;\n    AuctionBuffersUpdated(\n      timeBuffer?: null,\n      bidBufferBps?: null\n    ): AuctionBuffersUpdatedEventFilter;\n\n    \"AuctionClosed(uint256,address,bool,address,address)\"(\n      listingId?: BigNumberish | null,\n      closer?: string | null,\n      cancelled?: boolean | null,\n      auctionCreator?: null,\n      winningBidder?: null\n    ): AuctionClosedEventFilter;\n    AuctionClosed(\n      listingId?: BigNumberish | null,\n      closer?: string | null,\n      cancelled?: boolean | null,\n      auctionCreator?: null,\n      winningBidder?: null\n    ): AuctionClosedEventFilter;\n\n    \"ListingAdded(uint256,address,address,tuple)\"(\n      listingId?: BigNumberish | null,\n      assetContract?: string | null,\n      lister?: string | null,\n      listing?: null\n    ): ListingAddedEventFilter;\n    ListingAdded(\n      listingId?: BigNumberish | null,\n      assetContract?: string | null,\n      lister?: string | null,\n      listing?: null\n    ): ListingAddedEventFilter;\n\n    \"ListingRemoved(uint256,address)\"(\n      listingId?: BigNumberish | null,\n      listingCreator?: string | null\n    ): ListingRemovedEventFilter;\n    ListingRemoved(\n      listingId?: BigNumberish | null,\n      listingCreator?: string | null\n    ): ListingRemovedEventFilter;\n\n    \"ListingUpdated(uint256,address)\"(\n      listingId?: BigNumberish | null,\n      listingCreator?: string | null\n    ): ListingUpdatedEventFilter;\n    ListingUpdated(\n      listingId?: BigNumberish | null,\n      listingCreator?: string | null\n    ): ListingUpdatedEventFilter;\n\n    \"NewOffer(uint256,address,uint8,uint256,uint256,address)\"(\n      listingId?: BigNumberish | null,\n      offeror?: string | null,\n      listingType?: BigNumberish | null,\n      quantityWanted?: null,\n      totalOfferAmount?: null,\n      currency?: null\n    ): NewOfferEventFilter;\n    NewOffer(\n      listingId?: BigNumberish | null,\n      offeror?: string | null,\n      listingType?: BigNumberish | null,\n      quantityWanted?: null,\n      totalOfferAmount?: null,\n      currency?: null\n    ): NewOfferEventFilter;\n\n    \"NewSale(uint256,address,address,address,uint256,uint256)\"(\n      listingId?: BigNumberish | null,\n      assetContract?: string | null,\n      lister?: string | null,\n      buyer?: null,\n      quantityBought?: null,\n      totalPricePaid?: null\n    ): NewSaleEventFilter;\n    NewSale(\n      listingId?: BigNumberish | null,\n      assetContract?: string | null,\n      lister?: string | null,\n      buyer?: null,\n      quantityBought?: null,\n      totalPricePaid?: null\n    ): NewSaleEventFilter;\n\n    \"PlatformFeeInfoUpdated(address,uint256)\"(\n      platformFeeRecipient?: null,\n      platformFeeBps?: null\n    ): PlatformFeeInfoUpdatedEventFilter;\n    PlatformFeeInfoUpdated(\n      platformFeeRecipient?: null,\n      platformFeeBps?: null\n    ): PlatformFeeInfoUpdatedEventFilter;\n  };\n\n  estimateGas: {\n    acceptOffer(\n      _listingId: BigNumberish,\n      _offeror: string,\n      _currency: string,\n      _totalPrice: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    buy(\n      _listingId: BigNumberish,\n      _buyFor: string,\n      _quantity: BigNumberish,\n      _currency: string,\n      _totalPrice: BigNumberish,\n      overrides?: PayableOverrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    cancelDirectListing(\n      _listingId: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    closeAuction(\n      _listingId: BigNumberish,\n      _closeFor: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    contractType(overrides?: CallOverrides): Promise<BigNumber>;\n\n    contractURI(overrides?: CallOverrides): Promise<BigNumber>;\n\n    contractVersion(overrides?: CallOverrides): Promise<BigNumber>;\n\n    createListing(\n      _params: IMarketplace.ListingParametersStruct,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    getPlatformFeeInfo(overrides?: CallOverrides): Promise<BigNumber>;\n\n    offer(\n      _listingId: BigNumberish,\n      _quantityWanted: BigNumberish,\n      _currency: string,\n      _pricePerToken: BigNumberish,\n      overrides?: PayableOverrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    setContractURI(\n      _uri: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    setPlatformFeeInfo(\n      _platformFeeRecipient: string,\n      _platformFeeBps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    updateListing(\n      _listingId: BigNumberish,\n      _quantityToList: BigNumberish,\n      _reservePricePerToken: BigNumberish,\n      _buyoutPricePerToken: BigNumberish,\n      _currencyToAccept: string,\n      _startTime: BigNumberish,\n      _secondsUntilEndTime: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n  };\n\n  populateTransaction: {\n    acceptOffer(\n      _listingId: BigNumberish,\n      _offeror: string,\n      _currency: string,\n      _totalPrice: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    buy(\n      _listingId: BigNumberish,\n      _buyFor: string,\n      _quantity: BigNumberish,\n      _currency: string,\n      _totalPrice: BigNumberish,\n      overrides?: PayableOverrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    cancelDirectListing(\n      _listingId: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    closeAuction(\n      _listingId: BigNumberish,\n      _closeFor: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    contractType(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    contractURI(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    contractVersion(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    createListing(\n      _params: IMarketplace.ListingParametersStruct,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    getPlatformFeeInfo(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    offer(\n      _listingId: BigNumberish,\n      _quantityWanted: BigNumberish,\n      _currency: string,\n      _pricePerToken: BigNumberish,\n      overrides?: PayableOverrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setContractURI(\n      _uri: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setPlatformFeeInfo(\n      _platformFeeRecipient: string,\n      _platformFeeBps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    updateListing(\n      _listingId: BigNumberish,\n      _quantityToList: BigNumberish,\n      _reservePricePerToken: BigNumberish,\n      _buyoutPricePerToken: BigNumberish,\n      _currencyToAccept: string,\n      _startTime: BigNumberish,\n      _secondsUntilEndTime: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n  };\n}\n"],"mappings":"odAAA","names":[]}