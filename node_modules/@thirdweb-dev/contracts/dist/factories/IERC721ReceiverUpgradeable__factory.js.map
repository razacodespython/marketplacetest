{"version":3,"sources":["../../typechain/factories/IERC721ReceiverUpgradeable__factory.ts"],"sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IERC721ReceiverUpgradeable,\n  IERC721ReceiverUpgradeableInterface,\n} from \"../IERC721ReceiverUpgradeable\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"onERC721Received\",\n    outputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"\",\n        type: \"bytes4\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IERC721ReceiverUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): IERC721ReceiverUpgradeableInterface {\n    return new utils.Interface(_abi) as IERC721ReceiverUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IERC721ReceiverUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as IERC721ReceiverUpgradeable;\n  }\n}\n"],"mappings":"8gBAAA,0DAIA,MAAwC,kBAOlC,EAAO,CACX,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,WACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,OACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,aAAc,QACd,KAAM,OACN,KAAM,UAGV,KAAM,mBACN,QAAS,CACP,CACE,aAAc,SACd,KAAM,GACN,KAAM,WAGV,gBAAiB,aACjB,KAAM,aAIH,OAA0C,OAExC,kBAAuD,CAC5D,MAAO,IAAI,SAAM,UAAU,SAEtB,SACL,EACA,EAC4B,CAC5B,MAAO,IAAI,YACT,EACA,EACA,KAXY,AADX,EACW,IAAM","names":[]}