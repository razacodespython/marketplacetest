{"version":3,"sources":["../../typechain/factories/IMultiwrap__factory.ts"],"sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { IMultiwrap, IMultiwrapInterface } from \"../IMultiwrap\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newRoyaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newRoyaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"DefaultRoyalty\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"prevOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnerUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"royaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"RoyaltyForToken\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"wrapper\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"sentTo\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenIdOfShares\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"sharesUnwrapped\",\n        type: \"uint256\",\n      },\n      {\n        components: [\n          {\n            internalType: \"address[]\",\n            name: \"erc1155AssetContracts\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[][]\",\n            name: \"erc1155TokensToWrap\",\n            type: \"uint256[][]\",\n          },\n          {\n            internalType: \"uint256[][]\",\n            name: \"erc1155AmountsToWrap\",\n            type: \"uint256[][]\",\n          },\n          {\n            internalType: \"address[]\",\n            name: \"erc721AssetContracts\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[][]\",\n            name: \"erc721TokensToWrap\",\n            type: \"uint256[][]\",\n          },\n          {\n            internalType: \"address[]\",\n            name: \"erc20AssetContracts\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[]\",\n            name: \"erc20AmountsToWrap\",\n            type: \"uint256[]\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct MultiTokenTransferLib.MultiToken\",\n        name: \"wrappedContents\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"TokensUnwrapped\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"wrapper\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenIdOfShares\",\n        type: \"uint256\",\n      },\n      {\n        components: [\n          {\n            internalType: \"address[]\",\n            name: \"erc1155AssetContracts\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[][]\",\n            name: \"erc1155TokensToWrap\",\n            type: \"uint256[][]\",\n          },\n          {\n            internalType: \"uint256[][]\",\n            name: \"erc1155AmountsToWrap\",\n            type: \"uint256[][]\",\n          },\n          {\n            internalType: \"address[]\",\n            name: \"erc721AssetContracts\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[][]\",\n            name: \"erc721TokensToWrap\",\n            type: \"uint256[][]\",\n          },\n          {\n            internalType: \"address[]\",\n            name: \"erc20AssetContracts\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[]\",\n            name: \"erc20AmountsToWrap\",\n            type: \"uint256[]\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct MultiTokenTransferLib.MultiToken\",\n        name: \"wrappedContents\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"TokensWrapped\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"contractType\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractVersion\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getDefaultRoyaltyInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoyaltyInfoForToken\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"salePrice\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"royaltyInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"receiver\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"royaltyAmount\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"_uri\",\n        type: \"string\",\n      },\n    ],\n    name: \"setContractURI\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_royaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setDefaultRoyaltyInfo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"setOwner\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"bps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setRoyaltyInfoForToken\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountToRedeem\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_sendTo\",\n        type: \"address\",\n      },\n    ],\n    name: \"unwrap\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address[]\",\n            name: \"erc1155AssetContracts\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[][]\",\n            name: \"erc1155TokensToWrap\",\n            type: \"uint256[][]\",\n          },\n          {\n            internalType: \"uint256[][]\",\n            name: \"erc1155AmountsToWrap\",\n            type: \"uint256[][]\",\n          },\n          {\n            internalType: \"address[]\",\n            name: \"erc721AssetContracts\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[][]\",\n            name: \"erc721TokensToWrap\",\n            type: \"uint256[][]\",\n          },\n          {\n            internalType: \"address[]\",\n            name: \"erc20AssetContracts\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[]\",\n            name: \"erc20AmountsToWrap\",\n            type: \"uint256[]\",\n          },\n        ],\n        internalType: \"struct MultiTokenTransferLib.MultiToken\",\n        name: \"wrappedContents\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"shares\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"string\",\n        name: \"uriForShares\",\n        type: \"string\",\n      },\n    ],\n    name: \"wrap\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n];\n\nexport class IMultiwrap__factory {\n  static readonly abi = _abi;\n  static createInterface(): IMultiwrapInterface {\n    return new utils.Interface(_abi) as IMultiwrapInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IMultiwrap {\n    return new Contract(address, _abi, signerOrProvider) as IMultiwrap;\n  }\n}\n"],"mappings":"8gBAAA,0CAIA,MAAwC,kBAIlC,EAAO,CACX,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,aAAc,UACd,KAAM,sBACN,KAAM,WAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,gBACN,KAAM,YAGV,KAAM,iBACN,KAAM,SAER,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,aAAc,UACd,KAAM,YACN,KAAM,WAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,WACN,KAAM,YAGV,KAAM,eACN,KAAM,SAER,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,mBACN,KAAM,WAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,aACN,KAAM,YAGV,KAAM,kBACN,KAAM,SAER,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,SACN,KAAM,WAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,kBACN,KAAM,WAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,kBACN,KAAM,WAER,CACE,WAAY,CACV,CACE,aAAc,YACd,KAAM,wBACN,KAAM,aAER,CACE,aAAc,cACd,KAAM,sBACN,KAAM,eAER,CACE,aAAc,cACd,KAAM,uBACN,KAAM,eAER,CACE,aAAc,YACd,KAAM,uBACN,KAAM,aAER,CACE,aAAc,cACd,KAAM,qBACN,KAAM,eAER,CACE,aAAc,YACd,KAAM,sBACN,KAAM,aAER,CACE,aAAc,YACd,KAAM,qBACN,KAAM,cAGV,QAAS,GACT,aAAc,0CACd,KAAM,kBACN,KAAM,UAGV,KAAM,kBACN,KAAM,SAER,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,kBACN,KAAM,WAER,CACE,WAAY,CACV,CACE,aAAc,YACd,KAAM,wBACN,KAAM,aAER,CACE,aAAc,cACd,KAAM,sBACN,KAAM,eAER,CACE,aAAc,cACd,KAAM,uBACN,KAAM,eAER,CACE,aAAc,YACd,KAAM,uBACN,KAAM,aAER,CACE,aAAc,cACd,KAAM,qBACN,KAAM,eAER,CACE,aAAc,YACd,KAAM,sBACN,KAAM,aAER,CACE,aAAc,YACd,KAAM,qBACN,KAAM,cAGV,QAAS,GACT,aAAc,0CACd,KAAM,kBACN,KAAM,UAGV,KAAM,gBACN,KAAM,SAER,CACE,OAAQ,GACR,KAAM,eACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,GACN,KAAM,YAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,GACR,KAAM,cACN,QAAS,CACP,CACE,aAAc,SACd,KAAM,GACN,KAAM,WAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,GACR,KAAM,kBACN,QAAS,CACP,CACE,aAAc,QACd,KAAM,GACN,KAAM,UAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,GACR,KAAM,wBACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,GACN,KAAM,WAER,CACE,aAAc,SACd,KAAM,GACN,KAAM,WAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,UACN,KAAM,YAGV,KAAM,yBACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,GACN,KAAM,WAER,CACE,aAAc,SACd,KAAM,GACN,KAAM,WAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,GACR,KAAM,QACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,GACN,KAAM,YAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,YACN,KAAM,YAGV,KAAM,cACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,WACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,gBACN,KAAM,YAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,SACd,KAAM,OACN,KAAM,WAGV,KAAM,iBACN,QAAS,GACT,gBAAiB,aACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,oBACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,cACN,KAAM,YAGV,KAAM,wBACN,QAAS,GACT,gBAAiB,aACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,YACN,KAAM,YAGV,KAAM,WACN,QAAS,GACT,gBAAiB,aACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,YACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,MACN,KAAM,YAGV,KAAM,yBACN,QAAS,GACT,gBAAiB,aACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,SACd,KAAM,cACN,KAAM,WAGV,KAAM,oBACN,QAAS,CACP,CACE,aAAc,OACd,KAAM,GACN,KAAM,SAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,iBACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,UACN,KAAM,YAGV,KAAM,SACN,QAAS,GACT,gBAAiB,aACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,WAAY,CACV,CACE,aAAc,YACd,KAAM,wBACN,KAAM,aAER,CACE,aAAc,cACd,KAAM,sBACN,KAAM,eAER,CACE,aAAc,cACd,KAAM,uBACN,KAAM,eAER,CACE,aAAc,YACd,KAAM,uBACN,KAAM,aAER,CACE,aAAc,cACd,KAAM,qBACN,KAAM,eAER,CACE,aAAc,YACd,KAAM,sBACN,KAAM,aAER,CACE,aAAc,YACd,KAAM,qBACN,KAAM,cAGV,aAAc,0CACd,KAAM,kBACN,KAAM,SAER,CACE,aAAc,UACd,KAAM,SACN,KAAM,WAER,CACE,aAAc,SACd,KAAM,eACN,KAAM,WAGV,KAAM,OACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,UACN,KAAM,YAGV,gBAAiB,UACjB,KAAM,aAIH,OAA0B,OAExB,kBAAuC,CAC5C,MAAO,IAAI,SAAM,UAAU,SAEtB,SACL,EACA,EACY,CACZ,MAAO,IAAI,YAAS,EAAS,EAAM,KARrB,AADX,EACW,IAAM","names":[]}