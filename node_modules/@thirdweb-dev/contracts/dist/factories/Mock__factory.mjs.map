{"version":3,"sources":["../../typechain/factories/Mock__factory.ts"],"sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { Mock, MockInterface } from \"../Mock\";\n\nconst _abi = [\n  {\n    inputs: [],\n    name: \"erc1155\",\n    outputs: [\n      {\n        internalType: \"contract IERC1155\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"erc20\",\n    outputs: [\n      {\n        internalType: \"contract IERC20\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"erc721\",\n    outputs: [\n      {\n        internalType: \"contract IERC721\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b5060a08061001f6000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c8063785e9e86146041578063bca6ce6414606f578063d56022d7146081575b600080fd5b6000546053906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6001546053906001600160a01b031681565b6002546053906001600160a01b03168156fea164736f6c634300080c000a\";\n\ntype MockConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: MockConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class Mock__factory extends ContractFactory {\n  constructor(...args: MockConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"Mock\";\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<Mock> {\n    return super.deploy(overrides || {}) as Promise<Mock>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): Mock {\n    return super.attach(address) as Mock;\n  }\n  connect(signer: Signer): Mock__factory {\n    return super.connect(signer) as Mock__factory;\n  }\n  static readonly contractName: \"Mock\";\n  public readonly contractName: \"Mock\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): MockInterface {\n    return new utils.Interface(_abi) as MockInterface;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): Mock {\n    return new Contract(address, _abi, signerOrProvider) as Mock;\n  }\n}\n"],"mappings":"AAGA,kEAIA,GAAM,GAAO,CACX,CACE,OAAQ,GACR,KAAM,UACN,QAAS,CACP,CACE,aAAc,oBACd,KAAM,GACN,KAAM,YAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,GACR,KAAM,QACN,QAAS,CACP,CACE,aAAc,kBACd,KAAM,GACN,KAAM,YAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,GACR,KAAM,SACN,QAAS,CACP,CACE,aAAc,mBACd,KAAM,GACN,KAAM,YAGV,gBAAiB,OACjB,KAAM,aAIJ,EACJ,mYAMI,EAAc,AAClB,GACwD,EAAG,OAAS,EAE/D,eAA4B,EAAgB,CACjD,eAAe,EAA6B,CAC1C,AAAI,EAAY,GACd,MAAM,GAAG,GAET,MAAM,EAAM,EAAW,EAAK,IAE9B,KAAK,aAAe,OAGtB,OACE,EACe,CACf,MAAO,OAAM,OAAO,GAAa,IAEnC,qBACE,EACoB,CACpB,MAAO,OAAM,qBAAqB,GAAa,IAEjD,OAAO,EAAuB,CAC5B,MAAO,OAAM,OAAO,GAEtB,QAAQ,EAA+B,CACrC,MAAO,OAAM,QAAQ,SAMhB,kBAAiC,CACtC,MAAO,IAAI,GAAM,UAAU,SAEtB,SAAQ,EAAiB,EAA2C,CACzE,MAAO,IAAI,GAAS,EAAS,EAAM,KANrB,AA5BX,EA4BW,SAAW,EACX,AA7BX,EA6BW,IAAM","names":[]}