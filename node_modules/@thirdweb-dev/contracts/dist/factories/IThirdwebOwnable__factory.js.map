{"version":3,"sources":["../../typechain/factories/IThirdwebOwnable__factory.ts"],"sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IThirdwebOwnable,\n  IThirdwebOwnableInterface,\n} from \"../IThirdwebOwnable\";\n\nconst _abi = [\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"setOwner\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IThirdwebOwnable__factory {\n  static readonly abi = _abi;\n  static createInterface(): IThirdwebOwnableInterface {\n    return new utils.Interface(_abi) as IThirdwebOwnableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IThirdwebOwnable {\n    return new Contract(address, _abi, signerOrProvider) as IThirdwebOwnable;\n  }\n}\n"],"mappings":"8gBAAA,gDAIA,MAAwC,kBAOlC,EAAO,CACX,CACE,OAAQ,GACR,KAAM,QACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,GACN,KAAM,YAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,YACN,KAAM,YAGV,KAAM,WACN,QAAS,GACT,gBAAiB,aACjB,KAAM,aAIH,OAAgC,OAE9B,kBAA6C,CAClD,MAAO,IAAI,SAAM,UAAU,SAEtB,SACL,EACA,EACkB,CAClB,MAAO,IAAI,YAAS,EAAS,EAAM,KARrB,AADX,EACW,IAAM","names":[]}