{"version":3,"sources":["../../typechain/factories/IERC165Upgradeable__factory.ts"],"sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IERC165Upgradeable,\n  IERC165UpgradeableInterface,\n} from \"../IERC165Upgradeable\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class IERC165Upgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): IERC165UpgradeableInterface {\n    return new utils.Interface(_abi) as IERC165UpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IERC165Upgradeable {\n    return new Contract(address, _abi, signerOrProvider) as IERC165Upgradeable;\n  }\n}\n"],"mappings":"8gBAAA,kDAIA,MAAwC,kBAOlC,EAAO,CACX,CACE,OAAQ,CACN,CACE,aAAc,SACd,KAAM,cACN,KAAM,WAGV,KAAM,oBACN,QAAS,CACP,CACE,aAAc,OACd,KAAM,GACN,KAAM,SAGV,gBAAiB,OACjB,KAAM,aAIH,OAAkC,OAEhC,kBAA+C,CACpD,MAAO,IAAI,SAAM,UAAU,SAEtB,SACL,EACA,EACoB,CACpB,MAAO,IAAI,YAAS,EAAS,EAAM,KARrB,AADX,EACW,IAAM","names":[]}