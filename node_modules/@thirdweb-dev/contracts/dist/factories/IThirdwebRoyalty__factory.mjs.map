{"version":3,"sources":["../../typechain/factories/IThirdwebRoyalty__factory.ts"],"sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IThirdwebRoyalty,\n  IThirdwebRoyaltyInterface,\n} from \"../IThirdwebRoyalty\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newRoyaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newRoyaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"DefaultRoyalty\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"royaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"RoyaltyForToken\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"getDefaultRoyaltyInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoyaltyInfoForToken\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"salePrice\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"royaltyInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"receiver\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"royaltyAmount\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_royaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setDefaultRoyaltyInfo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"bps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setRoyaltyInfoForToken\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class IThirdwebRoyalty__factory {\n  static readonly abi = _abi;\n  static createInterface(): IThirdwebRoyaltyInterface {\n    return new utils.Interface(_abi) as IThirdwebRoyaltyInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IThirdwebRoyalty {\n    return new Contract(address, _abi, signerOrProvider) as IThirdwebRoyalty;\n  }\n}\n"],"mappings":"AAIA,6CAOA,GAAM,GAAO,CACX,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,aAAc,UACd,KAAM,sBACN,KAAM,WAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,gBACN,KAAM,YAGV,KAAM,iBACN,KAAM,SAER,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,mBACN,KAAM,WAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,aACN,KAAM,YAGV,KAAM,kBACN,KAAM,SAER,CACE,OAAQ,GACR,KAAM,wBACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,GACN,KAAM,WAER,CACE,aAAc,SACd,KAAM,GACN,KAAM,WAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,UACN,KAAM,YAGV,KAAM,yBACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,GACN,KAAM,WAER,CACE,aAAc,SACd,KAAM,GACN,KAAM,WAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,YACN,KAAM,YAGV,KAAM,cACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,WACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,gBACN,KAAM,YAGV,gBAAiB,OACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,oBACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,cACN,KAAM,YAGV,KAAM,wBACN,QAAS,GACT,gBAAiB,aACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAM,UACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,YACN,KAAM,WAER,CACE,aAAc,UACd,KAAM,MACN,KAAM,YAGV,KAAM,yBACN,QAAS,GACT,gBAAiB,aACjB,KAAM,YAER,CACE,OAAQ,CACN,CACE,aAAc,SACd,KAAM,cACN,KAAM,WAGV,KAAM,oBACN,QAAS,CACP,CACE,aAAc,OACd,KAAM,GACN,KAAM,SAGV,gBAAiB,OACjB,KAAM,aAIH,OAAgC,OAE9B,kBAA6C,CAClD,MAAO,IAAI,GAAM,UAAU,SAEtB,SACL,EACA,EACkB,CAClB,MAAO,IAAI,GAAS,EAAS,EAAM,KARrB,AADX,EACW,IAAM","names":[]}