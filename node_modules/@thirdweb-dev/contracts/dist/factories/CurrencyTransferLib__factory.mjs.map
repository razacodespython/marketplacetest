{"version":3,"sources":["../../typechain/factories/CurrencyTransferLib__factory.ts"],"sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type {\n  CurrencyTransferLib,\n  CurrencyTransferLibInterface,\n} from \"../CurrencyTransferLib\";\n\nconst _abi = [\n  {\n    inputs: [],\n    name: \"NATIVE_TOKEN\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x6088610038600b82828239805160001a607314602b57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c806331f7d964146038575b600080fd5b605273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f3fea164736f6c634300080c000a\";\n\ntype CurrencyTransferLibConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: CurrencyTransferLibConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class CurrencyTransferLib__factory extends ContractFactory {\n  constructor(...args: CurrencyTransferLibConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"CurrencyTransferLib\";\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<CurrencyTransferLib> {\n    return super.deploy(overrides || {}) as Promise<CurrencyTransferLib>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): CurrencyTransferLib {\n    return super.attach(address) as CurrencyTransferLib;\n  }\n  connect(signer: Signer): CurrencyTransferLib__factory {\n    return super.connect(signer) as CurrencyTransferLib__factory;\n  }\n  static readonly contractName: \"CurrencyTransferLib\";\n  public readonly contractName: \"CurrencyTransferLib\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): CurrencyTransferLibInterface {\n    return new utils.Interface(_abi) as CurrencyTransferLibInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): CurrencyTransferLib {\n    return new Contract(address, _abi, signerOrProvider) as CurrencyTransferLib;\n  }\n}\n"],"mappings":"AAGA,kEAOA,GAAM,GAAO,CACX,CACE,OAAQ,GACR,KAAM,eACN,QAAS,CACP,CACE,aAAc,UACd,KAAM,GACN,KAAM,YAGV,gBAAiB,OACjB,KAAM,aAIJ,EACJ,qYAMI,EAAc,AAClB,GACwD,EAAG,OAAS,EAE/D,eAA2C,EAAgB,CAChE,eAAe,EAA4C,CACzD,AAAI,EAAY,GACd,MAAM,GAAG,GAET,MAAM,EAAM,EAAW,EAAK,IAE9B,KAAK,aAAe,sBAGtB,OACE,EAC8B,CAC9B,MAAO,OAAM,OAAO,GAAa,IAEnC,qBACE,EACoB,CACpB,MAAO,OAAM,qBAAqB,GAAa,IAEjD,OAAO,EAAsC,CAC3C,MAAO,OAAM,OAAO,GAEtB,QAAQ,EAA8C,CACpD,MAAO,OAAM,QAAQ,SAMhB,kBAAgD,CACrD,MAAO,IAAI,GAAM,UAAU,SAEtB,SACL,EACA,EACqB,CACrB,MAAO,IAAI,GAAS,EAAS,EAAM,KATrB,AA5BX,EA4BW,SAAW,EACX,AA7BX,EA6BW,IAAM","names":[]}