{"version":3,"sources":["../typechain/PaymentSplitterUpgradeable.ts"],"sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport {\n  BaseContract,\n  BigNumber,\n  BigNumberish,\n  BytesLike,\n  CallOverrides,\n  ContractTransaction,\n  Overrides,\n  PopulatedTransaction,\n  Signer,\n  utils,\n} from \"ethers\";\nimport { FunctionFragment, Result, EventFragment } from \"@ethersproject/abi\";\nimport { Listener, Provider } from \"@ethersproject/providers\";\nimport { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from \"./common\";\n\nexport interface PaymentSplitterUpgradeableInterface extends utils.Interface {\n  contractName: string | \"PaymentSplitterUpgradeable\";\n  functions: {\n    \"payee(uint256)\": FunctionFragment;\n    \"payeeCount()\": FunctionFragment;\n    \"release(address)\": FunctionFragment;\n    \"released(address,address)\": FunctionFragment;\n    \"shares(address)\": FunctionFragment;\n    \"totalReleased(address)\": FunctionFragment;\n    \"totalShares()\": FunctionFragment;\n  };\n\n  encodeFunctionData(functionFragment: \"payee\", values: [BigNumberish]): string;\n  encodeFunctionData(\n    functionFragment: \"payeeCount\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(functionFragment: \"release\", values: [string]): string;\n  encodeFunctionData(\n    functionFragment: \"released\",\n    values: [string, string]\n  ): string;\n  encodeFunctionData(functionFragment: \"shares\", values: [string]): string;\n  encodeFunctionData(\n    functionFragment: \"totalReleased\",\n    values: [string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"totalShares\",\n    values?: undefined\n  ): string;\n\n  decodeFunctionResult(functionFragment: \"payee\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"payeeCount\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"release\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"released\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"shares\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"totalReleased\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"totalShares\",\n    data: BytesLike\n  ): Result;\n\n  events: {\n    \"ERC20PaymentReleased(address,address,uint256)\": EventFragment;\n    \"PayeeAdded(address,uint256)\": EventFragment;\n    \"PaymentReceived(address,uint256)\": EventFragment;\n    \"PaymentReleased(address,uint256)\": EventFragment;\n  };\n\n  getEvent(nameOrSignatureOrTopic: \"ERC20PaymentReleased\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"PayeeAdded\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"PaymentReceived\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"PaymentReleased\"): EventFragment;\n}\n\nexport type ERC20PaymentReleasedEvent = TypedEvent<\n  [string, string, BigNumber],\n  { token: string; to: string; amount: BigNumber }\n>;\n\nexport type ERC20PaymentReleasedEventFilter =\n  TypedEventFilter<ERC20PaymentReleasedEvent>;\n\nexport type PayeeAddedEvent = TypedEvent<\n  [string, BigNumber],\n  { account: string; shares: BigNumber }\n>;\n\nexport type PayeeAddedEventFilter = TypedEventFilter<PayeeAddedEvent>;\n\nexport type PaymentReceivedEvent = TypedEvent<\n  [string, BigNumber],\n  { from: string; amount: BigNumber }\n>;\n\nexport type PaymentReceivedEventFilter = TypedEventFilter<PaymentReceivedEvent>;\n\nexport type PaymentReleasedEvent = TypedEvent<\n  [string, BigNumber],\n  { to: string; amount: BigNumber }\n>;\n\nexport type PaymentReleasedEventFilter = TypedEventFilter<PaymentReleasedEvent>;\n\nexport interface PaymentSplitterUpgradeable extends BaseContract {\n  contractName: string | \"PaymentSplitterUpgradeable\";\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: PaymentSplitterUpgradeableInterface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(\n    eventFilter: TypedEventFilter<TEvent>\n  ): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {\n    payee(index: BigNumberish, overrides?: CallOverrides): Promise<[string]>;\n\n    payeeCount(overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    \"release(address)\"(\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    \"release(address,address)\"(\n      token: string,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    \"released(address,address)\"(\n      token: string,\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    \"released(address)\"(\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    shares(account: string, overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    \"totalReleased(address)\"(\n      token: string,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    \"totalReleased()\"(overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    totalShares(overrides?: CallOverrides): Promise<[BigNumber]>;\n  };\n\n  payee(index: BigNumberish, overrides?: CallOverrides): Promise<string>;\n\n  payeeCount(overrides?: CallOverrides): Promise<BigNumber>;\n\n  \"release(address)\"(\n    account: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  \"release(address,address)\"(\n    token: string,\n    account: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  \"released(address,address)\"(\n    token: string,\n    account: string,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  \"released(address)\"(\n    account: string,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  shares(account: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n  \"totalReleased(address)\"(\n    token: string,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  \"totalReleased()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n  totalShares(overrides?: CallOverrides): Promise<BigNumber>;\n\n  callStatic: {\n    payee(index: BigNumberish, overrides?: CallOverrides): Promise<string>;\n\n    payeeCount(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"release(address)\"(\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    \"release(address,address)\"(\n      token: string,\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    \"released(address,address)\"(\n      token: string,\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"released(address)\"(\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    shares(account: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"totalReleased(address)\"(\n      token: string,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"totalReleased()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    totalShares(overrides?: CallOverrides): Promise<BigNumber>;\n  };\n\n  filters: {\n    \"ERC20PaymentReleased(address,address,uint256)\"(\n      token?: string | null,\n      to?: null,\n      amount?: null\n    ): ERC20PaymentReleasedEventFilter;\n    ERC20PaymentReleased(\n      token?: string | null,\n      to?: null,\n      amount?: null\n    ): ERC20PaymentReleasedEventFilter;\n\n    \"PayeeAdded(address,uint256)\"(\n      account?: null,\n      shares?: null\n    ): PayeeAddedEventFilter;\n    PayeeAdded(account?: null, shares?: null): PayeeAddedEventFilter;\n\n    \"PaymentReceived(address,uint256)\"(\n      from?: null,\n      amount?: null\n    ): PaymentReceivedEventFilter;\n    PaymentReceived(from?: null, amount?: null): PaymentReceivedEventFilter;\n\n    \"PaymentReleased(address,uint256)\"(\n      to?: null,\n      amount?: null\n    ): PaymentReleasedEventFilter;\n    PaymentReleased(to?: null, amount?: null): PaymentReleasedEventFilter;\n  };\n\n  estimateGas: {\n    payee(index: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;\n\n    payeeCount(overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"release(address)\"(\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    \"release(address,address)\"(\n      token: string,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    \"released(address,address)\"(\n      token: string,\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"released(address)\"(\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    shares(account: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n    \"totalReleased(address)\"(\n      token: string,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"totalReleased()\"(overrides?: CallOverrides): Promise<BigNumber>;\n\n    totalShares(overrides?: CallOverrides): Promise<BigNumber>;\n  };\n\n  populateTransaction: {\n    payee(\n      index: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    payeeCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    \"release(address)\"(\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"release(address,address)\"(\n      token: string,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"released(address,address)\"(\n      token: string,\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"released(address)\"(\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    shares(\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"totalReleased(address)\"(\n      token: string,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"totalReleased()\"(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    totalShares(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n  };\n}\n"],"mappings":"odAAA","names":[]}