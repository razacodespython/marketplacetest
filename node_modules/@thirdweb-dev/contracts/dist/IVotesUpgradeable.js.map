{"version":3,"sources":["../typechain/IVotesUpgradeable.ts"],"sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport {\n  BaseContract,\n  BigNumber,\n  BigNumberish,\n  BytesLike,\n  CallOverrides,\n  ContractTransaction,\n  Overrides,\n  PopulatedTransaction,\n  Signer,\n  utils,\n} from \"ethers\";\nimport { FunctionFragment, Result, EventFragment } from \"@ethersproject/abi\";\nimport { Listener, Provider } from \"@ethersproject/providers\";\nimport { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from \"./common\";\n\nexport interface IVotesUpgradeableInterface extends utils.Interface {\n  contractName: string | \"IVotesUpgradeable\";\n  functions: {\n    \"delegate(address)\": FunctionFragment;\n    \"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\": FunctionFragment;\n    \"delegates(address)\": FunctionFragment;\n    \"getPastTotalSupply(uint256)\": FunctionFragment;\n    \"getPastVotes(address,uint256)\": FunctionFragment;\n    \"getVotes(address)\": FunctionFragment;\n  };\n\n  encodeFunctionData(functionFragment: \"delegate\", values: [string]): string;\n  encodeFunctionData(\n    functionFragment: \"delegateBySig\",\n    values: [\n      string,\n      BigNumberish,\n      BigNumberish,\n      BigNumberish,\n      BytesLike,\n      BytesLike\n    ]\n  ): string;\n  encodeFunctionData(functionFragment: \"delegates\", values: [string]): string;\n  encodeFunctionData(\n    functionFragment: \"getPastTotalSupply\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getPastVotes\",\n    values: [string, BigNumberish]\n  ): string;\n  encodeFunctionData(functionFragment: \"getVotes\", values: [string]): string;\n\n  decodeFunctionResult(functionFragment: \"delegate\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"delegateBySig\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"delegates\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"getPastTotalSupply\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getPastVotes\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"getVotes\", data: BytesLike): Result;\n\n  events: {\n    \"DelegateChanged(address,address,address)\": EventFragment;\n    \"DelegateVotesChanged(address,uint256,uint256)\": EventFragment;\n  };\n\n  getEvent(nameOrSignatureOrTopic: \"DelegateChanged\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"DelegateVotesChanged\"): EventFragment;\n}\n\nexport type DelegateChangedEvent = TypedEvent<\n  [string, string, string],\n  { delegator: string; fromDelegate: string; toDelegate: string }\n>;\n\nexport type DelegateChangedEventFilter = TypedEventFilter<DelegateChangedEvent>;\n\nexport type DelegateVotesChangedEvent = TypedEvent<\n  [string, BigNumber, BigNumber],\n  { delegate: string; previousBalance: BigNumber; newBalance: BigNumber }\n>;\n\nexport type DelegateVotesChangedEventFilter =\n  TypedEventFilter<DelegateVotesChangedEvent>;\n\nexport interface IVotesUpgradeable extends BaseContract {\n  contractName: string | \"IVotesUpgradeable\";\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: IVotesUpgradeableInterface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(\n    eventFilter: TypedEventFilter<TEvent>\n  ): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {\n    delegate(\n      delegatee: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    delegateBySig(\n      delegatee: string,\n      nonce: BigNumberish,\n      expiry: BigNumberish,\n      v: BigNumberish,\n      r: BytesLike,\n      s: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    delegates(account: string, overrides?: CallOverrides): Promise<[string]>;\n\n    getPastTotalSupply(\n      blockNumber: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    getPastVotes(\n      account: string,\n      blockNumber: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    getVotes(account: string, overrides?: CallOverrides): Promise<[BigNumber]>;\n  };\n\n  delegate(\n    delegatee: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  delegateBySig(\n    delegatee: string,\n    nonce: BigNumberish,\n    expiry: BigNumberish,\n    v: BigNumberish,\n    r: BytesLike,\n    s: BytesLike,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  delegates(account: string, overrides?: CallOverrides): Promise<string>;\n\n  getPastTotalSupply(\n    blockNumber: BigNumberish,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  getPastVotes(\n    account: string,\n    blockNumber: BigNumberish,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  getVotes(account: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n  callStatic: {\n    delegate(delegatee: string, overrides?: CallOverrides): Promise<void>;\n\n    delegateBySig(\n      delegatee: string,\n      nonce: BigNumberish,\n      expiry: BigNumberish,\n      v: BigNumberish,\n      r: BytesLike,\n      s: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    delegates(account: string, overrides?: CallOverrides): Promise<string>;\n\n    getPastTotalSupply(\n      blockNumber: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getPastVotes(\n      account: string,\n      blockNumber: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getVotes(account: string, overrides?: CallOverrides): Promise<BigNumber>;\n  };\n\n  filters: {\n    \"DelegateChanged(address,address,address)\"(\n      delegator?: string | null,\n      fromDelegate?: string | null,\n      toDelegate?: string | null\n    ): DelegateChangedEventFilter;\n    DelegateChanged(\n      delegator?: string | null,\n      fromDelegate?: string | null,\n      toDelegate?: string | null\n    ): DelegateChangedEventFilter;\n\n    \"DelegateVotesChanged(address,uint256,uint256)\"(\n      delegate?: string | null,\n      previousBalance?: null,\n      newBalance?: null\n    ): DelegateVotesChangedEventFilter;\n    DelegateVotesChanged(\n      delegate?: string | null,\n      previousBalance?: null,\n      newBalance?: null\n    ): DelegateVotesChangedEventFilter;\n  };\n\n  estimateGas: {\n    delegate(\n      delegatee: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    delegateBySig(\n      delegatee: string,\n      nonce: BigNumberish,\n      expiry: BigNumberish,\n      v: BigNumberish,\n      r: BytesLike,\n      s: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    delegates(account: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n    getPastTotalSupply(\n      blockNumber: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getPastVotes(\n      account: string,\n      blockNumber: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getVotes(account: string, overrides?: CallOverrides): Promise<BigNumber>;\n  };\n\n  populateTransaction: {\n    delegate(\n      delegatee: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    delegateBySig(\n      delegatee: string,\n      nonce: BigNumberish,\n      expiry: BigNumberish,\n      v: BigNumberish,\n      r: BytesLike,\n      s: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    delegates(\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getPastTotalSupply(\n      blockNumber: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getPastVotes(\n      account: string,\n      blockNumber: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getVotes(\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n  };\n}\n"],"mappings":"odAAA","names":[]}