{"version":3,"sources":["../typechain/ITokenERC721.ts"],"sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport {\n  BaseContract,\n  BigNumber,\n  BigNumberish,\n  BytesLike,\n  CallOverrides,\n  ContractTransaction,\n  Overrides,\n  PayableOverrides,\n  PopulatedTransaction,\n  Signer,\n  utils,\n} from \"ethers\";\nimport { FunctionFragment, Result, EventFragment } from \"@ethersproject/abi\";\nimport { Listener, Provider } from \"@ethersproject/providers\";\nimport { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from \"./common\";\n\nexport declare namespace ITokenERC721 {\n  export type MintRequestStruct = {\n    to: string;\n    royaltyRecipient: string;\n    royaltyBps: BigNumberish;\n    primarySaleRecipient: string;\n    uri: string;\n    price: BigNumberish;\n    currency: string;\n    validityStartTimestamp: BigNumberish;\n    validityEndTimestamp: BigNumberish;\n    uid: BytesLike;\n  };\n\n  export type MintRequestStructOutput = [\n    string,\n    string,\n    BigNumber,\n    string,\n    string,\n    BigNumber,\n    string,\n    BigNumber,\n    BigNumber,\n    string\n  ] & {\n    to: string;\n    royaltyRecipient: string;\n    royaltyBps: BigNumber;\n    primarySaleRecipient: string;\n    uri: string;\n    price: BigNumber;\n    currency: string;\n    validityStartTimestamp: BigNumber;\n    validityEndTimestamp: BigNumber;\n    uid: string;\n  };\n}\n\nexport interface ITokenERC721Interface extends utils.Interface {\n  contractName: string | \"ITokenERC721\";\n  functions: {\n    \"approve(address,uint256)\": FunctionFragment;\n    \"balanceOf(address)\": FunctionFragment;\n    \"contractType()\": FunctionFragment;\n    \"contractURI()\": FunctionFragment;\n    \"contractVersion()\": FunctionFragment;\n    \"getApproved(uint256)\": FunctionFragment;\n    \"getDefaultRoyaltyInfo()\": FunctionFragment;\n    \"getPlatformFeeInfo()\": FunctionFragment;\n    \"getRoyaltyInfoForToken(uint256)\": FunctionFragment;\n    \"isApprovedForAll(address,address)\": FunctionFragment;\n    \"mintTo(address,string)\": FunctionFragment;\n    \"mintWithSignature((address,address,uint256,address,string,uint256,address,uint128,uint128,bytes32),bytes)\": FunctionFragment;\n    \"owner()\": FunctionFragment;\n    \"ownerOf(uint256)\": FunctionFragment;\n    \"primarySaleRecipient()\": FunctionFragment;\n    \"royaltyInfo(uint256,uint256)\": FunctionFragment;\n    \"safeTransferFrom(address,address,uint256)\": FunctionFragment;\n    \"setApprovalForAll(address,bool)\": FunctionFragment;\n    \"setContractURI(string)\": FunctionFragment;\n    \"setDefaultRoyaltyInfo(address,uint256)\": FunctionFragment;\n    \"setOwner(address)\": FunctionFragment;\n    \"setPlatformFeeInfo(address,uint256)\": FunctionFragment;\n    \"setPrimarySaleRecipient(address)\": FunctionFragment;\n    \"setRoyaltyInfoForToken(uint256,address,uint256)\": FunctionFragment;\n    \"supportsInterface(bytes4)\": FunctionFragment;\n    \"transferFrom(address,address,uint256)\": FunctionFragment;\n    \"verify((address,address,uint256,address,string,uint256,address,uint128,uint128,bytes32),bytes)\": FunctionFragment;\n  };\n\n  encodeFunctionData(\n    functionFragment: \"approve\",\n    values: [string, BigNumberish]\n  ): string;\n  encodeFunctionData(functionFragment: \"balanceOf\", values: [string]): string;\n  encodeFunctionData(\n    functionFragment: \"contractType\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractURI\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractVersion\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getApproved\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getDefaultRoyaltyInfo\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getPlatformFeeInfo\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRoyaltyInfoForToken\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isApprovedForAll\",\n    values: [string, string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"mintTo\",\n    values: [string, string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"mintWithSignature\",\n    values: [ITokenERC721.MintRequestStruct, BytesLike]\n  ): string;\n  encodeFunctionData(functionFragment: \"owner\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"ownerOf\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"primarySaleRecipient\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"royaltyInfo\",\n    values: [BigNumberish, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"safeTransferFrom\",\n    values: [string, string, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setApprovalForAll\",\n    values: [string, boolean]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setContractURI\",\n    values: [string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setDefaultRoyaltyInfo\",\n    values: [string, BigNumberish]\n  ): string;\n  encodeFunctionData(functionFragment: \"setOwner\", values: [string]): string;\n  encodeFunctionData(\n    functionFragment: \"setPlatformFeeInfo\",\n    values: [string, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setPrimarySaleRecipient\",\n    values: [string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setRoyaltyInfoForToken\",\n    values: [BigNumberish, string, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"supportsInterface\",\n    values: [BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"transferFrom\",\n    values: [string, string, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"verify\",\n    values: [ITokenERC721.MintRequestStruct, BytesLike]\n  ): string;\n\n  decodeFunctionResult(functionFragment: \"approve\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"balanceOf\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractType\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractURI\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractVersion\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getApproved\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getDefaultRoyaltyInfo\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getPlatformFeeInfo\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getRoyaltyInfoForToken\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isApprovedForAll\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"mintTo\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"mintWithSignature\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"owner\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"ownerOf\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"primarySaleRecipient\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"royaltyInfo\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"safeTransferFrom\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setApprovalForAll\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setContractURI\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setDefaultRoyaltyInfo\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"setOwner\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"setPlatformFeeInfo\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setPrimarySaleRecipient\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setRoyaltyInfoForToken\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"supportsInterface\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"transferFrom\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"verify\", data: BytesLike): Result;\n\n  events: {\n    \"Approval(address,address,uint256)\": EventFragment;\n    \"ApprovalForAll(address,address,bool)\": EventFragment;\n    \"DefaultRoyalty(address,uint256)\": EventFragment;\n    \"FundsWithdrawn(address,address,uint256,uint256)\": EventFragment;\n    \"OwnerUpdated(address,address)\": EventFragment;\n    \"PlatformFeeInfoUpdated(address,uint256)\": EventFragment;\n    \"PrimarySaleRecipientUpdated(address)\": EventFragment;\n    \"RoyaltyForToken(uint256,address,uint256)\": EventFragment;\n    \"TokensMinted(address,uint256,string)\": EventFragment;\n    \"TokensMintedWithSignature(address,address,uint256,tuple)\": EventFragment;\n    \"Transfer(address,address,uint256)\": EventFragment;\n  };\n\n  getEvent(nameOrSignatureOrTopic: \"Approval\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"ApprovalForAll\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"DefaultRoyalty\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"FundsWithdrawn\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"OwnerUpdated\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"PlatformFeeInfoUpdated\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"PrimarySaleRecipientUpdated\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"RoyaltyForToken\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"TokensMinted\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"TokensMintedWithSignature\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"Transfer\"): EventFragment;\n}\n\nexport type ApprovalEvent = TypedEvent<\n  [string, string, BigNumber],\n  { owner: string; approved: string; tokenId: BigNumber }\n>;\n\nexport type ApprovalEventFilter = TypedEventFilter<ApprovalEvent>;\n\nexport type ApprovalForAllEvent = TypedEvent<\n  [string, string, boolean],\n  { owner: string; operator: string; approved: boolean }\n>;\n\nexport type ApprovalForAllEventFilter = TypedEventFilter<ApprovalForAllEvent>;\n\nexport type DefaultRoyaltyEvent = TypedEvent<\n  [string, BigNumber],\n  { newRoyaltyRecipient: string; newRoyaltyBps: BigNumber }\n>;\n\nexport type DefaultRoyaltyEventFilter = TypedEventFilter<DefaultRoyaltyEvent>;\n\nexport type FundsWithdrawnEvent = TypedEvent<\n  [string, string, BigNumber, BigNumber],\n  {\n    paymentReceiver: string;\n    feeRecipient: string;\n    totalAmount: BigNumber;\n    feeCollected: BigNumber;\n  }\n>;\n\nexport type FundsWithdrawnEventFilter = TypedEventFilter<FundsWithdrawnEvent>;\n\nexport type OwnerUpdatedEvent = TypedEvent<\n  [string, string],\n  { prevOwner: string; newOwner: string }\n>;\n\nexport type OwnerUpdatedEventFilter = TypedEventFilter<OwnerUpdatedEvent>;\n\nexport type PlatformFeeInfoUpdatedEvent = TypedEvent<\n  [string, BigNumber],\n  { platformFeeRecipient: string; platformFeeBps: BigNumber }\n>;\n\nexport type PlatformFeeInfoUpdatedEventFilter =\n  TypedEventFilter<PlatformFeeInfoUpdatedEvent>;\n\nexport type PrimarySaleRecipientUpdatedEvent = TypedEvent<\n  [string],\n  { recipient: string }\n>;\n\nexport type PrimarySaleRecipientUpdatedEventFilter =\n  TypedEventFilter<PrimarySaleRecipientUpdatedEvent>;\n\nexport type RoyaltyForTokenEvent = TypedEvent<\n  [BigNumber, string, BigNumber],\n  { tokenId: BigNumber; royaltyRecipient: string; royaltyBps: BigNumber }\n>;\n\nexport type RoyaltyForTokenEventFilter = TypedEventFilter<RoyaltyForTokenEvent>;\n\nexport type TokensMintedEvent = TypedEvent<\n  [string, BigNumber, string],\n  { mintedTo: string; tokenIdMinted: BigNumber; uri: string }\n>;\n\nexport type TokensMintedEventFilter = TypedEventFilter<TokensMintedEvent>;\n\nexport type TokensMintedWithSignatureEvent = TypedEvent<\n  [string, string, BigNumber, ITokenERC721.MintRequestStructOutput],\n  {\n    signer: string;\n    mintedTo: string;\n    tokenIdMinted: BigNumber;\n    mintRequest: ITokenERC721.MintRequestStructOutput;\n  }\n>;\n\nexport type TokensMintedWithSignatureEventFilter =\n  TypedEventFilter<TokensMintedWithSignatureEvent>;\n\nexport type TransferEvent = TypedEvent<\n  [string, string, BigNumber],\n  { from: string; to: string; tokenId: BigNumber }\n>;\n\nexport type TransferEventFilter = TypedEventFilter<TransferEvent>;\n\nexport interface ITokenERC721 extends BaseContract {\n  contractName: string | \"ITokenERC721\";\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: ITokenERC721Interface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(\n    eventFilter: TypedEventFilter<TEvent>\n  ): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {\n    approve(\n      to: string,\n      tokenId: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    balanceOf(\n      owner: string,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber] & { balance: BigNumber }>;\n\n    contractType(overrides?: CallOverrides): Promise<[string]>;\n\n    contractURI(overrides?: CallOverrides): Promise<[string]>;\n\n    contractVersion(overrides?: CallOverrides): Promise<[number]>;\n\n    getApproved(\n      tokenId: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<[string] & { operator: string }>;\n\n    getDefaultRoyaltyInfo(overrides?: CallOverrides): Promise<[string, number]>;\n\n    getPlatformFeeInfo(\n      overrides?: CallOverrides\n    ): Promise<\n      [string, number] & {\n        platformFeeRecipient: string;\n        platformFeeBps: number;\n      }\n    >;\n\n    getRoyaltyInfoForToken(\n      tokenId: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<[string, number]>;\n\n    isApprovedForAll(\n      owner: string,\n      operator: string,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    mintTo(\n      to: string,\n      uri: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    mintWithSignature(\n      req: ITokenERC721.MintRequestStruct,\n      signature: BytesLike,\n      overrides?: PayableOverrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    owner(overrides?: CallOverrides): Promise<[string]>;\n\n    ownerOf(\n      tokenId: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<[string] & { owner: string }>;\n\n    primarySaleRecipient(overrides?: CallOverrides): Promise<[string]>;\n\n    royaltyInfo(\n      tokenId: BigNumberish,\n      salePrice: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<\n      [string, BigNumber] & { receiver: string; royaltyAmount: BigNumber }\n    >;\n\n    \"safeTransferFrom(address,address,uint256)\"(\n      from: string,\n      to: string,\n      tokenId: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    \"safeTransferFrom(address,address,uint256,bytes)\"(\n      from: string,\n      to: string,\n      tokenId: BigNumberish,\n      data: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    setApprovalForAll(\n      operator: string,\n      _approved: boolean,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    setContractURI(\n      _uri: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    setDefaultRoyaltyInfo(\n      _royaltyRecipient: string,\n      _royaltyBps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    setOwner(\n      _newOwner: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    setPlatformFeeInfo(\n      _platformFeeRecipient: string,\n      _platformFeeBps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    setPrimarySaleRecipient(\n      _saleRecipient: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    setRoyaltyInfoForToken(\n      tokenId: BigNumberish,\n      recipient: string,\n      bps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    supportsInterface(\n      interfaceId: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    transferFrom(\n      from: string,\n      to: string,\n      tokenId: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    verify(\n      req: ITokenERC721.MintRequestStruct,\n      signature: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<[boolean, string] & { success: boolean; signer: string }>;\n  };\n\n  approve(\n    to: string,\n    tokenId: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  balanceOf(owner: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n  contractType(overrides?: CallOverrides): Promise<string>;\n\n  contractURI(overrides?: CallOverrides): Promise<string>;\n\n  contractVersion(overrides?: CallOverrides): Promise<number>;\n\n  getApproved(\n    tokenId: BigNumberish,\n    overrides?: CallOverrides\n  ): Promise<string>;\n\n  getDefaultRoyaltyInfo(overrides?: CallOverrides): Promise<[string, number]>;\n\n  getPlatformFeeInfo(\n    overrides?: CallOverrides\n  ): Promise<\n    [string, number] & { platformFeeRecipient: string; platformFeeBps: number }\n  >;\n\n  getRoyaltyInfoForToken(\n    tokenId: BigNumberish,\n    overrides?: CallOverrides\n  ): Promise<[string, number]>;\n\n  isApprovedForAll(\n    owner: string,\n    operator: string,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  mintTo(\n    to: string,\n    uri: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  mintWithSignature(\n    req: ITokenERC721.MintRequestStruct,\n    signature: BytesLike,\n    overrides?: PayableOverrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  owner(overrides?: CallOverrides): Promise<string>;\n\n  ownerOf(tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;\n\n  primarySaleRecipient(overrides?: CallOverrides): Promise<string>;\n\n  royaltyInfo(\n    tokenId: BigNumberish,\n    salePrice: BigNumberish,\n    overrides?: CallOverrides\n  ): Promise<\n    [string, BigNumber] & { receiver: string; royaltyAmount: BigNumber }\n  >;\n\n  \"safeTransferFrom(address,address,uint256)\"(\n    from: string,\n    to: string,\n    tokenId: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  \"safeTransferFrom(address,address,uint256,bytes)\"(\n    from: string,\n    to: string,\n    tokenId: BigNumberish,\n    data: BytesLike,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  setApprovalForAll(\n    operator: string,\n    _approved: boolean,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  setContractURI(\n    _uri: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  setDefaultRoyaltyInfo(\n    _royaltyRecipient: string,\n    _royaltyBps: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  setOwner(\n    _newOwner: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  setPlatformFeeInfo(\n    _platformFeeRecipient: string,\n    _platformFeeBps: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  setPrimarySaleRecipient(\n    _saleRecipient: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  setRoyaltyInfoForToken(\n    tokenId: BigNumberish,\n    recipient: string,\n    bps: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  supportsInterface(\n    interfaceId: BytesLike,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  transferFrom(\n    from: string,\n    to: string,\n    tokenId: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  verify(\n    req: ITokenERC721.MintRequestStruct,\n    signature: BytesLike,\n    overrides?: CallOverrides\n  ): Promise<[boolean, string] & { success: boolean; signer: string }>;\n\n  callStatic: {\n    approve(\n      to: string,\n      tokenId: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    balanceOf(owner: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n    contractType(overrides?: CallOverrides): Promise<string>;\n\n    contractURI(overrides?: CallOverrides): Promise<string>;\n\n    contractVersion(overrides?: CallOverrides): Promise<number>;\n\n    getApproved(\n      tokenId: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    getDefaultRoyaltyInfo(overrides?: CallOverrides): Promise<[string, number]>;\n\n    getPlatformFeeInfo(\n      overrides?: CallOverrides\n    ): Promise<\n      [string, number] & {\n        platformFeeRecipient: string;\n        platformFeeBps: number;\n      }\n    >;\n\n    getRoyaltyInfoForToken(\n      tokenId: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<[string, number]>;\n\n    isApprovedForAll(\n      owner: string,\n      operator: string,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    mintTo(\n      to: string,\n      uri: string,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    mintWithSignature(\n      req: ITokenERC721.MintRequestStruct,\n      signature: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    owner(overrides?: CallOverrides): Promise<string>;\n\n    ownerOf(tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;\n\n    primarySaleRecipient(overrides?: CallOverrides): Promise<string>;\n\n    royaltyInfo(\n      tokenId: BigNumberish,\n      salePrice: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<\n      [string, BigNumber] & { receiver: string; royaltyAmount: BigNumber }\n    >;\n\n    \"safeTransferFrom(address,address,uint256)\"(\n      from: string,\n      to: string,\n      tokenId: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    \"safeTransferFrom(address,address,uint256,bytes)\"(\n      from: string,\n      to: string,\n      tokenId: BigNumberish,\n      data: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    setApprovalForAll(\n      operator: string,\n      _approved: boolean,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    setContractURI(_uri: string, overrides?: CallOverrides): Promise<void>;\n\n    setDefaultRoyaltyInfo(\n      _royaltyRecipient: string,\n      _royaltyBps: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    setOwner(_newOwner: string, overrides?: CallOverrides): Promise<void>;\n\n    setPlatformFeeInfo(\n      _platformFeeRecipient: string,\n      _platformFeeBps: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    setPrimarySaleRecipient(\n      _saleRecipient: string,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    setRoyaltyInfoForToken(\n      tokenId: BigNumberish,\n      recipient: string,\n      bps: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    supportsInterface(\n      interfaceId: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    transferFrom(\n      from: string,\n      to: string,\n      tokenId: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    verify(\n      req: ITokenERC721.MintRequestStruct,\n      signature: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<[boolean, string] & { success: boolean; signer: string }>;\n  };\n\n  filters: {\n    \"Approval(address,address,uint256)\"(\n      owner?: string | null,\n      approved?: string | null,\n      tokenId?: BigNumberish | null\n    ): ApprovalEventFilter;\n    Approval(\n      owner?: string | null,\n      approved?: string | null,\n      tokenId?: BigNumberish | null\n    ): ApprovalEventFilter;\n\n    \"ApprovalForAll(address,address,bool)\"(\n      owner?: string | null,\n      operator?: string | null,\n      approved?: null\n    ): ApprovalForAllEventFilter;\n    ApprovalForAll(\n      owner?: string | null,\n      operator?: string | null,\n      approved?: null\n    ): ApprovalForAllEventFilter;\n\n    \"DefaultRoyalty(address,uint256)\"(\n      newRoyaltyRecipient?: null,\n      newRoyaltyBps?: null\n    ): DefaultRoyaltyEventFilter;\n    DefaultRoyalty(\n      newRoyaltyRecipient?: null,\n      newRoyaltyBps?: null\n    ): DefaultRoyaltyEventFilter;\n\n    \"FundsWithdrawn(address,address,uint256,uint256)\"(\n      paymentReceiver?: string | null,\n      feeRecipient?: null,\n      totalAmount?: null,\n      feeCollected?: null\n    ): FundsWithdrawnEventFilter;\n    FundsWithdrawn(\n      paymentReceiver?: string | null,\n      feeRecipient?: null,\n      totalAmount?: null,\n      feeCollected?: null\n    ): FundsWithdrawnEventFilter;\n\n    \"OwnerUpdated(address,address)\"(\n      prevOwner?: null,\n      newOwner?: null\n    ): OwnerUpdatedEventFilter;\n    OwnerUpdated(prevOwner?: null, newOwner?: null): OwnerUpdatedEventFilter;\n\n    \"PlatformFeeInfoUpdated(address,uint256)\"(\n      platformFeeRecipient?: null,\n      platformFeeBps?: null\n    ): PlatformFeeInfoUpdatedEventFilter;\n    PlatformFeeInfoUpdated(\n      platformFeeRecipient?: null,\n      platformFeeBps?: null\n    ): PlatformFeeInfoUpdatedEventFilter;\n\n    \"PrimarySaleRecipientUpdated(address)\"(\n      recipient?: string | null\n    ): PrimarySaleRecipientUpdatedEventFilter;\n    PrimarySaleRecipientUpdated(\n      recipient?: string | null\n    ): PrimarySaleRecipientUpdatedEventFilter;\n\n    \"RoyaltyForToken(uint256,address,uint256)\"(\n      tokenId?: BigNumberish | null,\n      royaltyRecipient?: null,\n      royaltyBps?: null\n    ): RoyaltyForTokenEventFilter;\n    RoyaltyForToken(\n      tokenId?: BigNumberish | null,\n      royaltyRecipient?: null,\n      royaltyBps?: null\n    ): RoyaltyForTokenEventFilter;\n\n    \"TokensMinted(address,uint256,string)\"(\n      mintedTo?: string | null,\n      tokenIdMinted?: BigNumberish | null,\n      uri?: null\n    ): TokensMintedEventFilter;\n    TokensMinted(\n      mintedTo?: string | null,\n      tokenIdMinted?: BigNumberish | null,\n      uri?: null\n    ): TokensMintedEventFilter;\n\n    \"TokensMintedWithSignature(address,address,uint256,tuple)\"(\n      signer?: string | null,\n      mintedTo?: string | null,\n      tokenIdMinted?: BigNumberish | null,\n      mintRequest?: null\n    ): TokensMintedWithSignatureEventFilter;\n    TokensMintedWithSignature(\n      signer?: string | null,\n      mintedTo?: string | null,\n      tokenIdMinted?: BigNumberish | null,\n      mintRequest?: null\n    ): TokensMintedWithSignatureEventFilter;\n\n    \"Transfer(address,address,uint256)\"(\n      from?: string | null,\n      to?: string | null,\n      tokenId?: BigNumberish | null\n    ): TransferEventFilter;\n    Transfer(\n      from?: string | null,\n      to?: string | null,\n      tokenId?: BigNumberish | null\n    ): TransferEventFilter;\n  };\n\n  estimateGas: {\n    approve(\n      to: string,\n      tokenId: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    balanceOf(owner: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n    contractType(overrides?: CallOverrides): Promise<BigNumber>;\n\n    contractURI(overrides?: CallOverrides): Promise<BigNumber>;\n\n    contractVersion(overrides?: CallOverrides): Promise<BigNumber>;\n\n    getApproved(\n      tokenId: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getDefaultRoyaltyInfo(overrides?: CallOverrides): Promise<BigNumber>;\n\n    getPlatformFeeInfo(overrides?: CallOverrides): Promise<BigNumber>;\n\n    getRoyaltyInfoForToken(\n      tokenId: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isApprovedForAll(\n      owner: string,\n      operator: string,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    mintTo(\n      to: string,\n      uri: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    mintWithSignature(\n      req: ITokenERC721.MintRequestStruct,\n      signature: BytesLike,\n      overrides?: PayableOverrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    owner(overrides?: CallOverrides): Promise<BigNumber>;\n\n    ownerOf(\n      tokenId: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    primarySaleRecipient(overrides?: CallOverrides): Promise<BigNumber>;\n\n    royaltyInfo(\n      tokenId: BigNumberish,\n      salePrice: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    \"safeTransferFrom(address,address,uint256)\"(\n      from: string,\n      to: string,\n      tokenId: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    \"safeTransferFrom(address,address,uint256,bytes)\"(\n      from: string,\n      to: string,\n      tokenId: BigNumberish,\n      data: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    setApprovalForAll(\n      operator: string,\n      _approved: boolean,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    setContractURI(\n      _uri: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    setDefaultRoyaltyInfo(\n      _royaltyRecipient: string,\n      _royaltyBps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    setOwner(\n      _newOwner: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    setPlatformFeeInfo(\n      _platformFeeRecipient: string,\n      _platformFeeBps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    setPrimarySaleRecipient(\n      _saleRecipient: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    setRoyaltyInfoForToken(\n      tokenId: BigNumberish,\n      recipient: string,\n      bps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    supportsInterface(\n      interfaceId: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    transferFrom(\n      from: string,\n      to: string,\n      tokenId: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    verify(\n      req: ITokenERC721.MintRequestStruct,\n      signature: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n  };\n\n  populateTransaction: {\n    approve(\n      to: string,\n      tokenId: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    balanceOf(\n      owner: string,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    contractType(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    contractURI(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    contractVersion(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    getApproved(\n      tokenId: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getDefaultRoyaltyInfo(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getPlatformFeeInfo(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getRoyaltyInfoForToken(\n      tokenId: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isApprovedForAll(\n      owner: string,\n      operator: string,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    mintTo(\n      to: string,\n      uri: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    mintWithSignature(\n      req: ITokenERC721.MintRequestStruct,\n      signature: BytesLike,\n      overrides?: PayableOverrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    ownerOf(\n      tokenId: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    primarySaleRecipient(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    royaltyInfo(\n      tokenId: BigNumberish,\n      salePrice: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    \"safeTransferFrom(address,address,uint256)\"(\n      from: string,\n      to: string,\n      tokenId: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    \"safeTransferFrom(address,address,uint256,bytes)\"(\n      from: string,\n      to: string,\n      tokenId: BigNumberish,\n      data: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setApprovalForAll(\n      operator: string,\n      _approved: boolean,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setContractURI(\n      _uri: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setDefaultRoyaltyInfo(\n      _royaltyRecipient: string,\n      _royaltyBps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setOwner(\n      _newOwner: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setPlatformFeeInfo(\n      _platformFeeRecipient: string,\n      _platformFeeBps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setPrimarySaleRecipient(\n      _saleRecipient: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setRoyaltyInfoForToken(\n      tokenId: BigNumberish,\n      recipient: string,\n      bps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    supportsInterface(\n      interfaceId: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    transferFrom(\n      from: string,\n      to: string,\n      tokenId: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    verify(\n      req: ITokenERC721.MintRequestStruct,\n      signature: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n  };\n}\n"],"mappings":"odAAA","names":[]}