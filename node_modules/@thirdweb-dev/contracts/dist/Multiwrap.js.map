{"version":3,"sources":["../typechain/Multiwrap.ts"],"sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport {\n  BaseContract,\n  BigNumber,\n  BigNumberish,\n  BytesLike,\n  CallOverrides,\n  ContractTransaction,\n  Overrides,\n  PayableOverrides,\n  PopulatedTransaction,\n  Signer,\n  utils,\n} from \"ethers\";\nimport { FunctionFragment, Result, EventFragment } from \"@ethersproject/abi\";\nimport { Listener, Provider } from \"@ethersproject/providers\";\nimport { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from \"./common\";\n\nexport declare namespace MultiTokenTransferLib {\n  export type MultiTokenStruct = {\n    erc1155AssetContracts: string[];\n    erc1155TokensToWrap: BigNumberish[][];\n    erc1155AmountsToWrap: BigNumberish[][];\n    erc721AssetContracts: string[];\n    erc721TokensToWrap: BigNumberish[][];\n    erc20AssetContracts: string[];\n    erc20AmountsToWrap: BigNumberish[];\n  };\n\n  export type MultiTokenStructOutput = [\n    string[],\n    BigNumber[][],\n    BigNumber[][],\n    string[],\n    BigNumber[][],\n    string[],\n    BigNumber[]\n  ] & {\n    erc1155AssetContracts: string[];\n    erc1155TokensToWrap: BigNumber[][];\n    erc1155AmountsToWrap: BigNumber[][];\n    erc721AssetContracts: string[];\n    erc721TokensToWrap: BigNumber[][];\n    erc20AssetContracts: string[];\n    erc20AmountsToWrap: BigNumber[];\n  };\n}\n\nexport interface MultiwrapInterface extends utils.Interface {\n  contractName: string | \"Multiwrap\";\n  functions: {\n    \"DEFAULT_ADMIN_ROLE()\": FunctionFragment;\n    \"balanceOf(address,uint256)\": FunctionFragment;\n    \"balanceOfBatch(address[],uint256[])\": FunctionFragment;\n    \"burn(address,uint256,uint256)\": FunctionFragment;\n    \"burnBatch(address,uint256[],uint256[])\": FunctionFragment;\n    \"contractType()\": FunctionFragment;\n    \"contractURI()\": FunctionFragment;\n    \"contractVersion()\": FunctionFragment;\n    \"getDefaultRoyaltyInfo()\": FunctionFragment;\n    \"getRoleAdmin(bytes32)\": FunctionFragment;\n    \"getRoleMember(bytes32,uint256)\": FunctionFragment;\n    \"getRoleMemberCount(bytes32)\": FunctionFragment;\n    \"getRoyaltyInfoForToken(uint256)\": FunctionFragment;\n    \"grantRole(bytes32,address)\": FunctionFragment;\n    \"hasRole(bytes32,address)\": FunctionFragment;\n    \"initialize(address,string,string,string,address[],address,uint256)\": FunctionFragment;\n    \"isApprovedForAll(address,address)\": FunctionFragment;\n    \"isTrustedForwarder(address)\": FunctionFragment;\n    \"multicall(bytes[])\": FunctionFragment;\n    \"name()\": FunctionFragment;\n    \"nextTokenIdToMint()\": FunctionFragment;\n    \"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\": FunctionFragment;\n    \"onERC1155Received(address,address,uint256,uint256,bytes)\": FunctionFragment;\n    \"onERC721Received(address,address,uint256,bytes)\": FunctionFragment;\n    \"owner()\": FunctionFragment;\n    \"renounceRole(bytes32,address)\": FunctionFragment;\n    \"revokeRole(bytes32,address)\": FunctionFragment;\n    \"royaltyInfo(uint256,uint256)\": FunctionFragment;\n    \"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\": FunctionFragment;\n    \"safeTransferFrom(address,address,uint256,uint256,bytes)\": FunctionFragment;\n    \"setApprovalForAll(address,bool)\": FunctionFragment;\n    \"setContractURI(string)\": FunctionFragment;\n    \"setDefaultRoyaltyInfo(address,uint256)\": FunctionFragment;\n    \"setOwner(address)\": FunctionFragment;\n    \"setRoyaltyInfoForToken(uint256,address,uint256)\": FunctionFragment;\n    \"supportsInterface(bytes4)\": FunctionFragment;\n    \"symbol()\": FunctionFragment;\n    \"totalShares(uint256)\": FunctionFragment;\n    \"totalSupply(uint256)\": FunctionFragment;\n    \"unwrap(uint256,uint256,address)\": FunctionFragment;\n    \"uri(uint256)\": FunctionFragment;\n    \"wrap((address[],uint256[][],uint256[][],address[],uint256[][],address[],uint256[]),uint256,string)\": FunctionFragment;\n  };\n\n  encodeFunctionData(\n    functionFragment: \"DEFAULT_ADMIN_ROLE\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"balanceOf\",\n    values: [string, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"balanceOfBatch\",\n    values: [string[], BigNumberish[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"burn\",\n    values: [string, BigNumberish, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"burnBatch\",\n    values: [string, BigNumberish[], BigNumberish[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractType\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractURI\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractVersion\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getDefaultRoyaltyInfo\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRoleAdmin\",\n    values: [BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRoleMember\",\n    values: [BytesLike, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRoleMemberCount\",\n    values: [BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRoyaltyInfoForToken\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"grantRole\",\n    values: [BytesLike, string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"hasRole\",\n    values: [BytesLike, string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"initialize\",\n    values: [string, string, string, string, string[], string, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isApprovedForAll\",\n    values: [string, string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isTrustedForwarder\",\n    values: [string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"multicall\",\n    values: [BytesLike[]]\n  ): string;\n  encodeFunctionData(functionFragment: \"name\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"nextTokenIdToMint\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"onERC1155BatchReceived\",\n    values: [string, string, BigNumberish[], BigNumberish[], BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"onERC1155Received\",\n    values: [string, string, BigNumberish, BigNumberish, BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"onERC721Received\",\n    values: [string, string, BigNumberish, BytesLike]\n  ): string;\n  encodeFunctionData(functionFragment: \"owner\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"renounceRole\",\n    values: [BytesLike, string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"revokeRole\",\n    values: [BytesLike, string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"royaltyInfo\",\n    values: [BigNumberish, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"safeBatchTransferFrom\",\n    values: [string, string, BigNumberish[], BigNumberish[], BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"safeTransferFrom\",\n    values: [string, string, BigNumberish, BigNumberish, BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setApprovalForAll\",\n    values: [string, boolean]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setContractURI\",\n    values: [string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setDefaultRoyaltyInfo\",\n    values: [string, BigNumberish]\n  ): string;\n  encodeFunctionData(functionFragment: \"setOwner\", values: [string]): string;\n  encodeFunctionData(\n    functionFragment: \"setRoyaltyInfoForToken\",\n    values: [BigNumberish, string, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"supportsInterface\",\n    values: [BytesLike]\n  ): string;\n  encodeFunctionData(functionFragment: \"symbol\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"totalShares\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"totalSupply\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"unwrap\",\n    values: [BigNumberish, BigNumberish, string]\n  ): string;\n  encodeFunctionData(functionFragment: \"uri\", values: [BigNumberish]): string;\n  encodeFunctionData(\n    functionFragment: \"wrap\",\n    values: [MultiTokenTransferLib.MultiTokenStruct, BigNumberish, string]\n  ): string;\n\n  decodeFunctionResult(\n    functionFragment: \"DEFAULT_ADMIN_ROLE\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"balanceOf\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"balanceOfBatch\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"burn\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"burnBatch\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractType\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractURI\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractVersion\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getDefaultRoyaltyInfo\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getRoleAdmin\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getRoleMember\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getRoleMemberCount\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getRoyaltyInfoForToken\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"grantRole\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"hasRole\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"initialize\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"isApprovedForAll\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isTrustedForwarder\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"multicall\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"name\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"nextTokenIdToMint\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"onERC1155BatchReceived\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"onERC1155Received\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"onERC721Received\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"owner\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"renounceRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"revokeRole\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"royaltyInfo\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"safeBatchTransferFrom\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"safeTransferFrom\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setApprovalForAll\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setContractURI\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setDefaultRoyaltyInfo\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"setOwner\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"setRoyaltyInfoForToken\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"supportsInterface\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"symbol\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"totalShares\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"totalSupply\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"unwrap\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"uri\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"wrap\", data: BytesLike): Result;\n\n  events: {\n    \"ApprovalForAll(address,address,bool)\": EventFragment;\n    \"DefaultRoyalty(address,uint256)\": EventFragment;\n    \"OwnerUpdated(address,address)\": EventFragment;\n    \"RoleAdminChanged(bytes32,bytes32,bytes32)\": EventFragment;\n    \"RoleGranted(bytes32,address,address)\": EventFragment;\n    \"RoleRevoked(bytes32,address,address)\": EventFragment;\n    \"RoyaltyForToken(uint256,address,uint256)\": EventFragment;\n    \"TokensUnwrapped(address,address,uint256,uint256,tuple)\": EventFragment;\n    \"TokensWrapped(address,uint256,tuple)\": EventFragment;\n    \"TransferBatch(address,address,address,uint256[],uint256[])\": EventFragment;\n    \"TransferSingle(address,address,address,uint256,uint256)\": EventFragment;\n    \"URI(string,uint256)\": EventFragment;\n  };\n\n  getEvent(nameOrSignatureOrTopic: \"ApprovalForAll\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"DefaultRoyalty\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"OwnerUpdated\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"RoleAdminChanged\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"RoleGranted\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"RoleRevoked\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"RoyaltyForToken\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"TokensUnwrapped\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"TokensWrapped\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"TransferBatch\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"TransferSingle\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"URI\"): EventFragment;\n}\n\nexport type ApprovalForAllEvent = TypedEvent<\n  [string, string, boolean],\n  { account: string; operator: string; approved: boolean }\n>;\n\nexport type ApprovalForAllEventFilter = TypedEventFilter<ApprovalForAllEvent>;\n\nexport type DefaultRoyaltyEvent = TypedEvent<\n  [string, BigNumber],\n  { newRoyaltyRecipient: string; newRoyaltyBps: BigNumber }\n>;\n\nexport type DefaultRoyaltyEventFilter = TypedEventFilter<DefaultRoyaltyEvent>;\n\nexport type OwnerUpdatedEvent = TypedEvent<\n  [string, string],\n  { prevOwner: string; newOwner: string }\n>;\n\nexport type OwnerUpdatedEventFilter = TypedEventFilter<OwnerUpdatedEvent>;\n\nexport type RoleAdminChangedEvent = TypedEvent<\n  [string, string, string],\n  { role: string; previousAdminRole: string; newAdminRole: string }\n>;\n\nexport type RoleAdminChangedEventFilter =\n  TypedEventFilter<RoleAdminChangedEvent>;\n\nexport type RoleGrantedEvent = TypedEvent<\n  [string, string, string],\n  { role: string; account: string; sender: string }\n>;\n\nexport type RoleGrantedEventFilter = TypedEventFilter<RoleGrantedEvent>;\n\nexport type RoleRevokedEvent = TypedEvent<\n  [string, string, string],\n  { role: string; account: string; sender: string }\n>;\n\nexport type RoleRevokedEventFilter = TypedEventFilter<RoleRevokedEvent>;\n\nexport type RoyaltyForTokenEvent = TypedEvent<\n  [BigNumber, string, BigNumber],\n  { tokenId: BigNumber; royaltyRecipient: string; royaltyBps: BigNumber }\n>;\n\nexport type RoyaltyForTokenEventFilter = TypedEventFilter<RoyaltyForTokenEvent>;\n\nexport type TokensUnwrappedEvent = TypedEvent<\n  [\n    string,\n    string,\n    BigNumber,\n    BigNumber,\n    MultiTokenTransferLib.MultiTokenStructOutput\n  ],\n  {\n    wrapper: string;\n    sentTo: string;\n    tokenIdOfShares: BigNumber;\n    sharesUnwrapped: BigNumber;\n    wrappedContents: MultiTokenTransferLib.MultiTokenStructOutput;\n  }\n>;\n\nexport type TokensUnwrappedEventFilter = TypedEventFilter<TokensUnwrappedEvent>;\n\nexport type TokensWrappedEvent = TypedEvent<\n  [string, BigNumber, MultiTokenTransferLib.MultiTokenStructOutput],\n  {\n    wrapper: string;\n    tokenIdOfShares: BigNumber;\n    wrappedContents: MultiTokenTransferLib.MultiTokenStructOutput;\n  }\n>;\n\nexport type TokensWrappedEventFilter = TypedEventFilter<TokensWrappedEvent>;\n\nexport type TransferBatchEvent = TypedEvent<\n  [string, string, string, BigNumber[], BigNumber[]],\n  {\n    operator: string;\n    from: string;\n    to: string;\n    ids: BigNumber[];\n    values: BigNumber[];\n  }\n>;\n\nexport type TransferBatchEventFilter = TypedEventFilter<TransferBatchEvent>;\n\nexport type TransferSingleEvent = TypedEvent<\n  [string, string, string, BigNumber, BigNumber],\n  {\n    operator: string;\n    from: string;\n    to: string;\n    id: BigNumber;\n    value: BigNumber;\n  }\n>;\n\nexport type TransferSingleEventFilter = TypedEventFilter<TransferSingleEvent>;\n\nexport type URIEvent = TypedEvent<\n  [string, BigNumber],\n  { value: string; id: BigNumber }\n>;\n\nexport type URIEventFilter = TypedEventFilter<URIEvent>;\n\nexport interface Multiwrap extends BaseContract {\n  contractName: string | \"Multiwrap\";\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: MultiwrapInterface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(\n    eventFilter: TypedEventFilter<TEvent>\n  ): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {\n    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<[string]>;\n\n    balanceOf(\n      account: string,\n      id: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    balanceOfBatch(\n      accounts: string[],\n      ids: BigNumberish[],\n      overrides?: CallOverrides\n    ): Promise<[BigNumber[]]>;\n\n    burn(\n      account: string,\n      id: BigNumberish,\n      value: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    burnBatch(\n      account: string,\n      ids: BigNumberish[],\n      values: BigNumberish[],\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    contractType(overrides?: CallOverrides): Promise<[string]>;\n\n    contractURI(overrides?: CallOverrides): Promise<[string]>;\n\n    contractVersion(overrides?: CallOverrides): Promise<[number]>;\n\n    getDefaultRoyaltyInfo(overrides?: CallOverrides): Promise<[string, number]>;\n\n    getRoleAdmin(role: BytesLike, overrides?: CallOverrides): Promise<[string]>;\n\n    getRoleMember(\n      role: BytesLike,\n      index: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<[string]>;\n\n    getRoleMemberCount(\n      role: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    getRoyaltyInfoForToken(\n      _tokenId: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<[string, number]>;\n\n    grantRole(\n      role: BytesLike,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    hasRole(\n      role: BytesLike,\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    initialize(\n      _defaultAdmin: string,\n      _name: string,\n      _symbol: string,\n      _contractURI: string,\n      _trustedForwarders: string[],\n      _royaltyRecipient: string,\n      _royaltyBps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    isApprovedForAll(\n      account: string,\n      operator: string,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isTrustedForwarder(\n      forwarder: string,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    multicall(\n      data: BytesLike[],\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    name(overrides?: CallOverrides): Promise<[string]>;\n\n    nextTokenIdToMint(overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    onERC1155BatchReceived(\n      arg0: string,\n      arg1: string,\n      arg2: BigNumberish[],\n      arg3: BigNumberish[],\n      arg4: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    onERC1155Received(\n      arg0: string,\n      arg1: string,\n      arg2: BigNumberish,\n      arg3: BigNumberish,\n      arg4: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    onERC721Received(\n      arg0: string,\n      arg1: string,\n      arg2: BigNumberish,\n      arg3: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    owner(overrides?: CallOverrides): Promise<[string]>;\n\n    renounceRole(\n      role: BytesLike,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    revokeRole(\n      role: BytesLike,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    royaltyInfo(\n      tokenId: BigNumberish,\n      salePrice: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<\n      [string, BigNumber] & { receiver: string; royaltyAmount: BigNumber }\n    >;\n\n    safeBatchTransferFrom(\n      from: string,\n      to: string,\n      ids: BigNumberish[],\n      amounts: BigNumberish[],\n      data: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    safeTransferFrom(\n      from: string,\n      to: string,\n      id: BigNumberish,\n      amount: BigNumberish,\n      data: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    setApprovalForAll(\n      operator: string,\n      approved: boolean,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    setContractURI(\n      _uri: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    setDefaultRoyaltyInfo(\n      _royaltyRecipient: string,\n      _royaltyBps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    setOwner(\n      _newOwner: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    setRoyaltyInfoForToken(\n      _tokenId: BigNumberish,\n      _recipient: string,\n      _bps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    supportsInterface(\n      interfaceId: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    symbol(overrides?: CallOverrides): Promise<[string]>;\n\n    totalShares(\n      arg0: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    totalSupply(\n      arg0: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    unwrap(\n      _tokenId: BigNumberish,\n      _amountToRedeem: BigNumberish,\n      _sendTo: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    uri(_tokenId: BigNumberish, overrides?: CallOverrides): Promise<[string]>;\n\n    wrap(\n      _wrappedContents: MultiTokenTransferLib.MultiTokenStruct,\n      _shares: BigNumberish,\n      _uriForShares: string,\n      overrides?: PayableOverrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n  };\n\n  DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<string>;\n\n  balanceOf(\n    account: string,\n    id: BigNumberish,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  balanceOfBatch(\n    accounts: string[],\n    ids: BigNumberish[],\n    overrides?: CallOverrides\n  ): Promise<BigNumber[]>;\n\n  burn(\n    account: string,\n    id: BigNumberish,\n    value: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  burnBatch(\n    account: string,\n    ids: BigNumberish[],\n    values: BigNumberish[],\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  contractType(overrides?: CallOverrides): Promise<string>;\n\n  contractURI(overrides?: CallOverrides): Promise<string>;\n\n  contractVersion(overrides?: CallOverrides): Promise<number>;\n\n  getDefaultRoyaltyInfo(overrides?: CallOverrides): Promise<[string, number]>;\n\n  getRoleAdmin(role: BytesLike, overrides?: CallOverrides): Promise<string>;\n\n  getRoleMember(\n    role: BytesLike,\n    index: BigNumberish,\n    overrides?: CallOverrides\n  ): Promise<string>;\n\n  getRoleMemberCount(\n    role: BytesLike,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  getRoyaltyInfoForToken(\n    _tokenId: BigNumberish,\n    overrides?: CallOverrides\n  ): Promise<[string, number]>;\n\n  grantRole(\n    role: BytesLike,\n    account: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  hasRole(\n    role: BytesLike,\n    account: string,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  initialize(\n    _defaultAdmin: string,\n    _name: string,\n    _symbol: string,\n    _contractURI: string,\n    _trustedForwarders: string[],\n    _royaltyRecipient: string,\n    _royaltyBps: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  isApprovedForAll(\n    account: string,\n    operator: string,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isTrustedForwarder(\n    forwarder: string,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  multicall(\n    data: BytesLike[],\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  name(overrides?: CallOverrides): Promise<string>;\n\n  nextTokenIdToMint(overrides?: CallOverrides): Promise<BigNumber>;\n\n  onERC1155BatchReceived(\n    arg0: string,\n    arg1: string,\n    arg2: BigNumberish[],\n    arg3: BigNumberish[],\n    arg4: BytesLike,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  onERC1155Received(\n    arg0: string,\n    arg1: string,\n    arg2: BigNumberish,\n    arg3: BigNumberish,\n    arg4: BytesLike,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  onERC721Received(\n    arg0: string,\n    arg1: string,\n    arg2: BigNumberish,\n    arg3: BytesLike,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  owner(overrides?: CallOverrides): Promise<string>;\n\n  renounceRole(\n    role: BytesLike,\n    account: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  revokeRole(\n    role: BytesLike,\n    account: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  royaltyInfo(\n    tokenId: BigNumberish,\n    salePrice: BigNumberish,\n    overrides?: CallOverrides\n  ): Promise<\n    [string, BigNumber] & { receiver: string; royaltyAmount: BigNumber }\n  >;\n\n  safeBatchTransferFrom(\n    from: string,\n    to: string,\n    ids: BigNumberish[],\n    amounts: BigNumberish[],\n    data: BytesLike,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  safeTransferFrom(\n    from: string,\n    to: string,\n    id: BigNumberish,\n    amount: BigNumberish,\n    data: BytesLike,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  setApprovalForAll(\n    operator: string,\n    approved: boolean,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  setContractURI(\n    _uri: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  setDefaultRoyaltyInfo(\n    _royaltyRecipient: string,\n    _royaltyBps: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  setOwner(\n    _newOwner: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  setRoyaltyInfoForToken(\n    _tokenId: BigNumberish,\n    _recipient: string,\n    _bps: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  supportsInterface(\n    interfaceId: BytesLike,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  symbol(overrides?: CallOverrides): Promise<string>;\n\n  totalShares(\n    arg0: BigNumberish,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  totalSupply(\n    arg0: BigNumberish,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  unwrap(\n    _tokenId: BigNumberish,\n    _amountToRedeem: BigNumberish,\n    _sendTo: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  uri(_tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;\n\n  wrap(\n    _wrappedContents: MultiTokenTransferLib.MultiTokenStruct,\n    _shares: BigNumberish,\n    _uriForShares: string,\n    overrides?: PayableOverrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  callStatic: {\n    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<string>;\n\n    balanceOf(\n      account: string,\n      id: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    balanceOfBatch(\n      accounts: string[],\n      ids: BigNumberish[],\n      overrides?: CallOverrides\n    ): Promise<BigNumber[]>;\n\n    burn(\n      account: string,\n      id: BigNumberish,\n      value: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    burnBatch(\n      account: string,\n      ids: BigNumberish[],\n      values: BigNumberish[],\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    contractType(overrides?: CallOverrides): Promise<string>;\n\n    contractURI(overrides?: CallOverrides): Promise<string>;\n\n    contractVersion(overrides?: CallOverrides): Promise<number>;\n\n    getDefaultRoyaltyInfo(overrides?: CallOverrides): Promise<[string, number]>;\n\n    getRoleAdmin(role: BytesLike, overrides?: CallOverrides): Promise<string>;\n\n    getRoleMember(\n      role: BytesLike,\n      index: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    getRoleMemberCount(\n      role: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getRoyaltyInfoForToken(\n      _tokenId: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<[string, number]>;\n\n    grantRole(\n      role: BytesLike,\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    hasRole(\n      role: BytesLike,\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    initialize(\n      _defaultAdmin: string,\n      _name: string,\n      _symbol: string,\n      _contractURI: string,\n      _trustedForwarders: string[],\n      _royaltyRecipient: string,\n      _royaltyBps: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    isApprovedForAll(\n      account: string,\n      operator: string,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isTrustedForwarder(\n      forwarder: string,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    multicall(data: BytesLike[], overrides?: CallOverrides): Promise<string[]>;\n\n    name(overrides?: CallOverrides): Promise<string>;\n\n    nextTokenIdToMint(overrides?: CallOverrides): Promise<BigNumber>;\n\n    onERC1155BatchReceived(\n      arg0: string,\n      arg1: string,\n      arg2: BigNumberish[],\n      arg3: BigNumberish[],\n      arg4: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    onERC1155Received(\n      arg0: string,\n      arg1: string,\n      arg2: BigNumberish,\n      arg3: BigNumberish,\n      arg4: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    onERC721Received(\n      arg0: string,\n      arg1: string,\n      arg2: BigNumberish,\n      arg3: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    owner(overrides?: CallOverrides): Promise<string>;\n\n    renounceRole(\n      role: BytesLike,\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    revokeRole(\n      role: BytesLike,\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    royaltyInfo(\n      tokenId: BigNumberish,\n      salePrice: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<\n      [string, BigNumber] & { receiver: string; royaltyAmount: BigNumber }\n    >;\n\n    safeBatchTransferFrom(\n      from: string,\n      to: string,\n      ids: BigNumberish[],\n      amounts: BigNumberish[],\n      data: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    safeTransferFrom(\n      from: string,\n      to: string,\n      id: BigNumberish,\n      amount: BigNumberish,\n      data: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    setApprovalForAll(\n      operator: string,\n      approved: boolean,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    setContractURI(_uri: string, overrides?: CallOverrides): Promise<void>;\n\n    setDefaultRoyaltyInfo(\n      _royaltyRecipient: string,\n      _royaltyBps: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    setOwner(_newOwner: string, overrides?: CallOverrides): Promise<void>;\n\n    setRoyaltyInfoForToken(\n      _tokenId: BigNumberish,\n      _recipient: string,\n      _bps: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    supportsInterface(\n      interfaceId: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    symbol(overrides?: CallOverrides): Promise<string>;\n\n    totalShares(\n      arg0: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    totalSupply(\n      arg0: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    unwrap(\n      _tokenId: BigNumberish,\n      _amountToRedeem: BigNumberish,\n      _sendTo: string,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    uri(_tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;\n\n    wrap(\n      _wrappedContents: MultiTokenTransferLib.MultiTokenStruct,\n      _shares: BigNumberish,\n      _uriForShares: string,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n  };\n\n  filters: {\n    \"ApprovalForAll(address,address,bool)\"(\n      account?: string | null,\n      operator?: string | null,\n      approved?: null\n    ): ApprovalForAllEventFilter;\n    ApprovalForAll(\n      account?: string | null,\n      operator?: string | null,\n      approved?: null\n    ): ApprovalForAllEventFilter;\n\n    \"DefaultRoyalty(address,uint256)\"(\n      newRoyaltyRecipient?: null,\n      newRoyaltyBps?: null\n    ): DefaultRoyaltyEventFilter;\n    DefaultRoyalty(\n      newRoyaltyRecipient?: null,\n      newRoyaltyBps?: null\n    ): DefaultRoyaltyEventFilter;\n\n    \"OwnerUpdated(address,address)\"(\n      prevOwner?: null,\n      newOwner?: null\n    ): OwnerUpdatedEventFilter;\n    OwnerUpdated(prevOwner?: null, newOwner?: null): OwnerUpdatedEventFilter;\n\n    \"RoleAdminChanged(bytes32,bytes32,bytes32)\"(\n      role?: BytesLike | null,\n      previousAdminRole?: BytesLike | null,\n      newAdminRole?: BytesLike | null\n    ): RoleAdminChangedEventFilter;\n    RoleAdminChanged(\n      role?: BytesLike | null,\n      previousAdminRole?: BytesLike | null,\n      newAdminRole?: BytesLike | null\n    ): RoleAdminChangedEventFilter;\n\n    \"RoleGranted(bytes32,address,address)\"(\n      role?: BytesLike | null,\n      account?: string | null,\n      sender?: string | null\n    ): RoleGrantedEventFilter;\n    RoleGranted(\n      role?: BytesLike | null,\n      account?: string | null,\n      sender?: string | null\n    ): RoleGrantedEventFilter;\n\n    \"RoleRevoked(bytes32,address,address)\"(\n      role?: BytesLike | null,\n      account?: string | null,\n      sender?: string | null\n    ): RoleRevokedEventFilter;\n    RoleRevoked(\n      role?: BytesLike | null,\n      account?: string | null,\n      sender?: string | null\n    ): RoleRevokedEventFilter;\n\n    \"RoyaltyForToken(uint256,address,uint256)\"(\n      tokenId?: BigNumberish | null,\n      royaltyRecipient?: null,\n      royaltyBps?: null\n    ): RoyaltyForTokenEventFilter;\n    RoyaltyForToken(\n      tokenId?: BigNumberish | null,\n      royaltyRecipient?: null,\n      royaltyBps?: null\n    ): RoyaltyForTokenEventFilter;\n\n    \"TokensUnwrapped(address,address,uint256,uint256,tuple)\"(\n      wrapper?: string | null,\n      sentTo?: null,\n      tokenIdOfShares?: BigNumberish | null,\n      sharesUnwrapped?: null,\n      wrappedContents?: null\n    ): TokensUnwrappedEventFilter;\n    TokensUnwrapped(\n      wrapper?: string | null,\n      sentTo?: null,\n      tokenIdOfShares?: BigNumberish | null,\n      sharesUnwrapped?: null,\n      wrappedContents?: null\n    ): TokensUnwrappedEventFilter;\n\n    \"TokensWrapped(address,uint256,tuple)\"(\n      wrapper?: string | null,\n      tokenIdOfShares?: BigNumberish | null,\n      wrappedContents?: null\n    ): TokensWrappedEventFilter;\n    TokensWrapped(\n      wrapper?: string | null,\n      tokenIdOfShares?: BigNumberish | null,\n      wrappedContents?: null\n    ): TokensWrappedEventFilter;\n\n    \"TransferBatch(address,address,address,uint256[],uint256[])\"(\n      operator?: string | null,\n      from?: string | null,\n      to?: string | null,\n      ids?: null,\n      values?: null\n    ): TransferBatchEventFilter;\n    TransferBatch(\n      operator?: string | null,\n      from?: string | null,\n      to?: string | null,\n      ids?: null,\n      values?: null\n    ): TransferBatchEventFilter;\n\n    \"TransferSingle(address,address,address,uint256,uint256)\"(\n      operator?: string | null,\n      from?: string | null,\n      to?: string | null,\n      id?: null,\n      value?: null\n    ): TransferSingleEventFilter;\n    TransferSingle(\n      operator?: string | null,\n      from?: string | null,\n      to?: string | null,\n      id?: null,\n      value?: null\n    ): TransferSingleEventFilter;\n\n    \"URI(string,uint256)\"(\n      value?: null,\n      id?: BigNumberish | null\n    ): URIEventFilter;\n    URI(value?: null, id?: BigNumberish | null): URIEventFilter;\n  };\n\n  estimateGas: {\n    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<BigNumber>;\n\n    balanceOf(\n      account: string,\n      id: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    balanceOfBatch(\n      accounts: string[],\n      ids: BigNumberish[],\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    burn(\n      account: string,\n      id: BigNumberish,\n      value: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    burnBatch(\n      account: string,\n      ids: BigNumberish[],\n      values: BigNumberish[],\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    contractType(overrides?: CallOverrides): Promise<BigNumber>;\n\n    contractURI(overrides?: CallOverrides): Promise<BigNumber>;\n\n    contractVersion(overrides?: CallOverrides): Promise<BigNumber>;\n\n    getDefaultRoyaltyInfo(overrides?: CallOverrides): Promise<BigNumber>;\n\n    getRoleAdmin(\n      role: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getRoleMember(\n      role: BytesLike,\n      index: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getRoleMemberCount(\n      role: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getRoyaltyInfoForToken(\n      _tokenId: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    grantRole(\n      role: BytesLike,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    hasRole(\n      role: BytesLike,\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    initialize(\n      _defaultAdmin: string,\n      _name: string,\n      _symbol: string,\n      _contractURI: string,\n      _trustedForwarders: string[],\n      _royaltyRecipient: string,\n      _royaltyBps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    isApprovedForAll(\n      account: string,\n      operator: string,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isTrustedForwarder(\n      forwarder: string,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    multicall(\n      data: BytesLike[],\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    name(overrides?: CallOverrides): Promise<BigNumber>;\n\n    nextTokenIdToMint(overrides?: CallOverrides): Promise<BigNumber>;\n\n    onERC1155BatchReceived(\n      arg0: string,\n      arg1: string,\n      arg2: BigNumberish[],\n      arg3: BigNumberish[],\n      arg4: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    onERC1155Received(\n      arg0: string,\n      arg1: string,\n      arg2: BigNumberish,\n      arg3: BigNumberish,\n      arg4: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    onERC721Received(\n      arg0: string,\n      arg1: string,\n      arg2: BigNumberish,\n      arg3: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    owner(overrides?: CallOverrides): Promise<BigNumber>;\n\n    renounceRole(\n      role: BytesLike,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    revokeRole(\n      role: BytesLike,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    royaltyInfo(\n      tokenId: BigNumberish,\n      salePrice: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    safeBatchTransferFrom(\n      from: string,\n      to: string,\n      ids: BigNumberish[],\n      amounts: BigNumberish[],\n      data: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    safeTransferFrom(\n      from: string,\n      to: string,\n      id: BigNumberish,\n      amount: BigNumberish,\n      data: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    setApprovalForAll(\n      operator: string,\n      approved: boolean,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    setContractURI(\n      _uri: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    setDefaultRoyaltyInfo(\n      _royaltyRecipient: string,\n      _royaltyBps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    setOwner(\n      _newOwner: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    setRoyaltyInfoForToken(\n      _tokenId: BigNumberish,\n      _recipient: string,\n      _bps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    supportsInterface(\n      interfaceId: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    symbol(overrides?: CallOverrides): Promise<BigNumber>;\n\n    totalShares(\n      arg0: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    totalSupply(\n      arg0: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    unwrap(\n      _tokenId: BigNumberish,\n      _amountToRedeem: BigNumberish,\n      _sendTo: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    uri(_tokenId: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;\n\n    wrap(\n      _wrappedContents: MultiTokenTransferLib.MultiTokenStruct,\n      _shares: BigNumberish,\n      _uriForShares: string,\n      overrides?: PayableOverrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n  };\n\n  populateTransaction: {\n    DEFAULT_ADMIN_ROLE(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    balanceOf(\n      account: string,\n      id: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    balanceOfBatch(\n      accounts: string[],\n      ids: BigNumberish[],\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    burn(\n      account: string,\n      id: BigNumberish,\n      value: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    burnBatch(\n      account: string,\n      ids: BigNumberish[],\n      values: BigNumberish[],\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    contractType(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    contractURI(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    contractVersion(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    getDefaultRoyaltyInfo(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getRoleAdmin(\n      role: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getRoleMember(\n      role: BytesLike,\n      index: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getRoleMemberCount(\n      role: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getRoyaltyInfoForToken(\n      _tokenId: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    grantRole(\n      role: BytesLike,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    hasRole(\n      role: BytesLike,\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    initialize(\n      _defaultAdmin: string,\n      _name: string,\n      _symbol: string,\n      _contractURI: string,\n      _trustedForwarders: string[],\n      _royaltyRecipient: string,\n      _royaltyBps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    isApprovedForAll(\n      account: string,\n      operator: string,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isTrustedForwarder(\n      forwarder: string,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    multicall(\n      data: BytesLike[],\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    name(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    nextTokenIdToMint(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    onERC1155BatchReceived(\n      arg0: string,\n      arg1: string,\n      arg2: BigNumberish[],\n      arg3: BigNumberish[],\n      arg4: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    onERC1155Received(\n      arg0: string,\n      arg1: string,\n      arg2: BigNumberish,\n      arg3: BigNumberish,\n      arg4: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    onERC721Received(\n      arg0: string,\n      arg1: string,\n      arg2: BigNumberish,\n      arg3: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    renounceRole(\n      role: BytesLike,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    revokeRole(\n      role: BytesLike,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    royaltyInfo(\n      tokenId: BigNumberish,\n      salePrice: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    safeBatchTransferFrom(\n      from: string,\n      to: string,\n      ids: BigNumberish[],\n      amounts: BigNumberish[],\n      data: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    safeTransferFrom(\n      from: string,\n      to: string,\n      id: BigNumberish,\n      amount: BigNumberish,\n      data: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setApprovalForAll(\n      operator: string,\n      approved: boolean,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setContractURI(\n      _uri: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setDefaultRoyaltyInfo(\n      _royaltyRecipient: string,\n      _royaltyBps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setOwner(\n      _newOwner: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setRoyaltyInfoForToken(\n      _tokenId: BigNumberish,\n      _recipient: string,\n      _bps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    supportsInterface(\n      interfaceId: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    symbol(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    totalShares(\n      arg0: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    totalSupply(\n      arg0: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    unwrap(\n      _tokenId: BigNumberish,\n      _amountToRedeem: BigNumberish,\n      _sendTo: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    uri(\n      _tokenId: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    wrap(\n      _wrappedContents: MultiTokenTransferLib.MultiTokenStruct,\n      _shares: BigNumberish,\n      _uriForShares: string,\n      overrides?: PayableOverrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n  };\n}\n"],"mappings":"odAAA","names":[]}