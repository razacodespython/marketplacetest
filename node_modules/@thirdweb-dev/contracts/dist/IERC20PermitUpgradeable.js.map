{"version":3,"sources":["../typechain/IERC20PermitUpgradeable.ts"],"sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport {\n  BaseContract,\n  BigNumber,\n  BigNumberish,\n  BytesLike,\n  CallOverrides,\n  ContractTransaction,\n  Overrides,\n  PopulatedTransaction,\n  Signer,\n  utils,\n} from \"ethers\";\nimport { FunctionFragment, Result } from \"@ethersproject/abi\";\nimport { Listener, Provider } from \"@ethersproject/providers\";\nimport { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from \"./common\";\n\nexport interface IERC20PermitUpgradeableInterface extends utils.Interface {\n  contractName: string | \"IERC20PermitUpgradeable\";\n  functions: {\n    \"DOMAIN_SEPARATOR()\": FunctionFragment;\n    \"nonces(address)\": FunctionFragment;\n    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\": FunctionFragment;\n  };\n\n  encodeFunctionData(\n    functionFragment: \"DOMAIN_SEPARATOR\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(functionFragment: \"nonces\", values: [string]): string;\n  encodeFunctionData(\n    functionFragment: \"permit\",\n    values: [\n      string,\n      string,\n      BigNumberish,\n      BigNumberish,\n      BigNumberish,\n      BytesLike,\n      BytesLike\n    ]\n  ): string;\n\n  decodeFunctionResult(\n    functionFragment: \"DOMAIN_SEPARATOR\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"nonces\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"permit\", data: BytesLike): Result;\n\n  events: {};\n}\n\nexport interface IERC20PermitUpgradeable extends BaseContract {\n  contractName: string | \"IERC20PermitUpgradeable\";\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: IERC20PermitUpgradeableInterface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(\n    eventFilter: TypedEventFilter<TEvent>\n  ): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {\n    DOMAIN_SEPARATOR(overrides?: CallOverrides): Promise<[string]>;\n\n    nonces(owner: string, overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    permit(\n      owner: string,\n      spender: string,\n      value: BigNumberish,\n      deadline: BigNumberish,\n      v: BigNumberish,\n      r: BytesLike,\n      s: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n  };\n\n  DOMAIN_SEPARATOR(overrides?: CallOverrides): Promise<string>;\n\n  nonces(owner: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n  permit(\n    owner: string,\n    spender: string,\n    value: BigNumberish,\n    deadline: BigNumberish,\n    v: BigNumberish,\n    r: BytesLike,\n    s: BytesLike,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  callStatic: {\n    DOMAIN_SEPARATOR(overrides?: CallOverrides): Promise<string>;\n\n    nonces(owner: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n    permit(\n      owner: string,\n      spender: string,\n      value: BigNumberish,\n      deadline: BigNumberish,\n      v: BigNumberish,\n      r: BytesLike,\n      s: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<void>;\n  };\n\n  filters: {};\n\n  estimateGas: {\n    DOMAIN_SEPARATOR(overrides?: CallOverrides): Promise<BigNumber>;\n\n    nonces(owner: string, overrides?: CallOverrides): Promise<BigNumber>;\n\n    permit(\n      owner: string,\n      spender: string,\n      value: BigNumberish,\n      deadline: BigNumberish,\n      v: BigNumberish,\n      r: BytesLike,\n      s: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n  };\n\n  populateTransaction: {\n    DOMAIN_SEPARATOR(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    nonces(\n      owner: string,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    permit(\n      owner: string,\n      spender: string,\n      value: BigNumberish,\n      deadline: BigNumberish,\n      v: BigNumberish,\n      r: BytesLike,\n      s: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n  };\n}\n"],"mappings":"odAAA","names":[]}