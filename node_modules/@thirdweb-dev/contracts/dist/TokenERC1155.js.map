{"version":3,"sources":["../typechain/TokenERC1155.ts"],"sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport {\n  BaseContract,\n  BigNumber,\n  BigNumberish,\n  BytesLike,\n  CallOverrides,\n  ContractTransaction,\n  Overrides,\n  PayableOverrides,\n  PopulatedTransaction,\n  Signer,\n  utils,\n} from \"ethers\";\nimport { FunctionFragment, Result, EventFragment } from \"@ethersproject/abi\";\nimport { Listener, Provider } from \"@ethersproject/providers\";\nimport { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from \"./common\";\n\nexport declare namespace ITokenERC1155 {\n  export type MintRequestStruct = {\n    to: string;\n    royaltyRecipient: string;\n    royaltyBps: BigNumberish;\n    primarySaleRecipient: string;\n    tokenId: BigNumberish;\n    uri: string;\n    quantity: BigNumberish;\n    pricePerToken: BigNumberish;\n    currency: string;\n    validityStartTimestamp: BigNumberish;\n    validityEndTimestamp: BigNumberish;\n    uid: BytesLike;\n  };\n\n  export type MintRequestStructOutput = [\n    string,\n    string,\n    BigNumber,\n    string,\n    BigNumber,\n    string,\n    BigNumber,\n    BigNumber,\n    string,\n    BigNumber,\n    BigNumber,\n    string\n  ] & {\n    to: string;\n    royaltyRecipient: string;\n    royaltyBps: BigNumber;\n    primarySaleRecipient: string;\n    tokenId: BigNumber;\n    uri: string;\n    quantity: BigNumber;\n    pricePerToken: BigNumber;\n    currency: string;\n    validityStartTimestamp: BigNumber;\n    validityEndTimestamp: BigNumber;\n    uid: string;\n  };\n}\n\nexport interface TokenERC1155Interface extends utils.Interface {\n  contractName: string | \"TokenERC1155\";\n  functions: {\n    \"DEFAULT_ADMIN_ROLE()\": FunctionFragment;\n    \"balanceOf(address,uint256)\": FunctionFragment;\n    \"balanceOfBatch(address[],uint256[])\": FunctionFragment;\n    \"burn(address,uint256,uint256)\": FunctionFragment;\n    \"burnBatch(address,uint256[],uint256[])\": FunctionFragment;\n    \"contractType()\": FunctionFragment;\n    \"contractURI()\": FunctionFragment;\n    \"contractVersion()\": FunctionFragment;\n    \"getDefaultRoyaltyInfo()\": FunctionFragment;\n    \"getPlatformFeeInfo()\": FunctionFragment;\n    \"getRoleAdmin(bytes32)\": FunctionFragment;\n    \"getRoleMember(bytes32,uint256)\": FunctionFragment;\n    \"getRoleMemberCount(bytes32)\": FunctionFragment;\n    \"getRoyaltyInfoForToken(uint256)\": FunctionFragment;\n    \"grantRole(bytes32,address)\": FunctionFragment;\n    \"hasRole(bytes32,address)\": FunctionFragment;\n    \"initialize(address,string,string,string,address[],address,address,uint128,uint128,address)\": FunctionFragment;\n    \"isApprovedForAll(address,address)\": FunctionFragment;\n    \"isTrustedForwarder(address)\": FunctionFragment;\n    \"mintTo(address,uint256,string,uint256)\": FunctionFragment;\n    \"mintWithSignature((address,address,uint256,address,uint256,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)\": FunctionFragment;\n    \"multicall(bytes[])\": FunctionFragment;\n    \"name()\": FunctionFragment;\n    \"nextTokenIdToMint()\": FunctionFragment;\n    \"owner()\": FunctionFragment;\n    \"platformFeeBps()\": FunctionFragment;\n    \"platformFeeRecipient()\": FunctionFragment;\n    \"primarySaleRecipient()\": FunctionFragment;\n    \"renounceRole(bytes32,address)\": FunctionFragment;\n    \"revokeRole(bytes32,address)\": FunctionFragment;\n    \"royaltyInfo(uint256,uint256)\": FunctionFragment;\n    \"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\": FunctionFragment;\n    \"safeTransferFrom(address,address,uint256,uint256,bytes)\": FunctionFragment;\n    \"saleRecipientForToken(uint256)\": FunctionFragment;\n    \"setApprovalForAll(address,bool)\": FunctionFragment;\n    \"setContractURI(string)\": FunctionFragment;\n    \"setDefaultRoyaltyInfo(address,uint256)\": FunctionFragment;\n    \"setOwner(address)\": FunctionFragment;\n    \"setPlatformFeeInfo(address,uint256)\": FunctionFragment;\n    \"setPrimarySaleRecipient(address)\": FunctionFragment;\n    \"setRoyaltyInfoForToken(uint256,address,uint256)\": FunctionFragment;\n    \"supportsInterface(bytes4)\": FunctionFragment;\n    \"symbol()\": FunctionFragment;\n    \"thirdwebFee()\": FunctionFragment;\n    \"totalSupply(uint256)\": FunctionFragment;\n    \"uri(uint256)\": FunctionFragment;\n    \"verify((address,address,uint256,address,uint256,string,uint256,uint256,address,uint128,uint128,bytes32),bytes)\": FunctionFragment;\n  };\n\n  encodeFunctionData(\n    functionFragment: \"DEFAULT_ADMIN_ROLE\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"balanceOf\",\n    values: [string, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"balanceOfBatch\",\n    values: [string[], BigNumberish[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"burn\",\n    values: [string, BigNumberish, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"burnBatch\",\n    values: [string, BigNumberish[], BigNumberish[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractType\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractURI\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"contractVersion\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getDefaultRoyaltyInfo\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getPlatformFeeInfo\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRoleAdmin\",\n    values: [BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRoleMember\",\n    values: [BytesLike, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRoleMemberCount\",\n    values: [BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRoyaltyInfoForToken\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"grantRole\",\n    values: [BytesLike, string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"hasRole\",\n    values: [BytesLike, string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"initialize\",\n    values: [\n      string,\n      string,\n      string,\n      string,\n      string[],\n      string,\n      string,\n      BigNumberish,\n      BigNumberish,\n      string\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isApprovedForAll\",\n    values: [string, string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isTrustedForwarder\",\n    values: [string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"mintTo\",\n    values: [string, BigNumberish, string, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"mintWithSignature\",\n    values: [ITokenERC1155.MintRequestStruct, BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"multicall\",\n    values: [BytesLike[]]\n  ): string;\n  encodeFunctionData(functionFragment: \"name\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"nextTokenIdToMint\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(functionFragment: \"owner\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"platformFeeBps\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"platformFeeRecipient\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"primarySaleRecipient\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"renounceRole\",\n    values: [BytesLike, string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"revokeRole\",\n    values: [BytesLike, string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"royaltyInfo\",\n    values: [BigNumberish, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"safeBatchTransferFrom\",\n    values: [string, string, BigNumberish[], BigNumberish[], BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"safeTransferFrom\",\n    values: [string, string, BigNumberish, BigNumberish, BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"saleRecipientForToken\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setApprovalForAll\",\n    values: [string, boolean]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setContractURI\",\n    values: [string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setDefaultRoyaltyInfo\",\n    values: [string, BigNumberish]\n  ): string;\n  encodeFunctionData(functionFragment: \"setOwner\", values: [string]): string;\n  encodeFunctionData(\n    functionFragment: \"setPlatformFeeInfo\",\n    values: [string, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setPrimarySaleRecipient\",\n    values: [string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setRoyaltyInfoForToken\",\n    values: [BigNumberish, string, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"supportsInterface\",\n    values: [BytesLike]\n  ): string;\n  encodeFunctionData(functionFragment: \"symbol\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"thirdwebFee\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"totalSupply\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(functionFragment: \"uri\", values: [BigNumberish]): string;\n  encodeFunctionData(\n    functionFragment: \"verify\",\n    values: [ITokenERC1155.MintRequestStruct, BytesLike]\n  ): string;\n\n  decodeFunctionResult(\n    functionFragment: \"DEFAULT_ADMIN_ROLE\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"balanceOf\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"balanceOfBatch\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"burn\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"burnBatch\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractType\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractURI\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"contractVersion\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getDefaultRoyaltyInfo\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getPlatformFeeInfo\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getRoleAdmin\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getRoleMember\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getRoleMemberCount\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getRoyaltyInfoForToken\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"grantRole\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"hasRole\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"initialize\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"isApprovedForAll\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isTrustedForwarder\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"mintTo\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"mintWithSignature\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"multicall\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"name\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"nextTokenIdToMint\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"owner\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"platformFeeBps\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"platformFeeRecipient\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"primarySaleRecipient\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"renounceRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"revokeRole\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"royaltyInfo\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"safeBatchTransferFrom\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"safeTransferFrom\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"saleRecipientForToken\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setApprovalForAll\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setContractURI\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setDefaultRoyaltyInfo\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"setOwner\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"setPlatformFeeInfo\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setPrimarySaleRecipient\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setRoyaltyInfoForToken\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"supportsInterface\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"symbol\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"thirdwebFee\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"totalSupply\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"uri\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"verify\", data: BytesLike): Result;\n\n  events: {\n    \"ApprovalForAll(address,address,bool)\": EventFragment;\n    \"DefaultRoyalty(address,uint256)\": EventFragment;\n    \"OwnerUpdated(address,address)\": EventFragment;\n    \"PlatformFeeInfoUpdated(address,uint256)\": EventFragment;\n    \"PrimarySaleRecipientUpdated(address)\": EventFragment;\n    \"RoleAdminChanged(bytes32,bytes32,bytes32)\": EventFragment;\n    \"RoleGranted(bytes32,address,address)\": EventFragment;\n    \"RoleRevoked(bytes32,address,address)\": EventFragment;\n    \"RoyaltyForToken(uint256,address,uint256)\": EventFragment;\n    \"TokensMinted(address,uint256,string,uint256)\": EventFragment;\n    \"TokensMintedWithSignature(address,address,uint256,tuple)\": EventFragment;\n    \"TransferBatch(address,address,address,uint256[],uint256[])\": EventFragment;\n    \"TransferSingle(address,address,address,uint256,uint256)\": EventFragment;\n    \"URI(string,uint256)\": EventFragment;\n  };\n\n  getEvent(nameOrSignatureOrTopic: \"ApprovalForAll\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"DefaultRoyalty\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"OwnerUpdated\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"PlatformFeeInfoUpdated\"): EventFragment;\n  getEvent(\n    nameOrSignatureOrTopic: \"PrimarySaleRecipientUpdated\"\n  ): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"RoleAdminChanged\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"RoleGranted\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"RoleRevoked\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"RoyaltyForToken\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"TokensMinted\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"TokensMintedWithSignature\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"TransferBatch\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"TransferSingle\"): EventFragment;\n  getEvent(nameOrSignatureOrTopic: \"URI\"): EventFragment;\n}\n\nexport type ApprovalForAllEvent = TypedEvent<\n  [string, string, boolean],\n  { account: string; operator: string; approved: boolean }\n>;\n\nexport type ApprovalForAllEventFilter = TypedEventFilter<ApprovalForAllEvent>;\n\nexport type DefaultRoyaltyEvent = TypedEvent<\n  [string, BigNumber],\n  { newRoyaltyRecipient: string; newRoyaltyBps: BigNumber }\n>;\n\nexport type DefaultRoyaltyEventFilter = TypedEventFilter<DefaultRoyaltyEvent>;\n\nexport type OwnerUpdatedEvent = TypedEvent<\n  [string, string],\n  { prevOwner: string; newOwner: string }\n>;\n\nexport type OwnerUpdatedEventFilter = TypedEventFilter<OwnerUpdatedEvent>;\n\nexport type PlatformFeeInfoUpdatedEvent = TypedEvent<\n  [string, BigNumber],\n  { platformFeeRecipient: string; platformFeeBps: BigNumber }\n>;\n\nexport type PlatformFeeInfoUpdatedEventFilter =\n  TypedEventFilter<PlatformFeeInfoUpdatedEvent>;\n\nexport type PrimarySaleRecipientUpdatedEvent = TypedEvent<\n  [string],\n  { recipient: string }\n>;\n\nexport type PrimarySaleRecipientUpdatedEventFilter =\n  TypedEventFilter<PrimarySaleRecipientUpdatedEvent>;\n\nexport type RoleAdminChangedEvent = TypedEvent<\n  [string, string, string],\n  { role: string; previousAdminRole: string; newAdminRole: string }\n>;\n\nexport type RoleAdminChangedEventFilter =\n  TypedEventFilter<RoleAdminChangedEvent>;\n\nexport type RoleGrantedEvent = TypedEvent<\n  [string, string, string],\n  { role: string; account: string; sender: string }\n>;\n\nexport type RoleGrantedEventFilter = TypedEventFilter<RoleGrantedEvent>;\n\nexport type RoleRevokedEvent = TypedEvent<\n  [string, string, string],\n  { role: string; account: string; sender: string }\n>;\n\nexport type RoleRevokedEventFilter = TypedEventFilter<RoleRevokedEvent>;\n\nexport type RoyaltyForTokenEvent = TypedEvent<\n  [BigNumber, string, BigNumber],\n  { tokenId: BigNumber; royaltyRecipient: string; royaltyBps: BigNumber }\n>;\n\nexport type RoyaltyForTokenEventFilter = TypedEventFilter<RoyaltyForTokenEvent>;\n\nexport type TokensMintedEvent = TypedEvent<\n  [string, BigNumber, string, BigNumber],\n  {\n    mintedTo: string;\n    tokenIdMinted: BigNumber;\n    uri: string;\n    quantityMinted: BigNumber;\n  }\n>;\n\nexport type TokensMintedEventFilter = TypedEventFilter<TokensMintedEvent>;\n\nexport type TokensMintedWithSignatureEvent = TypedEvent<\n  [string, string, BigNumber, ITokenERC1155.MintRequestStructOutput],\n  {\n    signer: string;\n    mintedTo: string;\n    tokenIdMinted: BigNumber;\n    mintRequest: ITokenERC1155.MintRequestStructOutput;\n  }\n>;\n\nexport type TokensMintedWithSignatureEventFilter =\n  TypedEventFilter<TokensMintedWithSignatureEvent>;\n\nexport type TransferBatchEvent = TypedEvent<\n  [string, string, string, BigNumber[], BigNumber[]],\n  {\n    operator: string;\n    from: string;\n    to: string;\n    ids: BigNumber[];\n    values: BigNumber[];\n  }\n>;\n\nexport type TransferBatchEventFilter = TypedEventFilter<TransferBatchEvent>;\n\nexport type TransferSingleEvent = TypedEvent<\n  [string, string, string, BigNumber, BigNumber],\n  {\n    operator: string;\n    from: string;\n    to: string;\n    id: BigNumber;\n    value: BigNumber;\n  }\n>;\n\nexport type TransferSingleEventFilter = TypedEventFilter<TransferSingleEvent>;\n\nexport type URIEvent = TypedEvent<\n  [string, BigNumber],\n  { value: string; id: BigNumber }\n>;\n\nexport type URIEventFilter = TypedEventFilter<URIEvent>;\n\nexport interface TokenERC1155 extends BaseContract {\n  contractName: string | \"TokenERC1155\";\n  connect(signerOrProvider: Signer | Provider | string): this;\n  attach(addressOrName: string): this;\n  deployed(): Promise<this>;\n\n  interface: TokenERC1155Interface;\n\n  queryFilter<TEvent extends TypedEvent>(\n    event: TypedEventFilter<TEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TEvent>>;\n\n  listeners<TEvent extends TypedEvent>(\n    eventFilter?: TypedEventFilter<TEvent>\n  ): Array<TypedListener<TEvent>>;\n  listeners(eventName?: string): Array<Listener>;\n  removeAllListeners<TEvent extends TypedEvent>(\n    eventFilter: TypedEventFilter<TEvent>\n  ): this;\n  removeAllListeners(eventName?: string): this;\n  off: OnEvent<this>;\n  on: OnEvent<this>;\n  once: OnEvent<this>;\n  removeListener: OnEvent<this>;\n\n  functions: {\n    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<[string]>;\n\n    balanceOf(\n      account: string,\n      id: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    balanceOfBatch(\n      accounts: string[],\n      ids: BigNumberish[],\n      overrides?: CallOverrides\n    ): Promise<[BigNumber[]]>;\n\n    burn(\n      account: string,\n      id: BigNumberish,\n      value: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    burnBatch(\n      account: string,\n      ids: BigNumberish[],\n      values: BigNumberish[],\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    contractType(overrides?: CallOverrides): Promise<[string]>;\n\n    contractURI(overrides?: CallOverrides): Promise<[string]>;\n\n    contractVersion(overrides?: CallOverrides): Promise<[number]>;\n\n    getDefaultRoyaltyInfo(overrides?: CallOverrides): Promise<[string, number]>;\n\n    getPlatformFeeInfo(overrides?: CallOverrides): Promise<[string, number]>;\n\n    getRoleAdmin(role: BytesLike, overrides?: CallOverrides): Promise<[string]>;\n\n    getRoleMember(\n      role: BytesLike,\n      index: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<[string]>;\n\n    getRoleMemberCount(\n      role: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    getRoyaltyInfoForToken(\n      _tokenId: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<[string, number]>;\n\n    grantRole(\n      role: BytesLike,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    hasRole(\n      role: BytesLike,\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    initialize(\n      _defaultAdmin: string,\n      _name: string,\n      _symbol: string,\n      _contractURI: string,\n      _trustedForwarders: string[],\n      _primarySaleRecipient: string,\n      _royaltyRecipient: string,\n      _royaltyBps: BigNumberish,\n      _platformFeeBps: BigNumberish,\n      _platformFeeRecipient: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    isApprovedForAll(\n      account: string,\n      operator: string,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    isTrustedForwarder(\n      forwarder: string,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    mintTo(\n      _to: string,\n      _tokenId: BigNumberish,\n      _uri: string,\n      _amount: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    mintWithSignature(\n      _req: ITokenERC1155.MintRequestStruct,\n      _signature: BytesLike,\n      overrides?: PayableOverrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    multicall(\n      data: BytesLike[],\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    name(overrides?: CallOverrides): Promise<[string]>;\n\n    nextTokenIdToMint(overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    owner(overrides?: CallOverrides): Promise<[string]>;\n\n    platformFeeBps(overrides?: CallOverrides): Promise<[BigNumber]>;\n\n    platformFeeRecipient(overrides?: CallOverrides): Promise<[string]>;\n\n    primarySaleRecipient(overrides?: CallOverrides): Promise<[string]>;\n\n    renounceRole(\n      role: BytesLike,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    revokeRole(\n      role: BytesLike,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    royaltyInfo(\n      tokenId: BigNumberish,\n      salePrice: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<\n      [string, BigNumber] & { receiver: string; royaltyAmount: BigNumber }\n    >;\n\n    safeBatchTransferFrom(\n      from: string,\n      to: string,\n      ids: BigNumberish[],\n      amounts: BigNumberish[],\n      data: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    safeTransferFrom(\n      from: string,\n      to: string,\n      id: BigNumberish,\n      amount: BigNumberish,\n      data: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    saleRecipientForToken(\n      arg0: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<[string]>;\n\n    setApprovalForAll(\n      operator: string,\n      approved: boolean,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    setContractURI(\n      _uri: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    setDefaultRoyaltyInfo(\n      _royaltyRecipient: string,\n      _royaltyBps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    setOwner(\n      _newOwner: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    setPlatformFeeInfo(\n      _platformFeeRecipient: string,\n      _platformFeeBps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    setPrimarySaleRecipient(\n      _saleRecipient: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    setRoyaltyInfoForToken(\n      _tokenId: BigNumberish,\n      _recipient: string,\n      _bps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<ContractTransaction>;\n\n    supportsInterface(\n      interfaceId: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<[boolean]>;\n\n    symbol(overrides?: CallOverrides): Promise<[string]>;\n\n    thirdwebFee(overrides?: CallOverrides): Promise<[string]>;\n\n    totalSupply(\n      arg0: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<[BigNumber]>;\n\n    uri(_tokenId: BigNumberish, overrides?: CallOverrides): Promise<[string]>;\n\n    verify(\n      _req: ITokenERC1155.MintRequestStruct,\n      _signature: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<[boolean, string]>;\n  };\n\n  DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<string>;\n\n  balanceOf(\n    account: string,\n    id: BigNumberish,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  balanceOfBatch(\n    accounts: string[],\n    ids: BigNumberish[],\n    overrides?: CallOverrides\n  ): Promise<BigNumber[]>;\n\n  burn(\n    account: string,\n    id: BigNumberish,\n    value: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  burnBatch(\n    account: string,\n    ids: BigNumberish[],\n    values: BigNumberish[],\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  contractType(overrides?: CallOverrides): Promise<string>;\n\n  contractURI(overrides?: CallOverrides): Promise<string>;\n\n  contractVersion(overrides?: CallOverrides): Promise<number>;\n\n  getDefaultRoyaltyInfo(overrides?: CallOverrides): Promise<[string, number]>;\n\n  getPlatformFeeInfo(overrides?: CallOverrides): Promise<[string, number]>;\n\n  getRoleAdmin(role: BytesLike, overrides?: CallOverrides): Promise<string>;\n\n  getRoleMember(\n    role: BytesLike,\n    index: BigNumberish,\n    overrides?: CallOverrides\n  ): Promise<string>;\n\n  getRoleMemberCount(\n    role: BytesLike,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  getRoyaltyInfoForToken(\n    _tokenId: BigNumberish,\n    overrides?: CallOverrides\n  ): Promise<[string, number]>;\n\n  grantRole(\n    role: BytesLike,\n    account: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  hasRole(\n    role: BytesLike,\n    account: string,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  initialize(\n    _defaultAdmin: string,\n    _name: string,\n    _symbol: string,\n    _contractURI: string,\n    _trustedForwarders: string[],\n    _primarySaleRecipient: string,\n    _royaltyRecipient: string,\n    _royaltyBps: BigNumberish,\n    _platformFeeBps: BigNumberish,\n    _platformFeeRecipient: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  isApprovedForAll(\n    account: string,\n    operator: string,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  isTrustedForwarder(\n    forwarder: string,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  mintTo(\n    _to: string,\n    _tokenId: BigNumberish,\n    _uri: string,\n    _amount: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  mintWithSignature(\n    _req: ITokenERC1155.MintRequestStruct,\n    _signature: BytesLike,\n    overrides?: PayableOverrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  multicall(\n    data: BytesLike[],\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  name(overrides?: CallOverrides): Promise<string>;\n\n  nextTokenIdToMint(overrides?: CallOverrides): Promise<BigNumber>;\n\n  owner(overrides?: CallOverrides): Promise<string>;\n\n  platformFeeBps(overrides?: CallOverrides): Promise<BigNumber>;\n\n  platformFeeRecipient(overrides?: CallOverrides): Promise<string>;\n\n  primarySaleRecipient(overrides?: CallOverrides): Promise<string>;\n\n  renounceRole(\n    role: BytesLike,\n    account: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  revokeRole(\n    role: BytesLike,\n    account: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  royaltyInfo(\n    tokenId: BigNumberish,\n    salePrice: BigNumberish,\n    overrides?: CallOverrides\n  ): Promise<\n    [string, BigNumber] & { receiver: string; royaltyAmount: BigNumber }\n  >;\n\n  safeBatchTransferFrom(\n    from: string,\n    to: string,\n    ids: BigNumberish[],\n    amounts: BigNumberish[],\n    data: BytesLike,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  safeTransferFrom(\n    from: string,\n    to: string,\n    id: BigNumberish,\n    amount: BigNumberish,\n    data: BytesLike,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  saleRecipientForToken(\n    arg0: BigNumberish,\n    overrides?: CallOverrides\n  ): Promise<string>;\n\n  setApprovalForAll(\n    operator: string,\n    approved: boolean,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  setContractURI(\n    _uri: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  setDefaultRoyaltyInfo(\n    _royaltyRecipient: string,\n    _royaltyBps: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  setOwner(\n    _newOwner: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  setPlatformFeeInfo(\n    _platformFeeRecipient: string,\n    _platformFeeBps: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  setPrimarySaleRecipient(\n    _saleRecipient: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  setRoyaltyInfoForToken(\n    _tokenId: BigNumberish,\n    _recipient: string,\n    _bps: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ContractTransaction>;\n\n  supportsInterface(\n    interfaceId: BytesLike,\n    overrides?: CallOverrides\n  ): Promise<boolean>;\n\n  symbol(overrides?: CallOverrides): Promise<string>;\n\n  thirdwebFee(overrides?: CallOverrides): Promise<string>;\n\n  totalSupply(\n    arg0: BigNumberish,\n    overrides?: CallOverrides\n  ): Promise<BigNumber>;\n\n  uri(_tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;\n\n  verify(\n    _req: ITokenERC1155.MintRequestStruct,\n    _signature: BytesLike,\n    overrides?: CallOverrides\n  ): Promise<[boolean, string]>;\n\n  callStatic: {\n    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<string>;\n\n    balanceOf(\n      account: string,\n      id: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    balanceOfBatch(\n      accounts: string[],\n      ids: BigNumberish[],\n      overrides?: CallOverrides\n    ): Promise<BigNumber[]>;\n\n    burn(\n      account: string,\n      id: BigNumberish,\n      value: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    burnBatch(\n      account: string,\n      ids: BigNumberish[],\n      values: BigNumberish[],\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    contractType(overrides?: CallOverrides): Promise<string>;\n\n    contractURI(overrides?: CallOverrides): Promise<string>;\n\n    contractVersion(overrides?: CallOverrides): Promise<number>;\n\n    getDefaultRoyaltyInfo(overrides?: CallOverrides): Promise<[string, number]>;\n\n    getPlatformFeeInfo(overrides?: CallOverrides): Promise<[string, number]>;\n\n    getRoleAdmin(role: BytesLike, overrides?: CallOverrides): Promise<string>;\n\n    getRoleMember(\n      role: BytesLike,\n      index: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    getRoleMemberCount(\n      role: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getRoyaltyInfoForToken(\n      _tokenId: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<[string, number]>;\n\n    grantRole(\n      role: BytesLike,\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    hasRole(\n      role: BytesLike,\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    initialize(\n      _defaultAdmin: string,\n      _name: string,\n      _symbol: string,\n      _contractURI: string,\n      _trustedForwarders: string[],\n      _primarySaleRecipient: string,\n      _royaltyRecipient: string,\n      _royaltyBps: BigNumberish,\n      _platformFeeBps: BigNumberish,\n      _platformFeeRecipient: string,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    isApprovedForAll(\n      account: string,\n      operator: string,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    isTrustedForwarder(\n      forwarder: string,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    mintTo(\n      _to: string,\n      _tokenId: BigNumberish,\n      _uri: string,\n      _amount: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    mintWithSignature(\n      _req: ITokenERC1155.MintRequestStruct,\n      _signature: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    multicall(data: BytesLike[], overrides?: CallOverrides): Promise<string[]>;\n\n    name(overrides?: CallOverrides): Promise<string>;\n\n    nextTokenIdToMint(overrides?: CallOverrides): Promise<BigNumber>;\n\n    owner(overrides?: CallOverrides): Promise<string>;\n\n    platformFeeBps(overrides?: CallOverrides): Promise<BigNumber>;\n\n    platformFeeRecipient(overrides?: CallOverrides): Promise<string>;\n\n    primarySaleRecipient(overrides?: CallOverrides): Promise<string>;\n\n    renounceRole(\n      role: BytesLike,\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    revokeRole(\n      role: BytesLike,\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    royaltyInfo(\n      tokenId: BigNumberish,\n      salePrice: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<\n      [string, BigNumber] & { receiver: string; royaltyAmount: BigNumber }\n    >;\n\n    safeBatchTransferFrom(\n      from: string,\n      to: string,\n      ids: BigNumberish[],\n      amounts: BigNumberish[],\n      data: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    safeTransferFrom(\n      from: string,\n      to: string,\n      id: BigNumberish,\n      amount: BigNumberish,\n      data: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    saleRecipientForToken(\n      arg0: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<string>;\n\n    setApprovalForAll(\n      operator: string,\n      approved: boolean,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    setContractURI(_uri: string, overrides?: CallOverrides): Promise<void>;\n\n    setDefaultRoyaltyInfo(\n      _royaltyRecipient: string,\n      _royaltyBps: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    setOwner(_newOwner: string, overrides?: CallOverrides): Promise<void>;\n\n    setPlatformFeeInfo(\n      _platformFeeRecipient: string,\n      _platformFeeBps: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    setPrimarySaleRecipient(\n      _saleRecipient: string,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    setRoyaltyInfoForToken(\n      _tokenId: BigNumberish,\n      _recipient: string,\n      _bps: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<void>;\n\n    supportsInterface(\n      interfaceId: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<boolean>;\n\n    symbol(overrides?: CallOverrides): Promise<string>;\n\n    thirdwebFee(overrides?: CallOverrides): Promise<string>;\n\n    totalSupply(\n      arg0: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    uri(_tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;\n\n    verify(\n      _req: ITokenERC1155.MintRequestStruct,\n      _signature: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<[boolean, string]>;\n  };\n\n  filters: {\n    \"ApprovalForAll(address,address,bool)\"(\n      account?: string | null,\n      operator?: string | null,\n      approved?: null\n    ): ApprovalForAllEventFilter;\n    ApprovalForAll(\n      account?: string | null,\n      operator?: string | null,\n      approved?: null\n    ): ApprovalForAllEventFilter;\n\n    \"DefaultRoyalty(address,uint256)\"(\n      newRoyaltyRecipient?: null,\n      newRoyaltyBps?: null\n    ): DefaultRoyaltyEventFilter;\n    DefaultRoyalty(\n      newRoyaltyRecipient?: null,\n      newRoyaltyBps?: null\n    ): DefaultRoyaltyEventFilter;\n\n    \"OwnerUpdated(address,address)\"(\n      prevOwner?: null,\n      newOwner?: null\n    ): OwnerUpdatedEventFilter;\n    OwnerUpdated(prevOwner?: null, newOwner?: null): OwnerUpdatedEventFilter;\n\n    \"PlatformFeeInfoUpdated(address,uint256)\"(\n      platformFeeRecipient?: null,\n      platformFeeBps?: null\n    ): PlatformFeeInfoUpdatedEventFilter;\n    PlatformFeeInfoUpdated(\n      platformFeeRecipient?: null,\n      platformFeeBps?: null\n    ): PlatformFeeInfoUpdatedEventFilter;\n\n    \"PrimarySaleRecipientUpdated(address)\"(\n      recipient?: string | null\n    ): PrimarySaleRecipientUpdatedEventFilter;\n    PrimarySaleRecipientUpdated(\n      recipient?: string | null\n    ): PrimarySaleRecipientUpdatedEventFilter;\n\n    \"RoleAdminChanged(bytes32,bytes32,bytes32)\"(\n      role?: BytesLike | null,\n      previousAdminRole?: BytesLike | null,\n      newAdminRole?: BytesLike | null\n    ): RoleAdminChangedEventFilter;\n    RoleAdminChanged(\n      role?: BytesLike | null,\n      previousAdminRole?: BytesLike | null,\n      newAdminRole?: BytesLike | null\n    ): RoleAdminChangedEventFilter;\n\n    \"RoleGranted(bytes32,address,address)\"(\n      role?: BytesLike | null,\n      account?: string | null,\n      sender?: string | null\n    ): RoleGrantedEventFilter;\n    RoleGranted(\n      role?: BytesLike | null,\n      account?: string | null,\n      sender?: string | null\n    ): RoleGrantedEventFilter;\n\n    \"RoleRevoked(bytes32,address,address)\"(\n      role?: BytesLike | null,\n      account?: string | null,\n      sender?: string | null\n    ): RoleRevokedEventFilter;\n    RoleRevoked(\n      role?: BytesLike | null,\n      account?: string | null,\n      sender?: string | null\n    ): RoleRevokedEventFilter;\n\n    \"RoyaltyForToken(uint256,address,uint256)\"(\n      tokenId?: BigNumberish | null,\n      royaltyRecipient?: null,\n      royaltyBps?: null\n    ): RoyaltyForTokenEventFilter;\n    RoyaltyForToken(\n      tokenId?: BigNumberish | null,\n      royaltyRecipient?: null,\n      royaltyBps?: null\n    ): RoyaltyForTokenEventFilter;\n\n    \"TokensMinted(address,uint256,string,uint256)\"(\n      mintedTo?: string | null,\n      tokenIdMinted?: BigNumberish | null,\n      uri?: null,\n      quantityMinted?: null\n    ): TokensMintedEventFilter;\n    TokensMinted(\n      mintedTo?: string | null,\n      tokenIdMinted?: BigNumberish | null,\n      uri?: null,\n      quantityMinted?: null\n    ): TokensMintedEventFilter;\n\n    \"TokensMintedWithSignature(address,address,uint256,tuple)\"(\n      signer?: string | null,\n      mintedTo?: string | null,\n      tokenIdMinted?: BigNumberish | null,\n      mintRequest?: null\n    ): TokensMintedWithSignatureEventFilter;\n    TokensMintedWithSignature(\n      signer?: string | null,\n      mintedTo?: string | null,\n      tokenIdMinted?: BigNumberish | null,\n      mintRequest?: null\n    ): TokensMintedWithSignatureEventFilter;\n\n    \"TransferBatch(address,address,address,uint256[],uint256[])\"(\n      operator?: string | null,\n      from?: string | null,\n      to?: string | null,\n      ids?: null,\n      values?: null\n    ): TransferBatchEventFilter;\n    TransferBatch(\n      operator?: string | null,\n      from?: string | null,\n      to?: string | null,\n      ids?: null,\n      values?: null\n    ): TransferBatchEventFilter;\n\n    \"TransferSingle(address,address,address,uint256,uint256)\"(\n      operator?: string | null,\n      from?: string | null,\n      to?: string | null,\n      id?: null,\n      value?: null\n    ): TransferSingleEventFilter;\n    TransferSingle(\n      operator?: string | null,\n      from?: string | null,\n      to?: string | null,\n      id?: null,\n      value?: null\n    ): TransferSingleEventFilter;\n\n    \"URI(string,uint256)\"(\n      value?: null,\n      id?: BigNumberish | null\n    ): URIEventFilter;\n    URI(value?: null, id?: BigNumberish | null): URIEventFilter;\n  };\n\n  estimateGas: {\n    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<BigNumber>;\n\n    balanceOf(\n      account: string,\n      id: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    balanceOfBatch(\n      accounts: string[],\n      ids: BigNumberish[],\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    burn(\n      account: string,\n      id: BigNumberish,\n      value: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    burnBatch(\n      account: string,\n      ids: BigNumberish[],\n      values: BigNumberish[],\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    contractType(overrides?: CallOverrides): Promise<BigNumber>;\n\n    contractURI(overrides?: CallOverrides): Promise<BigNumber>;\n\n    contractVersion(overrides?: CallOverrides): Promise<BigNumber>;\n\n    getDefaultRoyaltyInfo(overrides?: CallOverrides): Promise<BigNumber>;\n\n    getPlatformFeeInfo(overrides?: CallOverrides): Promise<BigNumber>;\n\n    getRoleAdmin(\n      role: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getRoleMember(\n      role: BytesLike,\n      index: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getRoleMemberCount(\n      role: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    getRoyaltyInfoForToken(\n      _tokenId: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    grantRole(\n      role: BytesLike,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    hasRole(\n      role: BytesLike,\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    initialize(\n      _defaultAdmin: string,\n      _name: string,\n      _symbol: string,\n      _contractURI: string,\n      _trustedForwarders: string[],\n      _primarySaleRecipient: string,\n      _royaltyRecipient: string,\n      _royaltyBps: BigNumberish,\n      _platformFeeBps: BigNumberish,\n      _platformFeeRecipient: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    isApprovedForAll(\n      account: string,\n      operator: string,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    isTrustedForwarder(\n      forwarder: string,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    mintTo(\n      _to: string,\n      _tokenId: BigNumberish,\n      _uri: string,\n      _amount: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    mintWithSignature(\n      _req: ITokenERC1155.MintRequestStruct,\n      _signature: BytesLike,\n      overrides?: PayableOverrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    multicall(\n      data: BytesLike[],\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    name(overrides?: CallOverrides): Promise<BigNumber>;\n\n    nextTokenIdToMint(overrides?: CallOverrides): Promise<BigNumber>;\n\n    owner(overrides?: CallOverrides): Promise<BigNumber>;\n\n    platformFeeBps(overrides?: CallOverrides): Promise<BigNumber>;\n\n    platformFeeRecipient(overrides?: CallOverrides): Promise<BigNumber>;\n\n    primarySaleRecipient(overrides?: CallOverrides): Promise<BigNumber>;\n\n    renounceRole(\n      role: BytesLike,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    revokeRole(\n      role: BytesLike,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    royaltyInfo(\n      tokenId: BigNumberish,\n      salePrice: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    safeBatchTransferFrom(\n      from: string,\n      to: string,\n      ids: BigNumberish[],\n      amounts: BigNumberish[],\n      data: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    safeTransferFrom(\n      from: string,\n      to: string,\n      id: BigNumberish,\n      amount: BigNumberish,\n      data: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    saleRecipientForToken(\n      arg0: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    setApprovalForAll(\n      operator: string,\n      approved: boolean,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    setContractURI(\n      _uri: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    setDefaultRoyaltyInfo(\n      _royaltyRecipient: string,\n      _royaltyBps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    setOwner(\n      _newOwner: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    setPlatformFeeInfo(\n      _platformFeeRecipient: string,\n      _platformFeeBps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    setPrimarySaleRecipient(\n      _saleRecipient: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    setRoyaltyInfoForToken(\n      _tokenId: BigNumberish,\n      _recipient: string,\n      _bps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<BigNumber>;\n\n    supportsInterface(\n      interfaceId: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    symbol(overrides?: CallOverrides): Promise<BigNumber>;\n\n    thirdwebFee(overrides?: CallOverrides): Promise<BigNumber>;\n\n    totalSupply(\n      arg0: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n\n    uri(_tokenId: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;\n\n    verify(\n      _req: ITokenERC1155.MintRequestStruct,\n      _signature: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<BigNumber>;\n  };\n\n  populateTransaction: {\n    DEFAULT_ADMIN_ROLE(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    balanceOf(\n      account: string,\n      id: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    balanceOfBatch(\n      accounts: string[],\n      ids: BigNumberish[],\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    burn(\n      account: string,\n      id: BigNumberish,\n      value: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    burnBatch(\n      account: string,\n      ids: BigNumberish[],\n      values: BigNumberish[],\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    contractType(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    contractURI(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    contractVersion(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    getDefaultRoyaltyInfo(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getPlatformFeeInfo(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getRoleAdmin(\n      role: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getRoleMember(\n      role: BytesLike,\n      index: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getRoleMemberCount(\n      role: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    getRoyaltyInfoForToken(\n      _tokenId: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    grantRole(\n      role: BytesLike,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    hasRole(\n      role: BytesLike,\n      account: string,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    initialize(\n      _defaultAdmin: string,\n      _name: string,\n      _symbol: string,\n      _contractURI: string,\n      _trustedForwarders: string[],\n      _primarySaleRecipient: string,\n      _royaltyRecipient: string,\n      _royaltyBps: BigNumberish,\n      _platformFeeBps: BigNumberish,\n      _platformFeeRecipient: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    isApprovedForAll(\n      account: string,\n      operator: string,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    isTrustedForwarder(\n      forwarder: string,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    mintTo(\n      _to: string,\n      _tokenId: BigNumberish,\n      _uri: string,\n      _amount: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    mintWithSignature(\n      _req: ITokenERC1155.MintRequestStruct,\n      _signature: BytesLike,\n      overrides?: PayableOverrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    multicall(\n      data: BytesLike[],\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    name(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    nextTokenIdToMint(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    platformFeeBps(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    platformFeeRecipient(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    primarySaleRecipient(\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    renounceRole(\n      role: BytesLike,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    revokeRole(\n      role: BytesLike,\n      account: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    royaltyInfo(\n      tokenId: BigNumberish,\n      salePrice: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    safeBatchTransferFrom(\n      from: string,\n      to: string,\n      ids: BigNumberish[],\n      amounts: BigNumberish[],\n      data: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    safeTransferFrom(\n      from: string,\n      to: string,\n      id: BigNumberish,\n      amount: BigNumberish,\n      data: BytesLike,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    saleRecipientForToken(\n      arg0: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    setApprovalForAll(\n      operator: string,\n      approved: boolean,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setContractURI(\n      _uri: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setDefaultRoyaltyInfo(\n      _royaltyRecipient: string,\n      _royaltyBps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setOwner(\n      _newOwner: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setPlatformFeeInfo(\n      _platformFeeRecipient: string,\n      _platformFeeBps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setPrimarySaleRecipient(\n      _saleRecipient: string,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    setRoyaltyInfoForToken(\n      _tokenId: BigNumberish,\n      _recipient: string,\n      _bps: BigNumberish,\n      overrides?: Overrides & { from?: string | Promise<string> }\n    ): Promise<PopulatedTransaction>;\n\n    supportsInterface(\n      interfaceId: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    symbol(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    thirdwebFee(overrides?: CallOverrides): Promise<PopulatedTransaction>;\n\n    totalSupply(\n      arg0: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    uri(\n      _tokenId: BigNumberish,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n\n    verify(\n      _req: ITokenERC1155.MintRequestStruct,\n      _signature: BytesLike,\n      overrides?: CallOverrides\n    ): Promise<PopulatedTransaction>;\n  };\n}\n"],"mappings":"odAAA","names":[]}